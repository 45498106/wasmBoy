{"version":3,"sources":["webpack:///webpack/bootstrap 7ca25958cc02af5edf80","webpack:///./node_modules/idb/lib/node.js","webpack:///./node_modules/preact/dist/preact.min.js","webpack:///./style.css?b85c","webpack:///./node_modules/audiobuffer-to-wav/index.js","webpack:///./node_modules/unfetch/dist/unfetch.es.js","webpack:///./node_modules/promise-polyfill/src/index.js","webpack:///./lib/graphics/graphics.js","webpack:///./lib/audio/audio.js","webpack:///./node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","webpack:///./lib/controller/controller.js","webpack:///./lib/memory/idb.js","webpack:///./lib/memory/memory.js","webpack:///./lib/wasmboy.js","webpack:///./debugger/wasmboySystemControls.js","webpack:///./debugger/numberBaseTable.js","webpack:///./debugger/wasmboyDebugger.js","webpack:///./debugger/index.js","webpack:///./index.js","webpack:///./node_modules/performance-now/lib/performance-now.js","webpack:///./node_modules/idb/lib/idb.js","webpack:///./node_modules/raf/index.js","webpack:///./dist/wasm/index.untouched.wasm"],"names":["indexedDB","module","exports","require","open","Promise","reject","delete","e","t","n","o","r","i","l","a","E","arguments","length","W","push","children","pop","u","nodeName","attributes","key","S","vnode","slice","call","__d","A","debounceRendering","P","k","splitText","_componentConstructor","__n","toLowerCase","defaultProps","_","document","createElementNS","createElement","p","parentNode","removeChild","c","style","cssText","V","test","innerHTML","__html","replace","substring","addEventListener","f","removeEventListener","__l","s","removeAttribute","removeAttributeNS","setAttributeNS","setAttribute","className","type","event","d","D","afterMount","componentDidMount","h","H","R","ownerSVGElement","j","m","appendChild","_component","nodeValue","createTextNode","replaceChild","b","__preactattr_","U","firstChild","name","value","nextSibling","v","dangerouslySetInnerHTML","g","childNodes","y","w","C","x","N","__k","trim","insertBefore","L","ref","lastChild","previousSibling","constructor","I","prototype","render","T","__b","splice","__x","__r","base","componentWillMount","componentWillReceiveProps","context","__c","__p","props","syncComponentUpdates","state","__s","shouldComponentUpdate","componentWillUpdate","getChildContext","M","__u","unshift","componentDidUpdate","afterUpdate","__h","beforeUnmount","componentWillUnmount","resolve","then","bind","setTimeout","setState","forceUpdate","$","cloneElement","Component","rerender","options","self","preact","audioBufferToWav","buffer","opt","numChannels","numberOfChannels","sampleRate","format","float32","bitDepth","result","interleave","getChannelData","encodeWAV","samples","bytesPerSample","blockAlign","ArrayBuffer","view","DataView","writeString","setUint32","setUint16","floatTo16BitPCM","writeFloat32","inputL","inputR","Float32Array","index","inputIndex","output","offset","input","setFloat32","Math","max","min","setInt16","string","setUint8","charCodeAt","fetch","url","request","XMLHttpRequest","method","headers","setRequestHeader","withCredentials","credentials","onload","response","onerror","send","body","keys","all","header","getAllResponseHeaders","ok","status","statusText","responseURL","clone","text","responseText","json","JSON","parse","blob","Blob","entries","get","has","setTimeoutFunc","noop","fn","thisArg","apply","handle","deferred","_state","_value","_deferreds","_handled","_immediateFn","cb","onFulfilled","onRejected","promise","ret","newValue","TypeError","finale","doResolve","_unhandledRejectionFn","len","Handler","done","reason","ex","undefined","_proto","catch","prom","arr","args","Array","remaining","res","val","race","values","setImmediate","err","console","warn","GAMEBOY_CAMERA_WIDTH","GAMEBOY_CAMERA_HEIGHT","WASMBOY_MEMORY_CURRENT_RENDERED_FRAME","WASMBOY_MAX_FRAMES_IN_QUEUE","wasmInstance","wasmByteMemory","frameQueue","frameQueueRenderPromise","canvasElement","canvasContext","canvasImageData","initialize","getContext","width","height","createImageData","clearRect","error","renderFrame","imageDataArray","Uint8ClampedArray","color","imageDataIndex","alpha","data","putImageData","WasmBoyGraphics","DEFAULT_AUDIO_LATENCY_IN_MILLI","WASMBOY_MIN_TIME_REMAINING_IN_MILLI","WASMBOY_TIME_STRETCH_RESOLVED_LATENCY","WASMBOY_MEMORY_SOUND_INDEX","WASMBOY_SAMPLE_RATE","DEFAULT_AUDIO_LATENCY_IN_SECONDS","WASMBOY_MIN_TIME_REMAINING_IN_SECONDS","getUnsignedAudioSampleAsFloat","audioSample","abs","audioContext","audioBuffer","audioPlaytime","timeStretchingEnabled","timeStretchPlaytime","window","AudioContext","webkitAudioContext","playAudio","fps","currentTime","timeUntilNextSample","audioContextCurrentTime","audioContextCurrentTimeWithLatency","log","toFixed","getAudioQueueIndex","wasmBoyNumberOfSamples","createBuffer","leftChannelBuffer","rightChannelBuffer","bufferIndex","wasmBoyNumberOfSamplesForStereo","resetAudioQueue","source","createBufferSource","connect","destination","start","debugSaveCurrentAudioBufferToWav","toWav","wav","URL","createObjectURL","anchor","href","download","click","revokeObjectURL","WasmBoyAudio","keyInputSchema","ACTIVE","KEY_CODE","gamepadInputSchema","BUTTON_ID","JOYSTICK","AXIS_ID","IS_POSITIVE","touchInputSchema","ELEMENT","TYPE","DIRECTION","EVENT_HANDLER","BOUNDING_RECT","keyMapSchema","UP","KEYBOARD","GAMEPAD","TOUCHPAD","RIGHT","DOWN","LEFT","B","SELECT","START","getKeyInput","keyCode","getGamepadInput","gamepadButtonId","axisId","axisIsPositive","getTouchInput","element","direction","eventHandler","boundingRect","getBoundingClientRect","eventListenerCallback","KeyMapSchema","Key","BACKSPACE","TAB","RETURN","SHIFT","CTRL","ALT","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","Q","X","Z","SEMI_COLON","SINGLE_QUOTE","BACK_SLASH","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","keymap","KEYMAP","classCallCheck","instance","Constructor","createClass","defineProperties","target","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","getAnalogStickAxis","gamepad","axes","isButtonPressed","buttonId","buttons","pressed","ResponsiveGamepadService","gamepadAnalogStickDeadZone","keyMapKeys","keyMap","_this","updateKeyboard","updateTouchpadRect","addTouchInput","keyMapKey","_this2","touchInput","updateTouchpad","getState","_this3","updateGamepad","controllerState","forEach","keyboardState","some","keyInput","gamepadState","gamepadInput","touchState","keyEvent","_this4","isPressed","_this5","gamepads","navigator","getGamepads","_loop","_ret","_this6","resetTouchDpad","_this7","dpadKeys","dpadKey","includes","touches","preventDefault","touch","rectCenterX","right","left","rectCenterY","bottom","top","touchX","clientX","touchY","clientY","horizontalInfluence","isHorizontal","deadzoneSize","isLeft","isUp","ResponsiveGamepad","updateController","setJoypadState","WasmBoyController","idb","keyval","dbPromise","upgradeDB","createObjectStore","db","transaction","objectStore","set","tx","put","complete","clear","store","iterateKeyCursor","iterateCursor","cursor","continue","idbKeyval","MEMORY_ADDRESSES","CARTRIDGE_RAM","CARTRIDGE_ROM","WASMBOY_INTERNAL_STATE","LOCATION","SIZE","GAMEBOY_MEMORY","WASMBOY_UNLOAD_STORAGE","WASMBOY_SAVE_STATE_SCHEMA","wasmBoyMemory","wasmBoyInternalState","gameBoyMemory","cartridgeRam","date","isAuto","getCartridgeHeader","headerLength","headerArray","Uint8Array","getCartridgeRam","cartridgeType","ramSize","getSaveState","saveState","Date","now","loadSaveState","loadedCartridgeMemoryState","ROM","RAM","includeBootRom","saveStateMemoryKeys","localStorage","setItem","stringify","unloadStorage","getItem","unloadStorageObject","removeItem","saveCartridgeRam","initializeHeadless","getLoadedCartridgeMemoryState","clearMemory","loadCartridgeRom","gameBytes","bootRom","passedHeader","passedCartridgeRam","cartridgeObject","loadCartridgeRam","passedSaveState","saveStates","loadState","saveStateIndex","getCartridgeObject","WasmBoyMemory","raf","WASMBOY_MEMORY_SIZE","headless","paused","ready","renderId","updateId","isAudioEnabled","frameRate","frameTimeStamps","frameSkip","logRequest","performanceTimestamps","loadGame","game","pauseGame","initPromises","_fetchGameAsByteArray","_getWasmInstance","responses","startGame","resumeGame","_emulatorUpdate","setInterval","_emulatorRender","cancel","clearInterval","setFps","getFps","getWasmBoyMemoryForLoadedGame","currentHighResTime","performance","shift","update","getProgramCounter","toString","memoryBase","wasmModule","env","message","arg0","arg1","arg2","arg3","arg4","arg5","Uint32Array","memory","str","String","fromCharCode","Uint16Array","hexLog","logString","performanceTimestamp","id","throttle","totalTime","timestamp","endTime","timeDifference","instantiatedWasm","byteLength","grow","isView","size","fileReader","FileReader","byteArray","readAsArrayBuffer","arrayBuffer","bytes","WasmBoy","fpsCounter","wasmboy","files","object","nextProps","numberToBinaryString","number","hexString","binaryString","valueAtIncrementer","parseInt","charAt","paddedValueAtIncrementer","getTableCellsForValueWithBase","valueBase","tableCells","getTableCellsForObjectKeys","objectKeysAsTableCells","WASMBOY_MEMORY_GAMEBOY_INTERNAL_MEMORY","getWasmBoyOffsetFromGameBoyOffset","gameboyOffset","cpu","ppu","timers","interrupts","stepOpcode","wasmboyGraphics","skipDebugOutput","numberOfCycles","emulationStep","updateDebugInfo","Error","runNumberOfOpcodes","numberOfOpcodes","stopAtOpcode","stopOpcodeShouldHaveValue","opcodesToRun","breakPoint","skipInitialStep","requestAnimationFrame","getOpcodeAtProgramCounter","getPreviousOpcode","getStackPointer","getRegisterA","getRegisterF","getRegisterB","getRegisterC","getRegisterD","getRegisterE","getRegisterH","getRegisterL","areInterruptsEnabled","wasmboyAudio","querySelector","dpadElement","getElementById","startElement","selectElement","aElement","bElement","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","process","hr","uptime","getTime","toArray","promisifyRequest","onsuccess","promisifyRequestCall","obj","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","prop","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Index","_index","IDBIndex","_cursor","_request","IDBCursor","methodName","ObjectStore","_store","createIndex","IDBObjectStore","Transaction","idbTransaction","_tx","oncomplete","onabort","IDBTransaction","UpgradeDB","oldVersion","_db","IDBDatabase","DB","funcName","callback","nativeObject","getAll","query","count","items","exp","version","upgradeCallback","onupgradeneeded","default","root","global","vendors","suffix","caf","last","queue","frameDuration","_now","next","cp","cancelled","round","polyfill","cancelAnimationFrame"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/wasmBoy/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"JkW7\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7ca25958cc02af5edf80","if (typeof indexedDB != 'undefined') {\n  module.exports = require('./idb.js');\n}\nelse {\n  module.exports = {\n    open: function () {\n      return Promise.reject('IDB requires a browser environment');\n    },\n    delete: function () {\n      return Promise.reject('IDB requires a browser environment');\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/idb/lib/node.js","!function(){\"use strict\";function e(){}function t(t,n){var o,r,i,l,a=E;for(l=arguments.length;l-- >2;)W.push(arguments[l]);n&&null!=n.children&&(W.length||W.push(n.children),delete n.children);while(W.length)if((r=W.pop())&&void 0!==r.pop)for(l=r.length;l--;)W.push(r[l]);else\"boolean\"==typeof r&&(r=null),(i=\"function\"!=typeof t)&&(null==r?r=\"\":\"number\"==typeof r?r+=\"\":\"string\"!=typeof r&&(i=!1)),i&&o?a[a.length-1]+=r:a===E?a=[r]:a.push(r),o=i;var u=new e;return u.nodeName=t,u.children=a,u.attributes=null==n?void 0:n,u.key=null==n?void 0:n.key,void 0!==S.vnode&&S.vnode(u),u}function n(e,t){for(var n in t)e[n]=t[n];return e}function o(e,o){return t(e.nodeName,n(n({},e.attributes),o),arguments.length>2?[].slice.call(arguments,2):e.children)}function r(e){!e.__d&&(e.__d=!0)&&1==A.push(e)&&(S.debounceRendering||P)(i)}function i(){var e,t=A;A=[];while(e=t.pop())e.__d&&k(e)}function l(e,t,n){return\"string\"==typeof t||\"number\"==typeof t?void 0!==e.splitText:\"string\"==typeof t.nodeName?!e._componentConstructor&&a(e,t.nodeName):n||e._componentConstructor===t.nodeName}function a(e,t){return e.__n===t||e.nodeName.toLowerCase()===t.toLowerCase()}function u(e){var t=n({},e.attributes);t.children=e.children;var o=e.nodeName.defaultProps;if(void 0!==o)for(var r in o)void 0===t[r]&&(t[r]=o[r]);return t}function _(e,t){var n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",e):document.createElement(e);return n.__n=e,n}function p(e){var t=e.parentNode;t&&t.removeChild(e)}function c(e,t,n,o,r){if(\"className\"===t&&(t=\"class\"),\"key\"===t);else if(\"ref\"===t)n&&n(null),o&&o(e);else if(\"class\"!==t||r)if(\"style\"===t){if(o&&\"string\"!=typeof o&&\"string\"!=typeof n||(e.style.cssText=o||\"\"),o&&\"object\"==typeof o){if(\"string\"!=typeof n)for(var i in n)i in o||(e.style[i]=\"\");for(var i in o)e.style[i]=\"number\"==typeof o[i]&&!1===V.test(i)?o[i]+\"px\":o[i]}}else if(\"dangerouslySetInnerHTML\"===t)o&&(e.innerHTML=o.__html||\"\");else if(\"o\"==t[0]&&\"n\"==t[1]){var l=t!==(t=t.replace(/Capture$/,\"\"));t=t.toLowerCase().substring(2),o?n||e.addEventListener(t,f,l):e.removeEventListener(t,f,l),(e.__l||(e.__l={}))[t]=o}else if(\"list\"!==t&&\"type\"!==t&&!r&&t in e)s(e,t,null==o?\"\":o),null!=o&&!1!==o||e.removeAttribute(t);else{var a=r&&t!==(t=t.replace(/^xlink\\:?/,\"\"));null==o||!1===o?a?e.removeAttributeNS(\"http://www.w3.org/1999/xlink\",t.toLowerCase()):e.removeAttribute(t):\"function\"!=typeof o&&(a?e.setAttributeNS(\"http://www.w3.org/1999/xlink\",t.toLowerCase(),o):e.setAttribute(t,o))}else e.className=o||\"\"}function s(e,t,n){try{e[t]=n}catch(e){}}function f(e){return this.__l[e.type](S.event&&S.event(e)||e)}function d(){var e;while(e=D.pop())S.afterMount&&S.afterMount(e),e.componentDidMount&&e.componentDidMount()}function h(e,t,n,o,r,i){H++||(R=null!=r&&void 0!==r.ownerSVGElement,j=null!=e&&!(\"__preactattr_\"in e));var l=m(e,t,n,o,i);return r&&l.parentNode!==r&&r.appendChild(l),--H||(j=!1,i||d()),l}function m(e,t,n,o,r){var i=e,l=R;if(null!=t&&\"boolean\"!=typeof t||(t=\"\"),\"string\"==typeof t||\"number\"==typeof t)return e&&void 0!==e.splitText&&e.parentNode&&(!e._component||r)?e.nodeValue!=t&&(e.nodeValue=t):(i=document.createTextNode(t),e&&(e.parentNode&&e.parentNode.replaceChild(i,e),b(e,!0))),i.__preactattr_=!0,i;var u=t.nodeName;if(\"function\"==typeof u)return U(e,t,n,o);if(R=\"svg\"===u||\"foreignObject\"!==u&&R,u+=\"\",(!e||!a(e,u))&&(i=_(u,R),e)){while(e.firstChild)i.appendChild(e.firstChild);e.parentNode&&e.parentNode.replaceChild(i,e),b(e,!0)}var p=i.firstChild,c=i.__preactattr_,s=t.children;if(null==c){c=i.__preactattr_={};for(var f=i.attributes,d=f.length;d--;)c[f[d].name]=f[d].value}return!j&&s&&1===s.length&&\"string\"==typeof s[0]&&null!=p&&void 0!==p.splitText&&null==p.nextSibling?p.nodeValue!=s[0]&&(p.nodeValue=s[0]):(s&&s.length||null!=p)&&v(i,s,n,o,j||null!=c.dangerouslySetInnerHTML),g(i,t.attributes,c),R=l,i}function v(e,t,n,o,r){var i,a,u,_,c,s=e.childNodes,f=[],d={},h=0,v=0,y=s.length,g=0,w=t?t.length:0;if(0!==y)for(var C=0;C<y;C++){var x=s[C],N=x.__preactattr_,k=w&&N?x._component?x._component.__k:N.key:null;null!=k?(h++,d[k]=x):(N||(void 0!==x.splitText?!r||x.nodeValue.trim():r))&&(f[g++]=x)}if(0!==w)for(var C=0;C<w;C++){_=t[C],c=null;var k=_.key;if(null!=k)h&&void 0!==d[k]&&(c=d[k],d[k]=void 0,h--);else if(!c&&v<g)for(i=v;i<g;i++)if(void 0!==f[i]&&l(a=f[i],_,r)){c=a,f[i]=void 0,i===g-1&&g--,i===v&&v++;break}c=m(c,_,n,o),u=s[C],c&&c!==e&&c!==u&&(null==u?e.appendChild(c):c===u.nextSibling?p(u):e.insertBefore(c,u))}if(h)for(var C in d)void 0!==d[C]&&b(d[C],!1);while(v<=g)void 0!==(c=f[g--])&&b(c,!1)}function b(e,t){var n=e._component;n?L(n):(null!=e.__preactattr_&&e.__preactattr_.ref&&e.__preactattr_.ref(null),!1!==t&&null!=e.__preactattr_||p(e),y(e))}function y(e){e=e.lastChild;while(e){var t=e.previousSibling;b(e,!0),e=t}}function g(e,t,n){var o;for(o in n)t&&null!=t[o]||null==n[o]||c(e,o,n[o],n[o]=void 0,R);for(o in t)\"children\"===o||\"innerHTML\"===o||o in n&&t[o]===(\"value\"===o||\"checked\"===o?e[o]:n[o])||c(e,o,n[o],n[o]=t[o],R)}function w(e){var t=e.constructor.name;(I[t]||(I[t]=[])).push(e)}function C(e,t,n){var o,r=I[e.name];if(e.prototype&&e.prototype.render?(o=new e(t,n),T.call(o,t,n)):(o=new T(t,n),o.constructor=e,o.render=x),r)for(var i=r.length;i--;)if(r[i].constructor===e){o.__b=r[i].__b,r.splice(i,1);break}return o}function x(e,t,n){return this.constructor(e,n)}function N(e,t,n,o,i){e.__x||(e.__x=!0,(e.__r=t.ref)&&delete t.ref,(e.__k=t.key)&&delete t.key,!e.base||i?e.componentWillMount&&e.componentWillMount():e.componentWillReceiveProps&&e.componentWillReceiveProps(t,o),o&&o!==e.context&&(e.__c||(e.__c=e.context),e.context=o),e.__p||(e.__p=e.props),e.props=t,e.__x=!1,0!==n&&(1!==n&&!1===S.syncComponentUpdates&&e.base?r(e):k(e,1,i)),e.__r&&e.__r(e))}function k(e,t,o,r){if(!e.__x){var i,l,a,_=e.props,p=e.state,c=e.context,s=e.__p||_,f=e.__s||p,m=e.__c||c,v=e.base,y=e.__b,g=v||y,w=e._component,x=!1;if(v&&(e.props=s,e.state=f,e.context=m,2!==t&&e.shouldComponentUpdate&&!1===e.shouldComponentUpdate(_,p,c)?x=!0:e.componentWillUpdate&&e.componentWillUpdate(_,p,c),e.props=_,e.state=p,e.context=c),e.__p=e.__s=e.__c=e.__b=null,e.__d=!1,!x){i=e.render(_,p,c),e.getChildContext&&(c=n(n({},c),e.getChildContext()));var U,T,M=i&&i.nodeName;if(\"function\"==typeof M){var W=u(i);l=w,l&&l.constructor===M&&W.key==l.__k?N(l,W,1,c,!1):(U=l,e._component=l=C(M,W,c),l.__b=l.__b||y,l.__u=e,N(l,W,0,c,!1),k(l,1,o,!0)),T=l.base}else a=g,U=w,U&&(a=e._component=null),(g||1===t)&&(a&&(a._component=null),T=h(a,i,c,o||!v,g&&g.parentNode,!0));if(g&&T!==g&&l!==w){var E=g.parentNode;E&&T!==E&&(E.replaceChild(T,g),U||(g._component=null,b(g,!1)))}if(U&&L(U),e.base=T,T&&!r){var P=e,V=e;while(V=V.__u)(P=V).base=T;T._component=P,T._componentConstructor=P.constructor}}if(!v||o?D.unshift(e):x||(e.componentDidUpdate&&e.componentDidUpdate(s,f,m),S.afterUpdate&&S.afterUpdate(e)),null!=e.__h)while(e.__h.length)e.__h.pop().call(e);H||r||d()}}function U(e,t,n,o){var r=e&&e._component,i=r,l=e,a=r&&e._componentConstructor===t.nodeName,_=a,p=u(t);while(r&&!_&&(r=r.__u))_=r.constructor===t.nodeName;return r&&_&&(!o||r._component)?(N(r,p,3,n,o),e=r.base):(i&&!a&&(L(i),e=l=null),r=C(t.nodeName,p,n),e&&!r.__b&&(r.__b=e,l=null),N(r,p,1,n,o),e=r.base,l&&e!==l&&(l._component=null,b(l,!1))),e}function L(e){S.beforeUnmount&&S.beforeUnmount(e);var t=e.base;e.__x=!0,e.componentWillUnmount&&e.componentWillUnmount(),e.base=null;var n=e._component;n?L(n):t&&(t.__preactattr_&&t.__preactattr_.ref&&t.__preactattr_.ref(null),e.__b=t,p(t),w(e),y(t)),e.__r&&e.__r(null)}function T(e,t){this.__d=!0,this.context=t,this.props=e,this.state=this.state||{}}function M(e,t,n){return h(n,e,{},!1,t,!1)}var S={},W=[],E=[],P=\"function\"==typeof Promise?Promise.resolve().then.bind(Promise.resolve()):setTimeout,V=/acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,A=[],D=[],H=0,R=!1,j=!1,I={};n(T.prototype,{setState:function(e,t){var o=this.state;this.__s||(this.__s=n({},o)),n(o,\"function\"==typeof e?e(o,this.props):e),t&&(this.__h=this.__h||[]).push(t),r(this)},forceUpdate:function(e){e&&(this.__h=this.__h||[]).push(e),k(this,2)},render:function(){}});var $={h:t,createElement:t,cloneElement:o,Component:T,render:M,rerender:i,options:S};\"undefined\"!=typeof module?module.exports=$:self.preact=$}();\n//# sourceMappingURL=preact.min.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/preact/dist/preact.min.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./style.css\n// module id = FWi5\n// module chunks = 0","module.exports = audioBufferToWav\nfunction audioBufferToWav (buffer, opt) {\n  opt = opt || {}\n\n  var numChannels = buffer.numberOfChannels\n  var sampleRate = buffer.sampleRate\n  var format = opt.float32 ? 3 : 1\n  var bitDepth = format === 3 ? 32 : 16\n\n  var result\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1))\n  } else {\n    result = buffer.getChannelData(0)\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8\n  var blockAlign = numChannels * bytesPerSample\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample)\n  var view = new DataView(buffer)\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF')\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true)\n  /* RIFF type */\n  writeString(view, 8, 'WAVE')\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ')\n  /* format chunk length */\n  view.setUint32(16, 16, true)\n  /* sample format (raw) */\n  view.setUint16(20, format, true)\n  /* channel count */\n  view.setUint16(22, numChannels, true)\n  /* sample rate */\n  view.setUint32(24, sampleRate, true)\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true)\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true)\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true)\n  /* data chunk identifier */\n  writeString(view, 36, 'data')\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true)\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples)\n  } else {\n    writeFloat32(view, 44, samples)\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length\n  var result = new Float32Array(length)\n\n  var index = 0\n  var inputIndex = 0\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex]\n    result[index++] = inputR[inputIndex]\n    inputIndex++\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true)\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]))\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true)\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/audiobuffer-to-wav/index.js","var index = typeof fetch=='function' ? fetch.bind() : function(url, options) {\n\toptions = options || {};\n\treturn new Promise( function (resolve, reject) {\n\t\tvar request = new XMLHttpRequest();\n\n\t\trequest.open(options.method || 'get', url);\n\n\t\tfor (var i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\trequest.onload = function () {\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.send(options.body);\n\n\t\tfunction response() {\n\t\t\tvar keys = [],\n\t\t\t\tall = [],\n\t\t\t\theaders = {},\n\t\t\t\theader;\n\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):\\s*([\\s\\S]*?)$/gm, function (m, key, value) {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theader = headers[key];\n\t\t\t\theaders[key] = header ? (header + \",\" + value) : value;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tok: (request.status/200|0) == 1,\t\t// 200-299\n\t\t\t\tstatus: request.status,\n\t\t\t\tstatusText: request.statusText,\n\t\t\t\turl: request.responseURL,\n\t\t\t\tclone: response,\n\t\t\t\ttext: function () { return Promise.resolve(request.responseText); },\n\t\t\t\tjson: function () { return Promise.resolve(request.responseText).then(JSON.parse); },\n\t\t\t\tblob: function () { return Promise.resolve(new Blob([request.response])); },\n\t\t\t\theaders: {\n\t\t\t\t\tkeys: function () { return keys; },\n\t\t\t\t\tentries: function () { return all; },\n\t\t\t\t\tget: function (n) { return headers[n.toLowerCase()]; },\n\t\t\t\t\thas: function (n) { return n.toLowerCase() in headers; }\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n};\n\nexport default index;\n//# sourceMappingURL=unfetch.es.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/unfetch/dist/unfetch.es.js","// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nvar _proto = Promise.prototype;\n_proto.catch = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\n_proto.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nexport default Promise;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/promise-polyfill/src/index.js","import Promise from 'promise-polyfill';\n\n// Performance tips with canvas:\n// https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n\n// Declare Our Constants\nconst GAMEBOY_CAMERA_WIDTH = 160;\nconst GAMEBOY_CAMERA_HEIGHT = 144;\nconst WASMBOY_MEMORY_CURRENT_RENDERED_FRAME = 0x028400;\n// Must be greater than 4, or else will have really weird performance\n// noticed you get about 4 frames for every 4096 samples\nconst WASMBOY_MAX_FRAMES_IN_QUEUE = 6;\n\nclass WasmBoyGraphicsService {\n  constructor() {\n    this.wasmInstance = undefined;\n    this.wasmByteMemory = undefined;\n\n    this.frameQueue = undefined;\n    this.frameQueueRenderPromise = undefined;\n\n    this.canvasElement = undefined;\n    this.canvasContext = undefined;\n    this.canvasImageData = undefined;\n  }\n\n  initialize(canvasElement, wasmInstance, wasmByteMemory) {\n    this.wasmInstance = wasmInstance;\n    this.wasmByteMemory = wasmByteMemory;\n    // Reset our frame queue and render promises\n    this.frameQueue = [];\n\n    return new Promise((resolve, reject) => {\n      try {\n        // Prepare our canvas\n        this.canvasElement = canvasElement;\n        this.canvasContext = this.canvasElement.getContext('2d');\n        this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;\n        this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;\n        this.canvasImageData = this.canvasContext.createImageData(GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n\n        // Add some css for smooth 8-bit canvas scaling\n        // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n        // https://caniuse.com/#feat=css-crisp-edges\n        this.canvasElement.style = `\n          image-rendering: optimizeSpeed;\n          image-rendering: -moz-crisp-edges;\n          image-rendering: -webkit-optimize-contrast;\n          image-rendering: -o-crisp-edges;\n          image-rendering: pixelated;\n          -ms-interpolation-mode: nearest-neighbor;\n        `;\n\n        // Fill the canvas with a blank screen\n        // using client width since we are not requiring a width and height oin the canvas\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n        // TODO: Mention respopnsive canvas scaling in the docs\n        this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n        resolve();\n      } catch(error) {\n        reject(error);\n      }\n    });\n  }\n\n  // Function to render a frame\n  // Will add the frame to the frame queue to be rendered\n  // Returns the promise from this.drawFrameQueue\n  // Which resolves once all frames are rendered\n  renderFrame() {\n    return new Promise((resolve) => {\n      // Draw the pixels\n      // 160x144\n      // Split off our image Data\n      const imageDataArray = new Uint8ClampedArray(GAMEBOY_CAMERA_HEIGHT * GAMEBOY_CAMERA_WIDTH * 4);\n\n      for(let y = 0; y < GAMEBOY_CAMERA_HEIGHT; y++) {\n        for (let x = 0; x < GAMEBOY_CAMERA_WIDTH; x++) {\n\n          const color = this.wasmByteMemory[\n            WASMBOY_MEMORY_CURRENT_RENDERED_FRAME + x + (y * GAMEBOY_CAMERA_WIDTH)\n          ];\n\n          // Doing graphics using second answer on:\n          // https://stackoverflow.com/questions/4899799/whats-the-best-way-to-set-a-single-pixel-in-an-html5-canvas\n          // Image Data mapping\n          const imageDataIndex = (x + (y * GAMEBOY_CAMERA_WIDTH)) * 4;\n\n          // TODO: Allow other colors\n\n          // The original gameboy had 4 colors going to use alpha to represent each\n          let alpha = 0;\n\n          if(color === 1) {\n            // Alpha already set\n          } else if (color === 2) {\n            // 85 33% transparent\n            alpha = 85;\n          } else if (color === 3) {\n            // 169 66% transparent\n            alpha = 169;\n          } else {\n            // 255 no transparency\n            alpha = 255;\n          }\n\n          imageDataArray[imageDataIndex] = 0;\n          imageDataArray[imageDataIndex + 1] = 0;\n          imageDataArray[imageDataIndex + 2] = 0;\n          imageDataArray[imageDataIndex + 3] = alpha;\n        }\n      }\n\n      // Add our new imageData\n      for(let i = 0; i < imageDataArray.length; i++) {\n        this.canvasImageData.data[i] = imageDataArray[i];\n      }\n\n      // TODO: Allow changing gameboy background color\n      // https://designpieces.com/palette/game-boy-original-color-palette-hex-and-rgb/\n      //this.canvasContext.fillStyle = \"#9bbc0f\";\n      //this.canvasContext.fillRect(0, 0, this.canvasElement.clientWidth, this.canvasElement.clientHeight);\n\n      this.canvasContext.clearRect(0, 0, GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n      this.canvasContext.putImageData(this.canvasImageData, 0, 0);\n      \n      resolve();\n    });\n  }\n}\n\nexport const WasmBoyGraphics = new WasmBoyGraphicsService();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/graphics/graphics.js","// Tons of help from:\n// https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html\n// https://github.com/binji/binjgb/blob/master/demo/demo.js\n// Web Audio API is tricky!\n\nimport Promise from 'promise-polyfill';\n\n// Define our performance constants\n// Both of these make it sound off\n// Latency controls how much delay audio has, larger = more delay, goal is to be as small as possible\n// Time remaining controls how far ahead we can be., larger = more frames rendered before playing a new set of samples. goal is to be as small as possible. May want to adjust this number according to performance of device\n// These magic numbers just come from preference, can be set as options\nconst DEFAULT_AUDIO_LATENCY_IN_MILLI = 50;\nconst WASMBOY_MIN_TIME_REMAINING_IN_MILLI = 30;\n\nconst WASMBOY_TIME_STRETCH_RESOLVED_LATENCY = 500;\n\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_MEMORY_SOUND_INDEX = 0x053800;\nconst WASMBOY_SAMPLE_RATE = 48000;\n\n// Some canstants that use the ones above that will allow for faster performance\nconst DEFAULT_AUDIO_LATENCY_IN_SECONDS = DEFAULT_AUDIO_LATENCY_IN_MILLI / 1000;\nconst WASMBOY_MIN_TIME_REMAINING_IN_SECONDS = WASMBOY_MIN_TIME_REMAINING_IN_MILLI / 1000;\n\nconst getUnsignedAudioSampleAsFloat = (audioSample) => {\n  // Subtract 1 as it is added so the value is not empty\n  audioSample -= 1;\n  // Divide by 127 to get back to our float scale\n  audioSample = audioSample / 127\n  // Subtract 1 to regain our sign\n  audioSample -= 1;\n\n  // Because of the innacuracy of converting an unsigned int to a signed float\n  // We will have some leftovers when doing the conversion.\n  // When testing with Pokemon blue, when it is supposed to be complete silence in the intro,\n  // It shows 0.007874015748031482, meaning we want to cut our values lower than this\n  if (Math.abs(audioSample) < 0.008) {\n    audioSample = 0;\n  }\n\n  // Return, but divide by lower volume, PCM is loouuuuddd\n  return audioSample / 2.5;\n}\n\nclass WasmBoyAudioService {\n    constructor() {\n      // Wasmboy instance and memory\n      this.wasmInstance = undefined;\n      this.wasmByteMemory = undefined;\n\n      this.audioContext = undefined;\n      this.audioBuffer = undefined;\n      // The play time for our audio samples\n      this.audioPlaytime = undefined;\n      this.timeStretchingEnabled = false;\n      this.timeStretchPlaytime = 0;\n    }\n\n    initialize(wasmInstance, wasmByteMemory) {\n      this.wasmInstance = wasmInstance;\n      this.wasmByteMemory = wasmByteMemory;\n\n      // Get our Audio context\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      return Promise.resolve();\n    }\n\n    // Function to queue up and audio buyffer to be played\n    // Returns a promise so that we may \"sync by audio\"\n    // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/dau8e2w/\n    playAudio(fps) {\n      return new Promise((resolve) => {\n\n        // Find if we should time stretch this sample or not from our current fps\n        // TODO make this incremental\n        let sampleRate = WASMBOY_SAMPLE_RATE;\n        if (fps && fps < 60) {\n          this.timeStretchingEnabled = true;\n          sampleRate = (sampleRate * (fps / 60)) + 1;\n          if (sampleRate < 3000) {\n            sampleRate = 3000;\n          }\n        } else if (this.timeStretchingEnabled && fps >= 60) {\n          // Disable time stretch and latency\n          this.timeStretchingEnabled = false;\n          this.audioPlaytime = this.audioContext.currentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n        }\n\n        // Check if we need more samples yet\n        let timeUntilNextSample;\n        if (this.audioPlaytime) {\n          timeUntilNextSample = this.audioPlaytime - this.audioContext.currentTime;\n          if(!this.timeStretchingEnabled &&\n            this.audioContext.currentTime >= this.timeStretchPlaytime + WASMBOY_TIME_STRETCH_RESOLVED_LATENCY &&\n            timeUntilNextSample > WASMBOY_MIN_TIME_REMAINING_IN_SECONDS) {\n            resolve();\n            return;\n          }\n        }\n\n        // Check if we made it in time\n        // Idea from: https://github.com/binji/binjgb/blob/master/demo/demo.js\n        let audioContextCurrentTime = this.audioContext.currentTime;\n        let audioContextCurrentTimeWithLatency = audioContextCurrentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n        this.audioPlaytime = (this.audioPlaytime || audioContextCurrentTimeWithLatency);\n\n        if (this.audioPlaytime < audioContextCurrentTime) {\n          // We took too long, or something happen and hiccup'd the emulator, reset audio playback times\n          console.log(`[Wasmboy] Reseting Audio Playback time: ${this.audioPlaytime.toFixed(2)} < ${audioContextCurrentTimeWithLatency.toFixed(2)}`);\n          this.audioPlaytime = audioContextCurrentTimeWithLatency;\n          resolve();\n          return;\n        }\n\n        // Lastly, check if we even have any samples we can play\n        if (this.wasmInstance.exports.getAudioQueueIndex() < 4) {\n          resolve();\n          return true;\n        }\n\n        // We made it! Go ahead and grab and play the pcm samples\n        let wasmBoyNumberOfSamples = this.wasmInstance.exports.getAudioQueueIndex();\n\n        this.audioBuffer = this.audioContext.createBuffer(2, wasmBoyNumberOfSamples, sampleRate);\n        const leftChannelBuffer = this.audioBuffer.getChannelData(0);\n        const rightChannelBuffer = this.audioBuffer.getChannelData(1);\n\n        // Our index on our left/right buffers\n        let bufferIndex = 0;\n\n        // Our total number of stereo samples\n        let wasmBoyNumberOfSamplesForStereo = (wasmBoyNumberOfSamples * 2);\n\n        // Left Channel\n        for (let i = 0; i < wasmBoyNumberOfSamplesForStereo; i = i + 2) {\n          leftChannelBuffer[bufferIndex] = getUnsignedAudioSampleAsFloat(this.wasmByteMemory[i + WASMBOY_MEMORY_SOUND_INDEX]);\n          bufferIndex++;\n        }\n\n        // Reset the buffer index\n        bufferIndex = 0;\n\n        // Right Channel\n        for (let i = 1; i < wasmBoyNumberOfSamplesForStereo; i = i + 2) {\n          rightChannelBuffer[bufferIndex] = getUnsignedAudioSampleAsFloat(this.wasmByteMemory[i + WASMBOY_MEMORY_SOUND_INDEX]);\n          bufferIndex++;\n        }\n\n        // Reset the Audio Queue\n        this.wasmInstance.exports.resetAudioQueue();\n\n        // Get an AudioBufferSourceNode.\n        // This is the AudioNode to use when we want to play an AudioBuffer\n        let source = this.audioContext.createBufferSource();\n\n        // set the buffer in the AudioBufferSourceNode\n        source.buffer = this.audioBuffer;\n\n        // connect the AudioBufferSourceNode to the\n        // destination so we can hear the sound\n        source.connect(this.audioContext.destination);\n\n        // start the source playing\n        source.start(this.audioPlaytime);\n\n        // Set our new audio playtime goal\n        this.audioPlaytime = this.audioPlaytime + (wasmBoyNumberOfSamples / sampleRate);\n        if (this.timeStretchingEnabled) {\n          this.timeStretchPlaytime = this.audioPlaytime;\n        }\n        resolve();\n      });\n    }\n\n    debugSaveCurrentAudioBufferToWav() {\n\n      if(!this.audioBuffer) {\n        return;\n      }\n\n      // https://www.npmjs.com/package/audiobuffer-to-wav\n      const toWav = require('audiobuffer-to-wav');\n      // https://github.com/Jam3/audiobuffer-to-wav/blob/master/demo/index.js\n\n      const wav = toWav(this.audioBuffer);\n      const blob = new window.Blob([ new DataView(wav) ], {\n        type: 'audio/wav'\n      });\n\n      const url = window.URL.createObjectURL(blob)\n      const anchor = document.createElement('a')\n      document.body.appendChild(anchor)\n      anchor.style = 'display: none'\n      anchor.href = url\n      anchor.download = 'audio.wav'\n      anchor.click()\n      window.URL.revokeObjectURL(url)\n    }\n}\n\nexport const WasmBoyAudio = new WasmBoyAudioService();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/audio/audio.js","// Define a keyboard key schema\nvar keyInputSchema = {\n  ACTIVE: false,\n  KEY_CODE: undefined\n\n  // Define a gamepad button schema\n  // https://w3c.github.io/gamepad/#remapping\n};var gamepadInputSchema = {\n  ACTIVE: false,\n  BUTTON_ID: undefined,\n  JOYSTICK: {\n    AXIS_ID: undefined,\n    IS_POSITIVE: undefined\n  }\n};\n\nvar touchInputSchema = {\n  ACTIVE: false,\n  ELEMENT: undefined,\n  TYPE: undefined,\n  DIRECTION: undefined,\n  EVENT_HANDLER: undefined,\n  BOUNDING_RECT: undefined\n\n  // Define our finaly kerboard schema here\n};var keyMapSchema = {\n  UP: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  RIGHT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  DOWN: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  LEFT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  A: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  B: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  SELECT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  START: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  }\n};\n\nfunction getKeyInput(keyCode) {\n  var input = Object.assign({}, keyInputSchema);\n  input.KEY_CODE = keyCode;\n  return input;\n}\n\nfunction getGamepadInput(gamepadButtonId, axisId, axisIsPositive) {\n  var input = Object.assign({}, gamepadInputSchema);\n  input.JOYSTICK = Object.assign({}, gamepadInputSchema.JOYSTICK);\n  if (gamepadButtonId || gamepadButtonId === 0) {\n    input.BUTTON_ID = gamepadButtonId;\n  } else if (axisId !== undefined && axisIsPositive !== undefined) {\n    input.JOYSTICK.AXIS_ID = axisId;\n    input.JOYSTICK.IS_POSITIVE = axisIsPositive;\n  }\n  return input;\n}\n\nfunction getTouchInput(element, type, direction, eventHandler) {\n  var input = Object.assign({}, touchInputSchema);\n\n  // TODO: Check the type for a valid type\n\n  // Add our passed parameters\n  input.ELEMENT = element;\n  input.TYPE = type;\n  input.DIRECTION = direction;\n  input.EVENT_HANDLER = eventHandler;\n\n  // Add our bounding rect\n  var boundingRect = input.ELEMENT.getBoundingClientRect();\n  input.BOUNDING_RECT = boundingRect;\n\n  // Define our eventListener functions\n  var eventListenerCallback = function eventListenerCallback(event) {\n    if (input.EVENT_HANDLER) {\n      input.EVENT_HANDLER(event);\n    }\n  };\n\n  // Add event listeners to the element\n  input.ELEMENT.addEventListener(\"touchstart\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"touchmove\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"touchend\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"mousedown\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"mouseup\", eventListenerCallback);\n\n  return input;\n}\n\nfunction KeyMapSchema() {\n  return Object.assign({}, keyMapSchema);\n}\n\nvar Key = {\n\n  BACKSPACE: 8,\n  TAB: 9,\n  RETURN: 13,\n  SHIFT: 16,\n  CTRL: 17,\n  ALT: 18,\n  ESCAPE: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n\n  W: 87,\n  A: 65,\n  S: 83,\n  D: 68,\n  Q: 81,\n  E: 69,\n  X: 88,\n  Z: 90,\n\n  SEMI_COLON: 186,\n  SINGLE_QUOTE: 222,\n  BACK_SLASH: 220,\n\n  NUMPAD_0: 96,\n  NUMPAD_1: 97,\n  NUMPAD_2: 98,\n  NUMPAD_3: 99,\n  NUMPAD_4: 100,\n  NUMPAD_5: 101,\n  NUMPAD_6: 102,\n  NUMPAD_7: 103,\n  NUMPAD_8: 104,\n  NUMPAD_9: 105\n};\n\nvar keymap = KeyMapSchema();\n\n// Up\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.ARROW_UP));\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.W));\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.NUMPAD_8));\nkeymap.UP.GAMEPAD.push(getGamepadInput(12));\nkeymap.UP.GAMEPAD.push(getGamepadInput(false, 1, false));\nkeymap.UP.GAMEPAD.push(getGamepadInput(false, 3, false));\n\n// Right\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.ARROW_RIGHT));\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.D));\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.NUMPAD_6));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(15));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(false, 0, true));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(false, 2, true));\n\n// Down\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.ARROW_DOWN));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.S));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.NUMPAD_5));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.NUMPAD_2));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(13));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(false, 1, true));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(false, 3, true));\n\n// Left\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.ARROW_LEFT));\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.A));\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.NUMPAD_4));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(14));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(false, 0, false));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(false, 2, false));\n\n// A\nkeymap.A.KEYBOARD.push(getKeyInput(Key.X));\nkeymap.A.KEYBOARD.push(getKeyInput(Key.SEMI_COLON));\nkeymap.A.KEYBOARD.push(getKeyInput(Key.NUMPAD_7));\nkeymap.A.GAMEPAD.push(getGamepadInput(0));\nkeymap.A.GAMEPAD.push(getGamepadInput(1));\n\n// B\nkeymap.B.KEYBOARD.push(getKeyInput(Key.Z));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.ESCAPE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.SINGLE_QUOTE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.BACKSPACE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.NUMPAD_9));\nkeymap.B.GAMEPAD.push(getGamepadInput(2));\nkeymap.B.GAMEPAD.push(getGamepadInput(3));\n\n// Start\nkeymap.START.KEYBOARD.push(getKeyInput(Key.RETURN));\nkeymap.START.KEYBOARD.push(getKeyInput(Key.SPACE));\nkeymap.START.KEYBOARD.push(getKeyInput(Key.NUMPAD_3));\nkeymap.START.GAMEPAD.push(getGamepadInput(9));\n\n// Select\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.SHIFT));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.TAB));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.BACK_SLASH));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.NUMPAD_1));\nkeymap.SELECT.GAMEPAD.push(getGamepadInput(8));\n\nvar KEYMAP = keymap;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n// Helpers for accessing gamepad\n// Similar to: https://github.com/torch2424/picoDeploy/blob/master/src/assets/3pLibs/pico8gamepad/pico8gamepad.js\nfunction getAnalogStickAxis(gamepad, axisId) {\n  return gamepad.axes[axisId] || 0.0;\n}\n\nfunction isButtonPressed(gamepad, buttonId) {\n  return gamepad.buttons[buttonId] ? gamepad.buttons[buttonId].pressed : false;\n}\n\nvar ResponsiveGamepadService = function () {\n  function ResponsiveGamepadService() {\n    classCallCheck(this, ResponsiveGamepadService);\n\n    // Our settings\n    this.gamepadAnalogStickDeadZone = 0.25;\n    this.keyMapKeys = Object.keys(KeyMapSchema());\n    this.keyMap = KEYMAP;\n  }\n\n  createClass(ResponsiveGamepadService, [{\n    key: 'initialize',\n    value: function initialize(keyMap) {\n      var _this = this;\n\n      // Add our key event listeners\n      window.addEventListener('keyup', function (event) {\n        _this.updateKeyboard(event);\n      });\n      window.addEventListener('keydown', function (event) {\n        _this.updateKeyboard(event);\n      });\n\n      // Add a resize listen to update the gamepad rect on resize\n      window.addEventListener(\"resize\", function () {\n        _this.updateTouchpadRect();\n      });\n\n      if (keyMap) {\n        this.keyMap = keyMap;\n      }\n    }\n  }, {\n    key: 'addTouchInput',\n    value: function addTouchInput(keyMapKey, element, type, direction) {\n      var _this2 = this;\n\n      // Declare our touch input\n      // TODO: May have to add the event handler after getting the input\n      var touchInput = void 0;\n      touchInput = getTouchInput(element, type, direction, function (event) {\n        _this2.updateTouchpad(keyMapKey, touchInput, event);\n      });\n\n      // Add the input to our keymap\n      this.keyMap[keyMapKey].TOUCHPAD.push(touchInput);\n    }\n  }, {\n    key: 'getState',\n    value: function getState() {\n      var _this3 = this;\n\n      // Keyboard handled by listeners on window\n\n      // Update the gamepad state\n      this.updateGamepad();\n\n      // Touch Handled by listeners on touchInputs\n\n      // Create an abstracted controller state\n      var controllerState = {};\n\n      // Loop through our Keys, and quickly build our controller state\n      this.keyMapKeys.forEach(function (key) {\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var keyboardState = _this3.keyMap[key].KEYBOARD.some(function (keyInput) {\n          return keyInput.ACTIVE;\n        });\n\n        if (keyboardState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var gamepadState = _this3.keyMap[key].GAMEPAD.some(function (gamepadInput) {\n          return gamepadInput.ACTIVE;\n        });\n\n        if (gamepadState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var touchState = _this3.keyMap[key].TOUCHPAD.some(function (touchInput) {\n          return touchInput.ACTIVE;\n        });\n\n        if (touchState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        controllerState[key] = false;\n      });\n\n      // Return the controller state in case we need something from it\n      return controllerState;\n    }\n\n    // Function to handle keyboard update events\n\n  }, {\n    key: 'updateKeyboard',\n    value: function updateKeyboard(keyEvent) {\n      var _this4 = this;\n\n      // Get the new state of the key\n      var isPressed = false;\n      if (keyEvent.type === 'keydown') {\n        isPressed = true;\n      }\n\n      // Loop through our keys\n      this.keyMapKeys.forEach(function (key) {\n        _this4.keyMap[key].KEYBOARD.forEach(function (keyInput, index) {\n          if (keyInput.KEY_CODE === keyEvent.keyCode) {\n            _this4.keyMap[key].KEYBOARD[index].ACTIVE = isPressed;\n          }\n        });\n      });\n    }\n\n    // Function to check the gamepad API for the gamepad state\n\n  }, {\n    key: 'updateGamepad',\n    value: function updateGamepad() {\n      var _this5 = this;\n\n      // Similar to: https://github.com/torch2424/picoDeploy/blob/master/src/assets/3pLibs/pico8gamepad/pico8gamepad.js\n      // Gampad Diagram: https://www.html5rocks.com/en/tutorials/doodles/gamepad/#toc-gamepadinfo\n      var gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n\n      var _loop = function _loop(i) {\n\n        // Get our current gamepad\n        var gamepad = gamepads[i];\n\n        if (!gamepad) {\n          return 'continue';\n        }\n\n        // Loop through our keys\n        _this5.keyMapKeys.forEach(function (key) {\n          _this5.keyMap[key].GAMEPAD.forEach(function (gamepadInput, index) {\n\n            // Check if we are a gamepad button\n            if (_this5.keyMap[key].GAMEPAD[index].BUTTON_ID || _this5.keyMap[key].GAMEPAD[index].BUTTON_ID === 0) {\n              _this5.keyMap[key].GAMEPAD[index].ACTIVE = isButtonPressed(gamepad, _this5.keyMap[key].GAMEPAD[index].BUTTON_ID);\n            }\n\n            // Check if we are an axis\n            if (_this5.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID !== undefined && _this5.keyMap[key].GAMEPAD[index].JOYSTICK.IS_POSITIVE !== undefined) {\n              if (_this5.keyMap[key].GAMEPAD[index].JOYSTICK.IS_POSITIVE) {\n                _this5.keyMap[key].GAMEPAD[index].ACTIVE = getAnalogStickAxis(gamepad, _this5.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID) > +_this5.gamepadAnalogStickDeadZone;\n              } else {\n                _this5.keyMap[key].GAMEPAD[index].ACTIVE = getAnalogStickAxis(gamepad, _this5.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID) < -_this5.gamepadAnalogStickDeadZone;\n              }\n            }\n          });\n        });\n      };\n\n      for (var i = 0; i < gamepads.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === 'continue') continue;\n      }\n    }\n\n    // Function to update button position and size\n\n  }, {\n    key: 'updateTouchpadRect',\n    value: function updateTouchpadRect() {\n      var _this6 = this;\n\n      // Read from the DOM, and get each of our elements position, doing this here, as it is best to read from the dom in sequence\n      // use element.getBoundingRect() top, bottom, left, right to get clientX and clientY in touch events :)\n      // https://stackoverflow.com/questions/442404/retrieve-the-position-x-y-of-an-html-element\n      //console.log(\"GamepadComponent: Updating Rect()...\");\n      this.keyMapKeys.forEach(function (key) {\n        _this6.keyMap[key].TOUCHPAD.forEach(function (touchInput, index) {\n          var boundingRect = _this6.keyMap[key].TOUCHPAD[index].ELEMENT.getBoundingClientRect();\n          _this6.keyMap[key].TOUCHPAD[index].BOUNDING_RECT = boundingRect;\n        });\n      });\n    }\n\n    // Reset all Diretion keys for a DPAD for touch Inputs\n\n  }, {\n    key: 'resetTouchDpad',\n    value: function resetTouchDpad() {\n      var _this7 = this;\n\n      var dpadKeys = ['UP', 'RIGHT', 'DOWN', 'LEFT'];\n\n      dpadKeys.forEach(function (dpadKey) {\n        _this7.keyMap[dpadKey].TOUCHPAD.forEach(function (touchInput) {\n          touchInput.ACTIVE = false;\n        });\n      });\n    }\n\n    // Function called on an event of a touchInput SVG Element\n\n  }, {\n    key: 'updateTouchpad',\n    value: function updateTouchpad(keyMapKey, touchInput, event) {\n\n      if (!event || event.type.includes('touch') && !event.touches) return;\n\n      //event.stopPropagation();\n      event.preventDefault();\n\n      //this.debugCurrentTouch(event);\n\n      // Check for active event types\n      if (event.type === \"touchstart\" || event.type === \"touchmove\" || event.type === \"mousedown\") {\n        // Active\n\n        if (touchInput.TYPE === 'DPAD') {\n\n          // Calculate for the correct key\n          // Only using the first touch, since we shouldn't be having two fingers on the dpad\n          var touch = void 0;\n          if (event.type.includes('touch')) {\n            touch = event.touches[0];\n          } else if (event.type.includes('mouse')) {\n            touch = event;\n          }\n\n          // Find if the horizontal or vertical influence is greater\n          // Find our centers of our rectangles, and our unbiased X Y values on the rect\n          var rectCenterX = (touchInput.BOUNDING_RECT.right - touchInput.BOUNDING_RECT.left) / 2;\n          var rectCenterY = (touchInput.BOUNDING_RECT.bottom - touchInput.BOUNDING_RECT.top) / 2;\n          var touchX = touch.clientX - touchInput.BOUNDING_RECT.left;\n          var touchY = touch.clientY - touchInput.BOUNDING_RECT.top;\n\n          // Lesson From: picoDeploy\n          // Fix for shoot button causing the character to move right on multi touch error\n          // + 50 for some buffer\n          if (touchX > rectCenterX + touchInput.BOUNDING_RECT.width / 2 + 50) {\n            // Ignore the event\n            return;\n          }\n\n          // Create an additonal influece for horizontal, to make it feel better\n          var horizontalInfluence = touchInput.BOUNDING_RECT.width / 8;\n\n          // Determine if we are horizontal or vertical\n          var isHorizontal = Math.abs(rectCenterX - touchX) + horizontalInfluence > Math.abs(rectCenterY - touchY);\n\n          // Find if left or right from width, vice versa for height\n          if (isHorizontal) {\n            // Add a horizontal dead zone\n            var deadzoneSize = touchInput.BOUNDING_RECT.width / 20;\n            if (Math.abs(touchInput.BOUNDING_RECT.width / 2 - touchX) > deadzoneSize) {\n\n              var isLeft = touchX < touchInput.BOUNDING_RECT.width / 2;\n\n              if (isLeft && touchInput.DIRECTION === 'LEFT') {\n                touchInput.ACTIVE = true;\n              } else if (!isLeft && touchInput.DIRECTION === 'RIGHT') {\n                touchInput.ACTIVE = true;\n              } else {\n                touchInput.ACTIVE = false;\n              }\n            }\n          } else {\n            var isUp = touchY < touchInput.BOUNDING_RECT.height / 2;\n            if (isUp && touchInput.DIRECTION === 'UP') {\n              touchInput.ACTIVE = true;\n            } else if (!isUp && touchInput.DIRECTION === 'DOWN') {\n              touchInput.ACTIVE = true;\n            } else {\n              touchInput.ACTIVE = false;\n            }\n          }\n        }\n\n        // Button Type\n        if (touchInput.TYPE === 'BUTTON') {\n          touchInput.ACTIVE = true;\n        }\n      } else {\n        // Not active\n\n        // Handle Dpad Type\n        if (touchInput.TYPE === 'DPAD') {\n          this.resetTouchDpad();\n        }\n\n        // Button Type\n        if (touchInput.TYPE === 'BUTTON') {\n          touchInput.ACTIVE = false;\n        }\n      }\n    }\n  }]);\n  return ResponsiveGamepadService;\n}();\n\n// Exports\n\n\nvar ResponsiveGamepad = new ResponsiveGamepadService();\n\nexport { ResponsiveGamepad, KEYMAP as DEFAULT_KEYMAP, KEYMAP as GAMEBOY_KEYMAP };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","import Promise from 'promise-polyfill';\n// https://github.com/torch2424/responsive-gamepad\nimport { ResponsiveGamepad } from 'responsive-gamepad'\n\nclass WasmBoyControllerService {\n  constructor() {\n    // Our wasm instance\n    this.wasmInstance = undefined;\n  }\n\n  initialize(wasmInstance) {\n    this.wasmInstance = wasmInstance;\n\n    ResponsiveGamepad.initialize();\n\n    return Promise.resolve();\n  }\n\n  addTouchInput(keyMapKey, element, type, direction) {\n    ResponsiveGamepad.addTouchInput(keyMapKey, element, type, direction);\n  }\n\n  updateController() {\n\n    // Create an abstracted controller state\n    const controllerState = ResponsiveGamepad.getState();\n\n    // Set the new controller state on the instance\n    this.wasmInstance.exports.setJoypadState(\n      controllerState.UP ? 1 : 0,\n      controllerState.RIGHT ? 1 : 0,\n      controllerState.DOWN ? 1 : 0,\n      controllerState.LEFT ? 1 : 0,\n      controllerState.A ? 1 : 0,\n      controllerState.B ? 1 : 0,\n      controllerState.SELECT ? 1 : 0,\n      controllerState.START ? 1 : 0\n    );\n\n    // Return the controller state in case we need something from it\n    return controllerState;\n  }\n}\n\nexport const WasmBoyController = new WasmBoyControllerService();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/controller/controller.js","// Get our idb instance, and initialize to asn idb-keyval\n// This is so we don't get the default keyval DB name. And will allow\n// Parent projects to use the slimmer idb keyval\n// https://www.npmjs.com/package/idb\nconst idb = require('idb');\n\nlet keyval = false;\n\n// Get our idb dPromise\nif (typeof window !== 'undefined') {\n  const dbPromise = idb.open('wasmboy', 1, upgradeDB => {\n    upgradeDB.createObjectStore('keyval');\n  });\n\n  // Get our idb-keyval instance\n  keyval = {\n    get(key) {\n      return dbPromise.then(db => {\n        return db.transaction('keyval')\n          .objectStore('keyval').get(key);\n      });\n    },\n    set(key, val) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').put(val, key);\n        return tx.complete;\n      });\n    },\n    delete(key) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').delete(key);\n        return tx.complete;\n      });\n    },\n    clear() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').clear();\n        return tx.complete;\n      });\n    },\n    keys() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval');\n        const keys = [];\n        const store = tx.objectStore('keyval');\n\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // openKeyCursor isn't supported by Safari, so we fall back\n        (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n          if (!cursor) return;\n          keys.push(cursor.key);\n          cursor.continue();\n        });\n\n        return tx.complete.then(() => keys);\n      });\n    }\n  }\n}\n\nexport const idbKeyval = keyval;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/memory/idb.js","import Promise from 'promise-polyfill';\nimport { idbKeyval } from './idb';\n\n// Going to set the key for idbKeyval as the cartridge header.\n// Then, for each cartridge, it will return an object.\n// there will be a cartridgeRam Key, settings Key, and a saveState key\n// Not going to make one giant object, as we want to keep idb transactions light and fast\n\n// Declare some memory constants\nconst MEMORY_ADDRESSES = {\n  CARTRIDGE_RAM: 0x008400,\n  CARTRIDGE_ROM: 0x073800,\n  WASMBOY_INTERNAL_STATE: {\n    LOCATION: 0x000000,\n    SIZE: 0x000400\n  },\n  GAMEBOY_MEMORY: {\n    LOCATION: 0x000400,\n    SIZE: 0x008000\n  }\n};\n\nconst WASMBOY_UNLOAD_STORAGE = 'WASMBOY_UNLOAD_STORAGE';\n\n//  Will save the state in parts, to easy memory map changes:\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_SAVE_STATE_SCHEMA = {\n  wasmBoyMemory: {\n    wasmBoyInternalState: [],\n    gameBoyMemory: [],\n    cartridgeRam: []\n  },\n  date: undefined,\n  name: undefined,\n  isAuto: undefined\n}\n\n// Private function to get the cartridge header\nconst getCartridgeHeader = (wasmByteMemory) => {\n\n  if (!wasmByteMemory) {\n    return false;\n  }\n\n  // Header is at 0x0134 - 0x014F\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  const headerLength = 0x014F - 0x0134;\n  const headerArray = new Uint8Array(headerLength);\n  for(let i = 0; i <= headerLength; i++) {\n    // Get the CARTRIDGE_ROM + the offset to point us at the header, plus the current byte\n    headerArray[i] = wasmByteMemory[MEMORY_ADDRESSES.CARTRIDGE_ROM + 0x0134 + i];\n  }\n\n  return headerArray;\n}\n\n// Private function to get the caretridge ram\nconst getCartridgeRam = (wasmByteMemory) => {\n\n  if (!wasmByteMemory) {\n    return false;\n  }\n\n  // Depening on the rom type, we will have different ram sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = wasmByteMemory[MEMORY_ADDRESSES.CARTRIDGE_ROM + 0x0147];\n\n  let ramSize = undefined;\n  if(cartridgeType === 0x00) {\n    // No memory for this rom type\n    return false;\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 512X4 Bytes, 2KB\n    ramSize = 0x800;\n  } else if (cartridgeType >= 0x0F && cartridgeType <= 0x13) {\n    // MBC3 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1E) {\n    // MBC5 128KB of Ram\n    ramSize = 0x20000;\n  }\n\n  if(!ramSize) {\n    return false;\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRam = new Uint8Array(ramSize);\n\n  for(let i = 0; i < (ramSize); i++) {\n    cartridgeRam[i] = wasmByteMemory[MEMORY_ADDRESSES.CARTRIDGE_RAM + i];\n  }\n\n  return cartridgeRam;\n}\n\n// Function to return a save state of the current memory\nconst getSaveState = (wasmByteMemory) => {\n  // Simply read up to: 0x0083FF,\n  // then append our catridge ram\n  const cartridgeRam = getCartridgeRam(wasmByteMemory);\n\n  const wasmBoyInternalState = new Uint8Array(MEMORY_ADDRESSES.WASMBOY_INTERNAL_STATE.SIZE);\n  const gameBoyMemory = new Uint8Array(MEMORY_ADDRESSES.GAMEBOY_MEMORY.SIZE);\n\n  for (let i = 0; i < MEMORY_ADDRESSES.WASMBOY_INTERNAL_STATE.SIZE; i++) {\n    wasmBoyInternalState[i] =\n      wasmByteMemory[i + MEMORY_ADDRESSES.WASMBOY_INTERNAL_STATE.LOCATION];\n  }\n\n  for (let i = 0; i < MEMORY_ADDRESSES.GAMEBOY_MEMORY.SIZE; i++) {\n    gameBoyMemory[i] =\n      wasmByteMemory[i + MEMORY_ADDRESSES.GAMEBOY_MEMORY.LOCATION];\n  }\n\n  const saveState = Object.assign({}, WASMBOY_SAVE_STATE_SCHEMA);\n\n  saveState.wasmBoyMemory.wasmBoyInternalState = wasmBoyInternalState;\n  saveState.wasmBoyMemory.gameBoyMemory = gameBoyMemory;\n  saveState.wasmBoyMemory.cartridgeRam = cartridgeRam;\n  saveState.date = Date.now();\n\n  return saveState;\n}\n\nconst loadSaveState = (wasmByteMemory, saveState) => {\n\n  for (let i = 0; i  < MEMORY_ADDRESSES.WASMBOY_INTERNAL_STATE.SIZE; i++) {\n    wasmByteMemory[i + MEMORY_ADDRESSES.WASMBOY_INTERNAL_STATE.LOCATION] =\n      saveState.wasmBoyMemory.wasmBoyInternalState[i];\n  }\n\n  for (let i = 0; i < MEMORY_ADDRESSES.GAMEBOY_MEMORY.SIZE; i++) {\n    wasmByteMemory[i + MEMORY_ADDRESSES.GAMEBOY_MEMORY.LOCATION] =\n      saveState.wasmBoyMemory.gameBoyMemory[i];\n  }\n\n  for (let i = 0; i < saveState.wasmBoyMemory.cartridgeRam.length; i++) {\n    wasmByteMemory[i + MEMORY_ADDRESSES.CARTRIDGE_RAM] =\n      saveState.wasmBoyMemory.cartridgeRam[i];\n  }\n\n  return true;\n};\n\nclass WasmBoyMemoryService {\n\n  constructor() {\n    this.wasmInstance = undefined;\n    this.wasmByteMemory = undefined;\n    this.loadedCartridgeMemoryState = {\n      ROM: false,\n      RAM: false\n    };\n  }\n\n  initialize(wasmInstance, wasmByteMemory, includeBootRom) {\n    this.wasmInstance = wasmInstance;\n    this.wasmByteMemory = wasmByteMemory;\n\n    // Set listeners to ensure we save our cartridge ram before closing\n    window.addEventListener(\"beforeunload\", () => {\n      // Need to add a retrun value, and force all code in the block to be sync\n      // https://stackoverflow.com/questions/7255649/window-onbeforeunload-not-working\n      // http://vaughnroyko.com/idbonbeforeunload/\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=870645\n\n      // Solution:\n      // ~~Try to force sync: https://www.npmjs.com/package/deasync~~ Didn't work, requires fs\n      // Save to local storage, and pick it back up in init: https://bugs.chromium.org/p/chromium/issues/detail?id=144862\n\n      // TODO: Ensure that reloading without loading the game rom, and not the game ram will overwrite our saved ram\n\n      // Get our cartridge ram and header\n      const header = getCartridgeHeader(this.wasmByteMemory);\n      const cartridgeRam = getCartridgeRam(this.wasmByteMemory);\n\n      // Get our save state, and un type our arrays\n      const saveState = getSaveState(this.wasmByteMemory);\n      const saveStateMemoryKeys = Object.keys(saveState.wasmBoyMemory);\n      for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n        saveState.wasmBoyMemory[saveStateMemoryKeys[i]] =\n          Array.prototype.slice.call(saveState.wasmBoyMemory[saveStateMemoryKeys[i]]);\n      }\n\n      // Set isAuto\n      saveState.isAuto = true;\n\n      // Need to vonert types arrays, and back, or selse wll get indexed JSON\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n      localStorage.setItem(WASMBOY_UNLOAD_STORAGE, JSON.stringify({\n        header: Array.prototype.slice.call(header),\n        cartridgeRam: Array.prototype.slice.call(cartridgeRam),\n        saveState: saveState\n      }));\n\n      return null;\n    }, false);\n\n    // Load any unloaded storage in our localStorage\n    const unloadStorage = localStorage.getItem(WASMBOY_UNLOAD_STORAGE);\n    if (unloadStorage) {\n      const unloadStorageObject = JSON.parse(unloadStorage);\n      localStorage.removeItem(WASMBOY_UNLOAD_STORAGE);\n\n      const header = new Uint8Array(unloadStorageObject.header);\n      const cartridgeRam = new Uint8Array(unloadStorageObject.cartridgeRam);\n\n      // Get our save state, and re-type our array\n      const saveState = unloadStorageObject.saveState;\n      if (saveState) {\n        const saveStateMemoryKeys = Object.keys(saveState.wasmBoyMemory);\n        for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n          saveState.wasmBoyMemory[saveStateMemoryKeys[i]] =\n            new Uint8Array(saveState.wasmBoyMemory[saveStateMemoryKeys[i]]);\n        }\n      }\n\n      this.saveCartridgeRam(header, cartridgeRam).then(() => {\n        this.saveState(header, saveState).then(() => {\n          return Promise.resolve();\n        }).catch((error) => {\n          return Promise.reject(error);\n        });\n      }).catch((error) => {\n        return Promise.reject(error);\n      });\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  initializeHeadless(wasmInstance, wasmByteMemory) {\n    this.wasmInstance = wasmInstance;\n    this.wasmByteMemory = wasmByteMemory;\n  }\n\n  getLoadedCartridgeMemoryState() {\n    return this.loadedCartridgeMemoryState;\n  }\n\n  clearMemory() {\n    // Clear Wasm memory\n    // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n    for(let i = 0; i <= this.wasmByteMemory.length; i++) {\n      this.wasmByteMemory[i] = 0;\n    }\n\n    this.loadedCartridgeMemoryState.ROM = false;\n    this.loadedCartridgeMemoryState.RAM = false;\n  }\n\n  loadCartridgeRom(gameBytes, bootRom) {\n\n    // Load the game data into actual memory\n    for(let i = 0; i < gameBytes.length; i++) {\n      if (gameBytes[i]) {\n        this.wasmByteMemory[MEMORY_ADDRESSES.CARTRIDGE_ROM + i] = gameBytes[i];\n      }\n    }\n\n    // TODO: Handle getting a boot rom\n    this.wasmInstance.exports.initialize(0);\n\n      this.loadedCartridgeMemoryState.ROM = true;\n  }\n\n  // Function to save the cartridge ram\n  // This emulates the cartridge having a battery to\n  // Keep things like Pokemon Save data in memory\n  // Also allows passing in a a Uint8Array header and ram to be set manually\n  saveCartridgeRam(passedHeader, passedCartridgeRam) {\n\n    return new Promise((resolve, reject) => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      let header;\n      let cartridgeRam;\n      if(passedHeader && passedCartridgeRam) {\n        header = passedHeader;\n        cartridgeRam = passedCartridgeRam;\n      } else {\n        header = getCartridgeHeader(this.wasmByteMemory);\n        cartridgeRam = getCartridgeRam(this.wasmByteMemory);\n      }\n\n      if(!header || !cartridgeRam) {\n        console.error('Error parsing the cartridgeRam or cartridge header', header, cartridgeRam);\n        reject('Error parsing the cartridgeRam or cartridge header');\n      }\n\n      // Get our cartridge object\n      idbKeyval.get(header).then((cartridgeObject) => {\n\n        if(!cartridgeObject) {\n          cartridgeObject = {};\n        }\n\n        // Set the cartridgeRam to our cartridgeObject\n        cartridgeObject.cartridgeRam = cartridgeRam;\n\n        idbKeyval.set(header, cartridgeObject).then(() => {\n          resolve();\n        }).catch((error) => {\n          reject(error);\n        });\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  // function to load the cartridge ram\n  // opposite of above\n  loadCartridgeRam() {\n\n    return new Promise((resolve, reject) => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      const header = getCartridgeHeader(this.wasmByteMemory);\n\n      if(!header) {\n        reject('Error parsing the cartridge header');\n      }\n\n      idbKeyval.get(header).then((cartridgeObject) => {\n\n        if(!cartridgeObject || !cartridgeObject.cartridgeRam) {\n          resolve();\n          return;\n        }\n\n        // Set the cartridgeRam\n        for(let i = 0; i < cartridgeObject.cartridgeRam.length; i++) {\n           this.wasmByteMemory[MEMORY_ADDRESSES.CARTRIDGE_RAM + i] = cartridgeObject.cartridgeRam[i];\n        }\n        this.loadedCartridgeMemoryState.RAM = true;\n        resolve();\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  // Function to save the state to the indexeddb\n  saveState(passedHeader, passedSaveState) {\n\n    return new Promise((resolve, reject) => {\n\n      // Save our internal wasmboy state to memory\n      this.wasmInstance.exports.saveState();\n\n      // Get our save state\n      let saveState;\n      let header;\n      if (passedHeader && passedSaveState) {\n        saveState = passedSaveState;\n        header = passedHeader;\n      } else {\n        saveState = getSaveState(this.wasmByteMemory);\n        header = getCartridgeHeader(this.wasmByteMemory);\n      }\n\n      if(!header) {\n        reject('Error parsing the cartridge header');\n      }\n\n      idbKeyval.get(header).then((cartridgeObject) => {\n\n        if(!cartridgeObject) {\n          cartridgeObject = {};\n        }\n\n        if(!cartridgeObject.saveStates) {\n          cartridgeObject.saveStates = [];\n        }\n\n        cartridgeObject.saveStates.push(saveState);\n\n        idbKeyval.set(header, cartridgeObject).then(() => {\n          resolve();\n        }).catch((error) => {\n          reject(error);\n        });\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  loadState(saveStateIndex) {\n    return new Promise((resolve, reject) => {\n\n      const header = getCartridgeHeader(this.wasmByteMemory);\n\n      if(!header) {\n        reject('Error parsing the cartridge header');\n      }\n\n      idbKeyval.get(header).then((cartridgeObject) => {\n\n        if(!cartridgeObject || !cartridgeObject.saveStates) {\n          reject('No Cartridge Object or saveStates array found');\n          return;\n        }\n\n        // Get a default saveStateIndex\n        if(!saveStateIndex) {\n          // Default to the latest save state, or but attempt to default to the first non-auto save state\n          saveStateIndex = cartridgeObject.saveStates.length - 1;\n          for (let i = cartridgeObject.saveStates.length - 1; i >= 0; i--) {\n            if (!cartridgeObject.saveStates[i].isAuto) {\n              saveStateIndex = i;\n              i = -1;\n            }\n          }\n        }\n        loadSaveState(this.wasmByteMemory, cartridgeObject.saveStates[saveStateIndex]);\n\n        // Load back out internal wasmboy state from memory\n        this.wasmInstance.exports.loadState();\n\n        resolve();\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  // Function to return the current cartridge object\n  getCartridgeObject() {\n    const header = getCartridgeHeader(this.wasmByteMemory);\n    return idbKeyval.get(header);\n  }\n}\n\n// Create a singleton to export\nexport const WasmBoyMemory = new WasmBoyMemoryService();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/memory/memory.js","import fetch from 'unfetch'\nimport Promise from 'promise-polyfill';\nimport wasmModule from '../dist/wasm/index.untouched.wasm';\nimport { WasmBoyGraphics } from './graphics/graphics';\nimport { WasmBoyAudio } from './audio/audio';\nimport { WasmBoyController } from './controller/controller';\nimport { WasmBoyMemory } from './memory/memory';\n\n// requestAnimationFrame() for headless mode\nconst raf = require('raf');\n\n// Constant to define wasm memory size on instantiation\nconst WASMBOY_MEMORY_SIZE = 0x87FFFF;\n\nclass WasmBoyLib {\n\n  // Start the request to our wasm module\n  constructor() {\n    this.wasmInstance = undefined;\n    this.wasmByteMemory = undefined;\n    this.headless = false;\n    this.canvasElement = undefined;\n    this.paused = false;\n    this.ready = false;\n    this.renderId = false;\n    this.updateId = false;\n\n    // Options\n    // TODO: Allow setting this on/off\n    this.isAudioEnabled = true;\n    this.frameRate = 60;\n    this.frameTimeStamps = [];\n\n    // Test properties\n    this.frameSkip = 0;\n\n    // TODO: Remove this debug code\n    this.logRequest = false;\n    this.performanceTimestamps = {};\n  }\n\n  // Function to initialize our Wasmboy\n  initialize(canvasElement) {\n    this.headless = false;\n    this.canvasElement = canvasElement;\n    this.frameSkip = 0;\n  }\n\n  // Function to intialize WasmBoy For Headless\n  // TODO: Allow passing a speed for how many frames to render per second\n  // Will hopefully speed up testing\n  initializeHeadless(frameSkip) {\n    this.headless = true;\n    if (frameSkip) {\n      this.frameSkip = frameSkip;\n    }\n  }\n\n  // Finish request for wasm module, and fetch game\n  loadGame(game) {\n    // Getting started with wasm\n    // http://webassembly.org/getting-started/js-api/\n    this.ready = false;\n    return new Promise((resolve, reject) => {\n\n      // Pause the game in case it was running\n      this.pauseGame().then(() => {\n        // Get our promises\n        const initPromises = [\n          this._fetchGameAsByteArray(game),\n          this._getWasmInstance()\n        ];\n\n        if (!this.headless && WasmBoyMemory.getLoadedCartridgeMemoryState().RAM) {\n          initPromises.push(WasmBoyMemory.saveCartridgeRam());\n        }\n\n        Promise.all(initPromises).then((responses) => {\n\n          // Check if we are running headless\n          if(this.headless) {\n            WasmBoyMemory.initializeHeadless(this.wasmInstance, this.wasmByteMemory);\n            // Clear what is currently in memory, then load the cartridge memory\n            WasmBoyMemory.clearMemory();\n\n            // TODO: Handle passing a boot rom\n            WasmBoyMemory.loadCartridgeRom(responses[0], false);\n            this.ready = true;\n\n            resolve();\n          } else {\n            // Finally intialize all of our services\n            // Initialize our services\n            Promise.all([\n              WasmBoyGraphics.initialize(this.canvasElement, this.wasmInstance, this.wasmByteMemory),\n              WasmBoyAudio.initialize(this.wasmInstance, this.wasmByteMemory),\n              WasmBoyController.initialize(this.wasmInstance),\n              WasmBoyMemory.initialize(this.wasmInstance, this.wasmByteMemory)\n            ]).then(() => {\n\n              // Clear what is currently in memory, then load the carttridge memory\n              WasmBoyMemory.clearMemory();\n\n\n              // TODO: Handle passing a boot rom\n              WasmBoyMemory.loadCartridgeRom(responses[0], false);\n\n              // Load the game's cartridge ram\n              WasmBoyMemory.loadCartridgeRam().then(() => {\n                this.ready = true;\n                resolve();\n              }).catch((error) => {\n                reject(error);\n              });\n            }).catch((error) => {\n              reject(error);\n            });\n          }\n        }).catch((error) => {\n          reject(error);\n        });\n      });\n    });\n  }\n\n  // Function to start the game\n  startGame() {\n    return this.resumeGame();\n  }\n\n  resumeGame() {\n    if (!this.ready) {\n      return false;\n    }\n\n    // Un-pause the game\n    this.paused = false;\n\n    // Start our update and render process\n    // Can't time by raf, as raf is not garunteed to be 60fps\n    // Need to run like a web game, where updates to the state of the core are done a 60 fps\n    // but we can render whenever the user would actually see the changes browser side in a raf\n    // https://developer.mozilla.org/en-US/docs/Games/Anatomy\n    this._emulatorUpdate();\n    if(!this.updateId) {\n      // 1000 / 60 = 60fps\n      this.updateId = setInterval(() => {\n        this._emulatorUpdate();\n      }, 1000 / this.frameRate);\n    }\n    if(!this.renderId && !this.headless) {\n      this.renderId = raf(() => {\n        this._emulatorRender();\n      });\n    }\n  }\n\n  // Function to pause the game, returns a promise\n  // Will try to wait until the emulation sync is returned, and then will\n  // Allow any actions\n  pauseGame() {\n    this.paused = true;\n\n    // Cancel our update and render loop\n    raf.cancel(this.renderId);\n    this.renderId = false;\n    clearInterval(this.updateId);\n    this.updateId = false;\n\n    // Wait a raf to ensure everything is done\n    return new Promise((resolve) => {\n      raf(() => {\n        resolve();\n      });\n    });\n  }\n\n  // Function to update the current fps\n  setFps(fps) {\n    this.pauseGame().then(() => {\n      this.frameRate = fps;\n      this.resumeGame();\n    });\n  }\n\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  getFps() {\n    return this.frameTimeStamps.length\n  }\n\n  // Function to return the current game object in memory\n  getWasmBoyMemoryForLoadedGame() {\n    return WasmBoyMemory.getCartridgeObject();\n  }\n\n  saveState() {\n    // Pause the game in case it was running\n    this.pauseGame().then(() => {\n      // Save our state to wasmMemory\n      WasmBoyMemory.saveState().then(() => {\n        this.resumeGame();\n      });\n    });\n  }\n\n  loadState() {\n    // Pause the game in case it was running, and set to not ready\n    this.pauseGame().then(() => {\n      WasmBoyMemory.loadState().then(() => {\n        this.resumeGame();\n      });\n    });\n  }\n\n  // Function to run an update on the emulator itself\n  _emulatorUpdate() {\n\n    // Track our Fps\n    // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n    let currentHighResTime = performance.now();\n    while (this.frameTimeStamps[0] < currentHighResTime - 1000) {\n      this.frameTimeStamps.shift();\n    }\n    this.frameTimeStamps.push(currentHighResTime);\n\n    // If audio is enabled, sync by audio\n    // Check how many samples we have, and if we are getting too ahead, need to skip the update\n    // Magic number is from experimenting and this seems to go good\n    // TODO: Make this a preference, or calculate from perfrmance.now()\n    if(this.isAudioEnabled && !this.headless && this.wasmInstance.exports.getAudioQueueIndex() > 12000) {\n      return true;\n    }\n\n    // Update (Execute a frame)\n    let response = this.wasmInstance.exports.update();\n\n    // Handle our update() response\n    if(response > 0) {\n      // See: wasm/cpu/opcodes update() function\n      // 1 = render a frame\n      // 2 = replace boot rom\n      // TODO: Find what should go here\n      switch(response) {\n        case 1:\n        case 2:\n          break;\n      }\n\n      return true;\n    } else {\n      console.log('Wasmboy Crashed!');\n      console.log(`Program Counter: 0x${this.wasmInstance.exports.getProgramCounter().toString(16)}`)\n      console.log(`Opcode: 0x${this.wasmByteMemory[this.wasmInstance.exports.getProgramCounter()].toString(16)}`);\n      this.pauseGame();\n      return false;\n    }\n  }\n\n  // Function to render our emulator output\n  _emulatorRender() {\n      // Render the display\n      WasmBoyGraphics.renderFrame();\n\n      // Play the audio\n      if(this.isAudioEnabled) {\n        WasmBoyAudio.playAudio(this.getFps());\n      } else {\n        this.wasmInstance.exports.resetAudioQueue();\n      }\n\n      // Update our controller\n      WasmBoyController.updateController();\n\n      this.renderId = raf(() => {\n        this._emulatorRender();\n      });\n  }\n\n  // Private funciton to returna promise to our wasmModule\n  // This allow will re-load the wasm module, that way we can obtain a new wasm instance\n  // For each time we load a game\n  _getWasmInstance() {\n    return new Promise((resolve, reject) => {\n\n      // Get our wasm instance from our wasmModule\n      const memoryBase =\n      wasmModule({\n        env: {\n          log: (message, arg0, arg1, arg2, arg3, arg4, arg5) => {\n            // Grab our string\n            var len = new Uint32Array(this.wasmInstance.exports.memory.buffer, message, 1)[0];\n            var str = String.fromCharCode.apply(null, new Uint16Array(this.wasmInstance.exports.memory.buffer, message + 4, len));\n            if (arg0) str = str.replace(\"$0\", arg0);\n            if (arg1) str = str.replace(\"$1\", arg1);\n            if (arg2) str = str.replace(\"$2\", arg2);\n            if (arg3) str = str.replace(\"$3\", arg3);\n            if (arg4) str = str.replace(\"$4\", arg4);\n            if (arg5) str = str.replace(\"$5\", arg5);\n\n            console.log(\"[WasmBoy] \" + str);\n          },\n          hexLog: (arg0, arg1, arg2, arg3, arg4, arg5) => {\n\n            if(!this.logRequest) {\n\n              // Comment this line to disable throttle\n              this.logRequest = true;\n\n              // Grab our arguments, and log as hex\n              let logString = '[WasmBoy]';\n              if (arg0) logString += ` 0x${arg0.toString(16)} `;\n              if (arg1) logString += ` 0x${arg1.toString(16)} `;\n              if (arg2) logString += ` 0x${arg2.toString(16)} `;\n              if (arg3) logString += ` 0x${arg3.toString(16)} `;\n              if (arg4) logString += ` 0x${arg4.toString(16)} `;\n              if (arg5) logString += ` 0x${arg5.toString(16)} `;\n\n              setTimeout(() => {\n                console.log(logString);\n                this.logRequest = false;\n              }, 250);\n            }\n          },\n          performanceTimestamp: (id, value) => {\n            if(!this.performanceTimestamps[id]) {\n              this.performanceTimestamps[id] = {};\n              this.performanceTimestamps[id].throttle = false;\n              this.performanceTimestamps[id].totalTime = 0;\n              this.performanceTimestamps[id].value = 0;\n            }\n            if(!this.performanceTimestamps[id].throttle) {\n              if (this.performanceTimestamps[id].timestamp) {\n                // sleep a millisecond for hopefully more accurate times\n                let endTime = performance.now();\n                let timeDifference = endTime - this.performanceTimestamps[id].timestamp;\n                this.performanceTimestamps[id].throttle = true;\n                this.performanceTimestamps[id].totalTime += timeDifference;\n                console.log(`[WasmBoy] Performance Timestamp. ID: ${id}, Time: ${timeDifference}, value difference: ${value - this.performanceTimestamps[id].value}, total time: ${this.performanceTimestamps[id].totalTime}`);\n                this.performanceTimestamps[id].timestamp = false;\n                setTimeout(() => {\n                  this.performanceTimestamps[id].throttle = false;\n                }, 100)\n              } else {\n                this.performanceTimestamps[id].timestamp = performance.now();\n                this.performanceTimestamps[id].value = value;\n              }\n            }\n          }\n        }\n      }).then((instantiatedWasm) => {\n        // Using || since rollup and webpack wasm loaders will return differently\n        const instance = this.wasmInstance = instantiatedWasm.instance || instantiatedWasm;\n        const module = instantiatedWasm.module;\n\n        // Get our memory from our wasm instance\n        const memory = instance.exports.memory;\n\n        // Grow memory to wasmboy memory map\n        // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n        // TODO: Scale Memory as needed with Cartridge size\n        if (memory.buffer.byteLength < WASMBOY_MEMORY_SIZE) {\n          memory.grow(136);\n        }\n\n        // Will stay in sync\n        this.wasmByteMemory = new Uint8Array(this.wasmInstance.exports.memory.buffer);\n\n        resolve(this.wasmInstance);\n      });\n    });\n  }\n\n  // Private function to fetch a game\n  _fetchGameAsByteArray(game) {\n    return new Promise((resolve, reject) => {\n      if (ArrayBuffer.isView(game) && game.constructor === Uint8Array) {\n        // Simply resolve with the input\n        resolve(game);\n        return;\n      } else if (typeof game === 'object' && game.size) {\n        // Read the file object\n        // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n          const byteArray = new Uint8Array(fileReader.result);\n          resolve(byteArray);\n        }\n        fileReader.readAsArrayBuffer(game);\n      } else {\n        // Fetch the file\n        fetch(game)\n        .then(blob => {\n          if(!blob.ok) {\n            return Promise.reject(blob);\n          }\n\n          return blob.arrayBuffer();\n        }).then(bytes => {\n          const byteArray = new Uint8Array(bytes);\n          resolve(byteArray);\n        }).catch((error) => {\n          reject(error);\n        });\n      }\n    });\n  }\n}\n\nexport const WasmBoy = new WasmBoyLib();\nexport { WasmBoyAudio } from './audio/audio';\nexport { WasmBoyGraphics } from './graphics/graphics';\nexport { WasmBoyController } from './controller/controller';\n// TODO: Remove this, and consolidate public api in Wasmboy\nexport { WasmBoyMemory } from './memory/memory';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/wasmboy.js","import { Component } from 'preact';\n\nexport class WasmBoySystemControls extends Component {\n\n  constructor(props) {\n\t\tsuper(props);\n\t\t// set our state to if we are initialized or not\n\t\tthis.state = {\n    };\n\n    let fpsCounter;\n    fpsCounter = () => {\n      this.setState({\n        fps: props.wasmboy.getFps()\n      });\n      setTimeout(() => {\n        fpsCounter();\n      }, 500);\n    }\n    fpsCounter();\n\t}\n\n  // Allow passing a file\n  // https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n  loadGame(wasmboy, event) {\n    wasmboy.loadGame(event.target.files[0])\n    .then(() => {\n      console.log('wasmboy Ready!');\n    });\n  }\n\n  render(props) {\n    return (\n      <div className=\"system-controls\">\n        <input type=\"file\" onChange={(event) => {this.loadGame(props.wasmboy, event)}}></input>\n        <button onclick={() => {props.wasmboy.startGame();}}>Start Game</button>\n        <button onclick={() => {props.wasmboy.pauseGame();}}>Pause Game</button>\n        <button onclick={() => {props.wasmboy.resumeGame();}}>Resume Game</button>\n        <button onclick={() => {props.wasmboy.saveState();}}>Save State</button>\n        <button onclick={() => {props.wasmboy.loadState();}}>Load State</button>\n        <div>Gameboy FPS: {this.state.fps}</div>\n      </div>\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/wasmboySystemControls.js","import { Component } from 'preact';\n\n// Component that takes in a JSON object, where the Keys are the column name,\n// And the Rows will represent each base value of the number in the value of the key\nexport class NumberBaseTable extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      object: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      object: nextProps.object\n    });\n  }\n\n  // Modifed from: https://ourcodeworld.com/articles/read/380/how-to-convert-a-binary-string-into-a-readable-string-and-vice-versa-with-javascript\n  numberToBinaryString(number) {\n     // Simply Convert each place in hex to binary\n     const hexString = number.toString(16);\n\n     let binaryString = '';\n     for(let i = 0; i < hexString.length; i++) {\n       let valueAtIncrementer = parseInt(hexString.charAt(i), 16).toString(2);\n       let paddedValueAtIncrementer = valueAtIncrementer;\n       // Pad to 4 bits\n       while(paddedValueAtIncrementer.length < 4) {\n         paddedValueAtIncrementer = '0' + paddedValueAtIncrementer\n       }\n\n       binaryString += paddedValueAtIncrementer;\n\n       if(i !== hexString.length - 1) {\n         binaryString += ' ';\n       }\n     }\n\n     return binaryString;\n  }\n\n  getTableCellsForValueWithBase(valueBase) {\n    const tableCells = [];\n    Object.keys(this.state.object).forEach((key) => {\n      if(valueBase === 16) {\n        tableCells.push((\n          <td>0x{this.state.object[key].toString(16)}</td>\n        ))\n      } else if(valueBase === 2) {\n        tableCells.push((\n          <td>{this.numberToBinaryString(this.state.object[key])}</td>\n        ))\n      } else {\n        tableCells.push((\n          <td>{this.state.object[key]}</td>\n        ))\n      }\n    });\n\n    return tableCells;\n  }\n\n  getTableCellsForObjectKeys() {\n    if(!this.state.object) {\n      return (\n        <div></div>\n      )\n    }\n\n    const objectKeysAsTableCells = [];\n\n    Object.keys(this.state.object).forEach((key) => {\n      objectKeysAsTableCells.push((\n        <th>\n          {key}\n        </th>\n      ))\n    });\n\n    return objectKeysAsTableCells;\n  }\n\n  render() {\n\n    if(!this.state.object || Object.keys(this.state.object).length < 1) {\n      return (\n        <div></div>\n      )\n    }\n\n    return (\n      <div className=\"number-base-table-container\">\n        <table className=\"number-base-table\">\n          <tr>\n            <th>Value Base</th>\n            {this.getTableCellsForObjectKeys()}\n          </tr>\n\n          <tr>\n            <td>Hexadecimal:</td>\n            {this.getTableCellsForValueWithBase(16)}\n          </tr>\n\n          <tr>\n            <td>Decimal:</td>\n            {this.getTableCellsForValueWithBase(10)}\n          </tr>\n\n          <tr>\n            <td>Binary:</td>\n            {this.getTableCellsForValueWithBase(2)}\n          </tr>\n        </table>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/numberBaseTable.js","import { Component } from 'preact';\nimport { NumberBaseTable } from './numberBaseTable';\n\n// Constants for the gameBoyInternalMemoryLocation\nconst WASMBOY_MEMORY_GAMEBOY_INTERNAL_MEMORY = 0x000400;\n\n// Function to get a value in gameboy memory, to wasmboy memory\nconst getWasmBoyOffsetFromGameBoyOffset = (gameboyOffset) => {\n  return (gameboyOffset - 0x8000) + WASMBOY_MEMORY_GAMEBOY_INTERNAL_MEMORY;\n}\n\nexport class WasmBoyDebugger extends Component {\n\n  constructor() {\n\t\tsuper();\n\t\t// set our state to if we are initialized or not\n\t\tthis.state = {\n      cpu: {},\n      ppu: {},\n      timers: {},\n      interrupts: {}\n    };\n\t}\n\n  stepOpcode(wasmboy, wasmboyGraphics, skipDebugOutput) {\n    const numberOfCycles = wasmboy.wasmInstance.exports.emulationStep();\n\n    if(numberOfCycles <= 0) {\n      console.error('Opcode not recognized! Check wasm logs.');\n      this.updateDebugInfo(wasmboy);\n      throw new Error();\n    }\n\n    if(skipDebugOutput) {\n      return;\n    }\n    wasmboyGraphics.renderFrame();\n    this.updateDebugInfo(wasmboy);\n  }\n\n  runNumberOfOpcodes(wasmboy, wasmboyGraphics, numberOfOpcodes, stopAtOpcode, stopOpcodeShouldHaveValue) {\n    // Keep stepping until highest opcode increases\n    let opcodesToRun = 2000;\n    if(numberOfOpcodes) {\n      opcodesToRun = numberOfOpcodes\n    }\n    for(let i = 0; i < opcodesToRun; i++) {\n      this.stepOpcode(wasmboy, wasmboyGraphics, true);\n      if(stopAtOpcode && stopAtOpcode === wasmboy.wasmInstance.exports.getProgramCounter()) {\n        if(!stopOpcodeShouldHaveValue ||\n          stopOpcodeShouldHaveValue === wasmboy.wasmByteMemory[wasmboy.wasmInstance.exports.getProgramCounter()]) {\n            i = opcodesToRun;\n          }\n      }\n    }\n    wasmboyGraphics.renderFrame();\n    this.updateDebugInfo(wasmboy);\n  }\n\n  breakPoint(wasmboy, wasmboyGraphics, skipInitialStep) {\n    // Set our opcode breakpoint\n    const breakPoint = 0x401d;\n\n    if(!skipInitialStep) {\n      this.runNumberOfOpcodes(wasmboy, wasmboyGraphics, 1, breakPoint);\n    }\n\n    if(wasmboy.wasmInstance.exports.getProgramCounter() !== breakPoint) {\n      requestAnimationFrame(() => {\n        this.runNumberOfOpcodes(wasmboy, wasmboyGraphics, 2000, breakPoint, 0x34);\n        this.breakPoint(wasmboy, wasmboyGraphics, true);\n      });\n    } else {\n        wasmboyGraphics.renderFrame();\n        requestAnimationFrame(() => {\n          this.updateDebugInfo(wasmboy);\n          console.log('Reached Breakpoint, that satisfies test inside runNumberOfOpcodes');\n        });\n    }\n  }\n\n  updateDebugInfo(wasmboy) {\n\n    // Log our memory\n    console.log(`[WasmBoy Debugger] Memory:`, wasmboy.wasmByteMemory);\n\n    // Create our new state object\n    const state = {\n      cpu: {},\n      ppu: {},\n      timers: {},\n      interrupts: {}\n    };\n\n    // Update CPU State\n    state.cpu['Program Counter (PC)'] = wasmboy.wasmInstance.exports.getProgramCounter();\n    state.cpu['Opcode at PC'] = wasmboy.wasmInstance.exports.getOpcodeAtProgramCounter();\n    state.cpu['Previous Opcode'] = wasmboy.wasmInstance.exports.getPreviousOpcode();\n    state.cpu['Stack Pointer'] = wasmboy.wasmInstance.exports.getStackPointer();\n    state.cpu['Register A'] = wasmboy.wasmInstance.exports.getRegisterA();\n    state.cpu['Register F'] = wasmboy.wasmInstance.exports.getRegisterF();\n    state.cpu['Register B'] = wasmboy.wasmInstance.exports.getRegisterB();\n    state.cpu['Register C'] = wasmboy.wasmInstance.exports.getRegisterC();\n    state.cpu['Register D'] = wasmboy.wasmInstance.exports.getRegisterD();\n    state.cpu['Register E'] = wasmboy.wasmInstance.exports.getRegisterE();\n    state.cpu['Register H'] = wasmboy.wasmInstance.exports.getRegisterH();\n    state.cpu['Register L'] = wasmboy.wasmInstance.exports.getRegisterL();\n    state.cpu = Object.assign({}, state.cpu);\n\n    // Update PPU State\n    state.ppu['Scanline Register (LY) - 0xFF44'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF44)];\n    state.ppu['LCD Status (STAT) - 0xFF41'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF41)];\n    state.ppu['LCD Control (LCDC) - 0xFF40'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF40)];\n    state.ppu['Scroll X - 0xFF43'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF43)];\n    state.ppu['Scroll Y - 0xFF42'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF42)];\n    state.ppu['Window X - 0xFF4B'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF4B)];\n    state.ppu['Window Y - 0xFF4A'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF4A)];\n\n    // Update Timers State\n    state.timers['TIMA - 0xFF05'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF05)];\n    state.timers['TMA - 0xFF06'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF06)];\n    state.timers['TIMC/TAC - 0xFF07'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF07)];\n    state.timers['DIV/Divider Register - 0xFF04'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF04)];\n\n    // Update interrupts state\n    if(wasmboy.wasmInstance.exports.areInterruptsEnabled()) {\n      state.interrupts['Interrupt Master Switch'] = 0x01;\n    } else {\n      state.interrupts['Interrupt Master Switch'] = 0x00;\n    }\n    state.interrupts['IE/Interrupt Enabled - 0xFFFF'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFFFF)];\n    state.interrupts['IF/Interrupt Request - 0xFF0F'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF0F)];\n\n    // Clone our state, that it is immutable and will cause change detection\n    this.setState(state);\n  }\n\n\n\n\trender(props) {\n\t\treturn (\n      <div>\n        <h2>Debugger:</h2>\n\n        <button onclick={() => {this.updateDebugInfo(props.wasmboy)}}>Update Current Debug Info</button>\n\n        <button onclick={() => {this.stepOpcode(props.wasmboy, props.wasmboyGraphics);}}>Step Opcode</button>\n\n        <button onclick={() => {this.runNumberOfOpcodes(props.wasmboy, props.wasmboyGraphics);}}>Run Hardcoded number of opcodes loop</button>\n\n        <button onclick={() => {this.breakPoint(props.wasmboy, props.wasmboyGraphics);}}>Run Until hardcoded breakpoint</button>\n\n        <button onclick={() => {props.wasmboyAudio.debugSaveCurrentAudioBufferToWav()}}>Save Current Audio buffer to wav</button>\n\n        <h3>Cpu Info:</h3>\n        <NumberBaseTable object={this.state.cpu}></NumberBaseTable>\n\n        <h3>PPU Info:</h3>\n        <NumberBaseTable object={this.state.ppu}></NumberBaseTable>\n\n        <h3>Timer Info:</h3>\n        <NumberBaseTable object={this.state.timers}></NumberBaseTable>\n\n        <h3>Interrupt Info:</h3>\n        <NumberBaseTable object={this.state.interrupts}></NumberBaseTable>\n      </div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/wasmboyDebugger.js","export * from './wasmboySystemControls';\nexport * from './wasmboyDebugger';\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/index.js","import './style';\nimport { Component } from 'preact';\nimport { WasmBoy, WasmBoyGraphics, WasmBoyAudio, WasmBoyController, WasmBoyMemory } from './lib/wasmboy.js';\nimport { WasmBoyDebugger, WasmBoySystemControls } from './debugger/index';\n\nexport default class App extends Component {\n\n\t// Using componentDidMount to wait for the canvas element to be inserted in DOM\n\tcomponentDidMount() {\n\t\t// Get our canvas element\n\t\tconst canvasElement = document.querySelector(\".wasmboy__canvas-container__canvas\");\n\n\t\t// Load our game\n\t\tWasmBoy.initialize(canvasElement);\n\n\t\t// Add our touch inputs\n\t\t// Add our touch inputs\n\t\tconst dpadElement = document.getElementById('gamepadDpad');\n\t\tconst startElement = document.getElementById('gamepadStart');\n\t\tconst selectElement = document.getElementById('gamepadSelect');\n\t\tconst aElement = document.getElementById('gamepadA');\n\t\tconst bElement = document.getElementById('gamepadB');\n\n\t\tWasmBoyController.addTouchInput('UP', dpadElement, 'DPAD', 'UP');\n\t\tWasmBoyController.addTouchInput('RIGHT', dpadElement, 'DPAD', 'RIGHT');\n\t\tWasmBoyController.addTouchInput('DOWN', dpadElement, 'DPAD', 'DOWN');\n\t\tWasmBoyController.addTouchInput('LEFT', dpadElement, 'DPAD', 'LEFT');\n\t\tWasmBoyController.addTouchInput('A', aElement, 'BUTTON');\n\t\tWasmBoyController.addTouchInput('B', bElement, 'BUTTON');\n\t\tWasmBoyController.addTouchInput('START', startElement, 'BUTTON');\n\t\tWasmBoyController.addTouchInput('SELECT', selectElement, 'BUTTON');\n\n\t\tWasmBoy.loadGame('./games/linksawakening.gb')\n\t\t.then(() => {\n\t\t\tconsole.log('Wasmboy Ready!');\n\t\t}).catch((error) => {\n\t\t\tconsole.log('Load Game Error:', error);\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>WasmBoy</h1>\n\t\t\t\t<div class=\"wasmboy__systemControls\">\n\t\t\t\t\t<WasmBoySystemControls wasmboy={WasmBoy}></WasmBoySystemControls>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wasmboy__canvas-container\">\n    \t\t\t<canvas className=\"wasmboy__canvas-container__canvas\">\n          </canvas>\n        </div>\n\t\t\t\t<div class=\"wasmboy__debugger\">\n\t\t\t\t\t<WasmBoyDebugger wasmboy={WasmBoy} wasmboyGraphics={WasmBoyGraphics} wasmboyAudio={WasmBoyAudio}></WasmBoyDebugger>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"wasmboy__gamepad\">\n\n\t\t\t\t\t{/* DPAD */}\n\t\t\t\t\t<svg id=\"gamepadDpad\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t    <path d=\"M15 7.5V2H9v5.5l3 3 3-3zM7.5 9H2v6h5.5l3-3-3-3zM9 16.5V22h6v-5.5l-3-3-3 3zM16.5 9l-3 3 3 3H22V9h-5.5z\"/>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t{/* Start */}\n\t\t\t\t\t<svg id=\"gamepadStart\" height=\"24\" viewBox=\"6 6 12 12\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M19 13H5v-2h14v2z\"/>\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t\t\t<text x=\"21\" y=\"55\" transform=\"scale(0.325)\">Start</text>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t{/* Select */}\n\t\t\t\t\t<svg id=\"gamepadSelect\" height=\"24\" viewBox=\"6 6 12 12\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M19 13H5v-2h14v2z\"/>\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t\t\t<text x=\"16\" y=\"55\" transform=\"scale(0.325)\">Select</text>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t{/* A */}\n\t\t\t\t\t<svg id=\"gamepadA\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t\t\t<text x=\"7.5\" y=\"16.25\">A</text>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t{/* B */}\n\t\t\t\t\t<svg id=\"gamepadB\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t\t\t<text x=\"7.5\" y=\"17.25\">B</text>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/performance-now/lib/performance-now.js","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/idb/lib/idb.js","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/raf/index.js","var buffer = new ArrayBuffer(28930);var uint8 = new Uint8Array(buffer);uint8.set([0,97,115,109,1,0,0,0,1,70,11,96,7,127,127,127,127,127,127,127,0,96,2,127,127,1,127,96,2,127,127,0,96,1,127,1,127,96,0,1,127,96,1,127,0,96,0,0,96,3,127,127,127,1,127,96,3,127,127,127,0,96,4,127,127,127,127,1,127,96,8,127,127,127,127,127,127,127,127,0,2,11,1,3,101,110,118,3,108,111,103,0,0,3,206,1,204,1,0,1,2,3,3,3,2,2,3,3,2,3,3,1,1,4,3,3,3,5,3,3,3,3,3,3,4,4,4,2,2,2,6,3,6,6,6,4,4,4,6,1,5,7,2,6,6,6,6,6,6,5,1,1,5,2,5,5,5,3,2,8,3,9,4,3,5,3,9,4,4,4,9,9,9,9,9,9,2,5,5,9,5,5,9,5,5,9,5,5,9,3,3,3,3,3,3,3,3,3,1,7,3,9,5,9,9,9,7,4,4,5,4,4,5,6,5,4,6,5,1,1,2,8,8,1,8,2,5,6,6,5,3,6,6,6,6,6,3,6,6,6,3,1,3,3,3,4,3,3,3,1,8,5,5,4,4,4,3,2,6,5,5,10,4,6,1,2,6,6,6,6,6,6,6,6,6,6,6,6,3,6,6,6,6,6,6,6,6,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,5,4,1,0,136,1,6,226,2,70,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,1,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,1,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,128,8,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,128,128,8,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,7,248,2,22,10,105,110,105,116,105,97,108,105,122,101,0,52,6,117,112,100,97,116,101,0,158,1,13,101,109,117,108,97,116,105,111,110,83,116,101,112,0,157,1,20,97,114,101,73,110,116,101,114,114,117,112,116,115,69,110,97,98,108,101,100,0,110,14,115,101,116,74,111,121,112,97,100,83,116,97,116,101,0,164,1,18,103,101,116,65,117,100,105,111,81,117,101,117,101,73,110,100,101,120,0,165,1,15,114,101,115,101,116,65,117,100,105,111,81,117,101,117,101,0,166,1,9,115,97,118,101,83,116,97,116,101,0,180,1,9,108,111,97,100,83,116,97,116,101,0,192,1,12,103,101,116,82,101,103,105,115,116,101,114,65,0,193,1,12,103,101,116,82,101,103,105,115,116,101,114,66,0,194,1,12,103,101,116,82,101,103,105,115,116,101,114,67,0,195,1,12,103,101,116,82,101,103,105,115,116,101,114,68,0,196,1,12,103,101,116,82,101,103,105,115,116,101,114,69,0,197,1,12,103,101,116,82,101,103,105,115,116,101,114,72,0,198,1,12,103,101,116,82,101,103,105,115,116,101,114,76,0,199,1,12,103,101,116,82,101,103,105,115,116,101,114,70,0,200,1,17,103,101,116,80,114,111,103,114,97,109,67,111,117,110,116,101,114,0,201,1,15,103,101,116,83,116,97,99,107,80,111,105,110,116,101,114,0,202,1,17,103,101,116,80,114,101,118,105,111,117,115,79,112,99,111,100,101,0,203,1,25,103,101,116,79,112,99,111,100,101,65,116,80,114,111,103,114,97,109,67,111,117,110,116,101,114,0,204,1,6,109,101,109,111,114,121,2,0,10,192,152,1,204,1,18,0,32,0,32,1,32,2,32,3,32,4,32,5,32,6,16,0,11,13,0,32,1,65,1,32,0,116,113,65,0,71,11,227,2,1,1,127,35,10,4,64,15,11,32,0,65,255,63,77,4,64,35,11,4,127,65,4,32,1,65,255,1,113,16,2,69,5,35,11,11,65,1,113,69,4,64,32,1,65,15,113,34,2,4,64,32,2,65,10,70,4,64,65,1,36,12,11,5,65,0,36,12,11,11,5,32,0,65,255,255,0,77,4,64,35,13,69,34,2,4,127,32,2,5,32,0,65,255,223,0,77,11,65,1,113,4,64,35,11,4,64,32,1,65,15,113,36,14,11,32,1,33,2,35,15,4,64,32,2,65,31,113,33,2,35,14,65,224,1,113,36,14,5,35,16,4,64,32,2,65,255,0,113,33,2,35,14,65,128,1,113,36,14,5,35,13,4,64,35,14,65,0,113,36,14,11,11,11,35,14,32,2,114,65,255,255,3,113,36,14,11,5,35,11,69,34,2,4,127,32,0,65,255,191,1,77,5,32,2,11,65,1,113,4,64,35,15,4,127,35,17,5,35,15,11,65,1,113,4,64,35,14,65,31,113,36,14,35,14,32,1,65,224,1,113,114,65,255,255,3,113,36,14,15,11,35,16,4,64,32,1,65,8,79,34,2,4,127,32,1,65,12,77,5,32,2,11,26,11,32,1,33,2,35,13,4,127,32,2,65,15,113,5,32,2,65,3,113,11,34,2,36,18,5,35,11,69,34,2,4,127,32,0,65,255,255,1,77,5,32,2,11,65,1,113,4,64,35,15,4,64,65,0,32,1,65,255,1,113,16,2,4,64,65,1,36,17,5,65,0,36,17,11,11,11,11,11,11,11,47,1,2,127,35,14,33,1,35,13,69,34,2,4,127,32,1,69,5,32,2,11,65,1,113,4,64,65,1,33,1,11,32,1,65,128,128,1,108,32,0,65,128,128,1,107,106,11,17,0,35,18,65,128,192,0,108,32,0,65,128,192,2,107,106,11,85,0,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,12,117,14,12,1,1,1,1,2,2,2,2,3,3,4,4,0,11,12,4,11,32,0,65,128,240,28,106,15,11,32,0,16,4,65,128,240,28,106,15,11,32,0,65,128,136,126,106,15,11,32,0,16,5,65,128,136,2,106,15,11,32,0,65,128,136,126,106,11,11,0,32,0,16,6,32,1,58,0,0,11,8,0,32,0,32,1,16,7,11,12,0,32,0,65,128,254,3,113,65,8,118,11,8,0,32,0,65,255,1,113,11,32,1,1,127,32,1,16,9,33,2,32,0,32,1,16,10,16,7,32,0,65,1,106,65,255,255,3,113,32,2,16,7,11,9,0,32,0,16,6,45,0,0,11,6,0,32,0,16,12,11,21,0,32,1,65,1,32,0,116,65,255,1,113,65,127,115,113,65,255,1,113,11,18,0,32,1,65,1,32,0,116,65,255,1,113,114,65,255,1,113,11,224,1,1,1,127,65,4,65,128,254,3,16,13,65,255,1,115,65,255,1,113,34,0,16,2,4,64,65,5,32,0,16,2,69,4,64,32,0,65,240,1,114,65,255,1,113,33,0,35,24,4,127,65,2,32,0,16,14,5,65,2,32,0,16,15,11,33,0,35,25,4,127,65,0,32,0,16,14,5,65,0,32,0,16,15,11,33,0,35,26,4,127,65,3,32,0,16,14,5,65,3,32,0,16,15,11,33,0,35,27,4,127,65,1,32,0,16,14,5,65,1,32,0,16,15,11,33,0,11,5,32,0,65,240,1,114,65,255,1,113,33,0,35,20,4,127,65,0,32,0,16,14,5,65,0,32,0,16,15,11,33,0,35,21,4,127,65,1,32,0,16,14,5,65,1,32,0,16,15,11,33,0,35,22,4,127,65,2,32,0,16,14,5,65,2,32,0,16,15,11,33,0,35,23,4,127,65,3,32,0,16,14,5,65,3,32,0,16,15,11,33,0,11,32,0,11,114,1,1,127,32,0,65,128,128,2,34,1,73,4,64,65,127,15,11,32,0,65,128,128,2,79,34,1,4,127,32,0,65,128,192,2,73,5,32,1,11,65,1,113,4,64,35,19,65,2,75,4,64,65,255,1,15,11,11,32,0,65,128,252,3,79,34,1,4,127,32,0,65,159,253,3,77,5,32,1,11,65,1,113,4,64,35,19,65,2,71,4,64,65,255,1,15,11,11,32,0,65,128,254,3,70,4,64,16,16,15,11,65,127,11,27,1,1,127,32,0,16,17,34,1,65,127,70,4,64,32,0,16,12,15,11,32,1,65,255,1,113,11,57,0,2,64,2,64,2,64,2,64,2,64,32,0,65,1,107,14,3,1,2,3,0,11,12,3,11,65,145,254,3,16,18,15,11,65,150,254,3,16,18,15,11,65,155,254,3,16,18,15,11,65,160,254,3,16,18,11,110,1,2,127,32,0,16,19,65,63,113,33,1,65,192,0,33,2,32,0,65,3,70,4,127,65,255,1,32,1,107,65,255,1,113,65,1,106,65,255,1,113,5,65,192,0,32,1,107,65,255,1,113,11,33,1,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,1,107,14,4,1,2,3,4,0,11,12,4,11,32,1,36,28,12,3,11,32,1,36,29,12,2,11,32,1,36,30,12,1,11,32,1,36,31,11,11,57,0,2,64,2,64,2,64,2,64,2,64,32,0,65,1,107,14,3,1,2,3,0,11,12,3,11,65,148,254,3,16,18,15,11,65,153,254,3,16,18,15,11,65,158,254,3,16,18,15,11,65,163,254,3,16,18,11,57,0,2,64,2,64,2,64,2,64,2,64,32,0,65,1,107,14,3,1,2,3,0,11,12,3,11,65,147,254,3,16,18,15,11,65,152,254,3,16,18,15,11,65,157,254,3,16,18,15,11,65,162,254,3,16,18,11,22,0,32,0,16,21,65,7,113,65,8,116,32,0,16,22,114,65,255,255,3,113,11,57,0,2,64,2,64,2,64,2,64,2,64,32,0,65,1,107,14,3,1,2,3,0,11,12,3,11,65,146,254,3,16,18,15,11,65,151,254,3,16,18,15,11,65,156,254,3,16,18,15,11,65,161,254,3,16,18,11,9,0,32,0,16,24,65,7,113,11,12,0,32,0,16,24,65,4,118,65,15,113,11,15,0,65,144,254,3,16,18,65,240,0,113,65,4,118,11,11,0,65,144,254,3,16,18,65,7,113,11,47,1,1,127,35,36,16,28,118,33,0,65,3,65,144,254,3,16,18,16,2,4,127,35,36,32,0,107,65,255,255,3,113,5,35,36,32,0,106,65,255,255,3,113,11,34,0,11,71,0,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,1,107,14,3,1,2,3,0,11,12,3,11,65,147,254,3,32,1,16,8,12,3,11,65,152,254,3,32,1,16,8,12,2,11,65,157,254,3,32,1,16,8,12,1,11,65,162,254,3,32,1,16,8,11,11,71,0,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,1,107,14,3,1,2,3,0,11,12,3,11,65,148,254,3,32,1,16,8,12,3,11,65,153,254,3,32,1,16,8,12,2,11,65,158,254,3,32,1,16,8,12,1,11,65,163,254,3,32,1,16,8,11,11,40,1,1,127,32,0,16,21,65,248,1,113,32,1,65,8,118,65,255,1,113,114,33,2,32,0,32,1,65,255,1,113,16,30,32,0,32,2,16,31,11,58,1,2,127,16,29,34,0,65,255,15,77,34,1,4,127,16,28,65,0,75,5,32,1,11,65,1,113,4,64,32,0,36,36,65,1,32,0,16,32,16,29,33,0,11,32,0,65,255,15,75,4,64,65,0,36,32,11,11,40,0,32,0,65,3,71,4,127,32,0,16,24,65,248,1,113,65,0,75,4,127,65,1,5,65,0,11,5,65,7,65,154,254,3,16,18,16,2,11,11,109,1,1,127,65,1,36,32,35,28,69,4,64,65,192,0,36,28,11,65,128,16,65,1,16,23,107,65,4,108,36,33,65,1,16,25,36,34,65,1,16,26,36,35,65,1,16,23,36,36,16,27,36,37,16,27,65,0,75,34,0,4,127,16,28,65,0,75,5,32,0,11,65,1,113,4,64,65,1,36,38,5,65,0,36,38,11,16,28,65,0,75,4,64,16,33,11,65,1,16,34,69,4,64,65,0,36,32,11,11,54,0,65,1,36,39,35,29,69,4,64,65,192,0,36,29,11,65,128,16,65,2,16,23,107,65,4,108,36,40,65,2,16,25,36,41,65,2,16,26,36,42,65,2,16,34,69,4,64,65,0,36,39,11,11,46,0,65,1,36,43,35,30,69,4,64,65,128,2,36,30,11,65,128,16,65,3,16,23,107,65,2,108,36,44,65,0,36,45,65,3,16,34,69,4,64,65,0,36,43,11,11,119,1,2,127,65,162,254,3,16,18,65,7,113,34,1,4,64,32,1,65,1,70,4,64,65,16,33,0,5,32,1,65,2,70,4,64,65,32,33,0,5,32,1,65,3,70,4,64,65,48,33,0,5,32,1,65,4,70,4,64,65,192,0,33,0,5,32,1,65,5,70,4,64,65,208,0,33,0,5,32,1,65,6,70,4,64,65,224,0,33,0,5,32,1,65,7,70,4,64,65,240,0,33,0,11,11,11,11,11,11,11,5,65,8,33,0,11,32,0,11,11,0,65,162,254,3,16,18,65,4,118,11,12,0,16,38,16,39,116,65,255,255,3,113,11,51,0,65,1,36,46,35,31,69,4,64,65,192,0,36,31,11,16,40,36,47,65,4,16,25,36,48,65,4,16,26,36,49,65,255,255,1,36,50,65,4,16,34,69,4,64,65,0,36,46,11,11,181,3,1,2,127,65,166,254,3,16,18,33,3,32,0,65,166,254,3,71,34,2,4,127,65,7,32,3,16,2,69,5,32,2,11,65,1,113,4,64,65,1,15,11,2,64,2,64,2,64,2,64,32,0,34,2,65,145,254,3,71,4,64,32,2,65,150,254,3,70,13,1,32,2,65,155,254,3,70,13,2,32,2,65,160,254,3,70,13,3,12,4,11,32,0,32,1,65,255,1,113,16,8,65,1,16,20,65,1,15,11,32,0,32,1,65,255,1,113,16,8,65,2,16,20,65,1,15,11,32,0,32,1,65,255,1,113,16,8,65,3,16,20,65,1,15,11,32,0,32,1,65,255,1,113,16,8,65,4,16,20,65,1,15,11,32,0,65,148,254,3,70,34,2,4,127,65,7,32,1,65,255,1,113,16,2,5,32,2,11,65,1,113,4,64,32,0,32,1,65,255,1,113,16,8,16,35,65,1,15,5,32,0,65,153,254,3,70,34,2,4,127,65,7,32,1,65,255,1,113,16,2,5,32,2,11,65,1,113,4,64,32,0,32,1,65,255,1,113,16,8,16,36,65,1,15,5,32,0,65,158,254,3,70,34,2,4,127,65,7,32,1,65,255,1,113,16,2,5,32,2,11,65,1,113,4,64,32,0,32,1,65,255,1,113,16,8,16,37,65,1,15,5,32,0,65,163,254,3,70,34,2,4,127,65,7,32,1,65,255,1,113,16,2,5,32,2,11,65,1,113,4,64,32,0,32,1,65,255,1,113,16,8,16,41,65,1,15,11,11,11,11,32,0,65,166,254,3,70,34,2,4,127,65,7,32,1,65,255,1,113,16,2,69,5,32,2,11,65,1,113,4,64,65,144,254,3,33,2,3,64,32,2,65,166,254,3,73,4,64,32,2,65,0,16,8,32,2,65,1,106,65,255,255,3,113,33,2,12,1,11,11,32,0,32,1,65,255,1,113,16,8,65,1,15,11,65,0,11,68,1,1,127,32,0,65,8,116,65,255,255,3,113,33,0,3,64,32,1,65,160,1,73,4,64,32,1,65,128,252,3,106,65,255,255,3,113,32,0,32,1,106,65,255,255,3,113,16,13,16,8,32,1,65,1,106,65,255,255,3,113,33,1,12,1,11,11,11,160,2,1,2,127,32,0,65,128,128,2,34,3,73,4,64,32,0,32,1,16,3,65,0,15,11,32,0,65,128,128,2,79,34,3,4,127,32,0,65,128,192,2,73,5,32,3,11,65,1,113,4,64,35,19,65,2,75,4,64,65,0,15,11,11,65,128,252,3,33,4,32,0,65,128,192,3,79,34,3,4,127,32,0,65,128,252,3,73,5,32,3,11,65,1,113,4,64,32,2,4,64,32,0,32,1,65,255,1,113,16,8,5,32,0,32,1,16,11,11,11,32,0,65,128,252,3,79,34,3,4,127,32,0,65,159,253,3,77,5,32,3,11,65,1,113,4,64,35,19,65,2,71,4,64,65,0,15,11,11,32,0,65,160,253,3,79,34,3,4,127,32,0,65,255,253,3,77,5,32,3,11,65,1,113,4,64,65,0,15,11,32,0,65,132,254,3,70,4,64,32,0,65,0,16,8,65,0,15,11,32,0,65,144,254,3,79,34,3,4,127,32,0,65,166,254,3,77,5,32,3,11,65,1,113,4,64,32,0,32,1,16,42,4,64,65,0,15,11,11,32,0,65,196,254,3,70,4,64,32,0,65,0,16,8,65,0,15,11,32,0,65,198,254,3,70,4,64,32,1,65,255,1,113,16,43,11,65,1,11,19,0,32,0,32,1,65,1,16,44,4,64,32,0,32,1,16,7,11,11,156,1,1,2,127,65,199,2,16,18,33,0,65,0,36,10,65,0,36,15,65,0,36,11,65,0,36,16,65,0,36,13,32,0,4,64,32,0,65,1,79,34,1,4,127,32,0,65,3,77,5,32,1,11,65,1,113,4,64,65,1,36,15,5,32,0,65,5,79,34,1,4,127,32,0,65,6,77,5,32,1,11,65,1,113,4,64,65,1,36,11,5,32,0,65,15,79,34,1,4,127,32,0,65,19,77,5,32,1,11,65,1,113,4,64,65,1,36,16,5,32,0,65,25,79,34,1,4,127,32,0,65,30,77,5,32,1,11,65,1,113,4,64,65,1,36,13,11,11,11,11,5,65,1,36,10,11,11,47,0,65,144,254,3,65,128,1,16,8,65,145,254,3,65,191,1,16,8,65,146,254,3,65,243,1,16,8,65,147,254,3,65,255,1,16,8,65,148,254,3,65,191,1,16,8,11,45,0,65,149,254,3,65,255,1,16,8,65,150,254,3,65,63,16,8,65,151,254,3,65,0,16,8,65,152,254,3,65,243,1,16,8,65,153,254,3,65,191,1,16,8,11,47,0,65,154,254,3,65,255,0,16,8,65,155,254,3,65,255,1,16,8,65,156,254,3,65,159,1,16,8,65,157,254,3,65,191,1,16,8,65,158,254,3,65,255,1,16,8,11,45,0,65,159,254,3,65,255,1,16,8,65,160,254,3,65,255,1,16,8,65,161,254,3,65,0,16,8,65,162,254,3,65,0,16,8,65,163,254,3,65,191,1,16,8,11,37,0,16,47,16,48,16,49,16,50,65,164,254,3,65,247,0,16,45,65,165,254,3,65,243,1,16,45,65,166,254,3,65,241,1,16,45,11,129,2,0,65,128,240,156,4,65,1,32,0,65,0,65,0,65,0,65,0,16,1,32,0,65,0,77,4,64,65,128,2,36,0,65,1,36,1,65,176,1,36,2,65,0,36,3,65,19,36,4,65,0,36,5,65,216,1,36,6,65,1,36,7,65,205,0,36,8,65,254,255,3,36,9,65,144,254,3,65,128,1,16,45,65,145,254,3,65,191,1,16,45,65,146,254,3,65,243,1,16,45,65,148,254,3,65,191,1,16,45,65,150,254,3,65,63,16,45,65,151,254,3,65,0,16,45,65,153,254,3,65,191,1,16,45,65,154,254,3,65,255,0,16,45,65,155,254,3,65,255,1,16,45,65,156,254,3,65,159,1,16,45,65,158,254,3,65,191,1,16,45,65,160,254,3,65,255,1,16,45,65,163,254,3,65,191,1,16,45,65,164,254,3,65,247,0,16,45,65,165,254,3,65,243,1,16,45,65,166,254,3,65,241,1,16,45,65,192,254,3,65,145,1,16,45,65,199,254,3,65,252,1,16,45,65,200,254,3,65,255,1,16,45,65,201,254,3,65,255,1,16,45,11,16,46,16,51,11,18,0,32,0,65,255,1,113,65,8,116,32,1,65,255,1,113,114,11,48,1,1,127,65,1,32,0,116,65,255,1,113,33,2,32,1,65,0,75,4,64,35,2,32,2,114,65,255,1,113,36,2,5,35,2,32,2,65,255,1,115,113,36,2,11,35,2,11,9,0,65,5,32,0,16,54,26,11,75,1,1,127,32,1,65,0,78,4,64,32,0,65,15,113,32,1,65,15,113,106,65,16,113,4,64,65,1,16,55,5,65,0,16,55,11,5,32,1,34,2,65,0,32,2,107,32,2,65,0,74,27,65,15,113,32,0,65,15,113,75,4,64,65,1,16,55,5,65,0,16,55,11,11,11,9,0,65,7,32,0,16,54,26,11,9,0,65,6,32,0,16,54,26,11,9,0,65,4,32,0,16,54,26,11,21,0,32,0,65,1,116,65,255,1,113,32,0,65,7,118,114,65,255,1,113,11,58,1,1,127,32,1,16,9,33,2,32,0,32,1,16,10,34,1,65,0,16,44,4,64,32,0,32,1,16,7,11,32,0,65,1,106,65,255,255,3,113,34,0,32,2,65,0,16,44,4,64,32,0,32,2,16,7,11,11,115,0,32,2,4,64,32,0,32,1,115,32,0,32,1,106,115,34,2,65,16,113,4,64,65,1,16,55,5,65,0,16,55,11,32,2,65,128,2,113,4,64,65,1,16,59,5,65,0,16,59,11,5,32,0,32,1,65,255,255,3,113,106,65,255,255,3,113,34,2,32,0,73,4,64,65,1,16,59,5,65,0,16,59,11,32,0,32,1,65,255,255,3,113,115,32,2,115,65,128,32,113,4,64,65,1,16,55,5,65,0,16,55,11,11,11,21,0,32,0,65,1,118,32,0,65,7,116,65,255,1,113,114,65,255,1,113,11,155,4,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,65,4,15,11,32,3,16,9,36,3,32,3,16,10,36,4,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,11,35,3,35,4,16,53,35,1,16,45,65,8,15,11,35,3,35,4,16,53,65,1,106,65,255,255,3,113,34,0,16,9,36,3,32,0,16,10,36,4,65,8,15,11,35,3,65,1,16,56,35,3,65,1,106,65,255,1,113,36,3,35,3,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,4,15,11,35,3,65,127,16,56,35,3,65,1,107,65,255,1,113,36,3,35,3,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,65,4,15,11,32,1,36,3,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,1,65,128,1,113,65,128,1,70,4,64,65,1,16,59,5,65,0,16,59,11,35,1,16,60,36,1,65,0,16,57,65,0,16,58,65,0,16,55,65,4,15,11,32,3,35,9,16,61,35,0,65,2,106,65,255,255,3,113,36,0,65,20,15,11,35,7,35,8,16,53,34,0,35,3,35,4,16,53,34,1,65,0,16,62,32,0,32,1,106,65,255,255,3,113,34,0,16,9,36,7,32,0,16,10,36,8,65,0,16,58,65,8,15,11,35,3,35,4,16,53,16,18,36,1,65,8,15,11,35,3,35,4,16,53,65,1,107,65,255,255,3,113,34,0,16,9,36,3,32,0,16,10,36,4,65,8,15,11,35,4,65,1,16,56,35,4,65,1,106,65,255,1,113,36,4,35,4,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,4,15,11,35,4,65,127,16,56,35,4,65,1,107,65,255,1,113,36,4,35,4,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,65,4,15,11,32,1,36,4,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,1,65,1,113,65,0,75,4,64,65,1,16,59,5,65,0,16,59,11,35,1,16,63,36,1,65,0,16,57,65,0,16,58,65,0,16,55,65,4,15,11,65,127,11,10,0,35,2,65,4,118,65,1,113,11,18,0,32,0,65,1,116,65,255,1,113,16,65,114,65,255,1,113,11,32,0,35,0,32,0,65,24,116,65,24,117,106,65,255,255,3,113,36,0,35,0,65,1,106,65,255,255,3,113,36,0,11,21,0,32,0,65,1,118,16,65,65,7,116,65,255,1,113,114,65,255,1,113,11,182,4,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,16,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,35,0,65,1,106,65,255,255,3,113,36,0,65,4,15,11,32,3,16,9,36,5,32,3,16,10,36,6,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,11,35,5,35,6,16,53,35,1,16,45,65,8,15,11,35,5,35,6,16,53,65,1,106,65,255,255,3,113,34,0,16,9,36,5,32,0,16,10,36,6,65,8,15,11,35,5,65,1,16,56,35,5,65,1,106,65,255,1,113,36,5,35,5,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,4,15,11,35,5,65,127,16,56,35,5,65,1,107,65,255,1,113,36,5,35,5,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,65,4,15,11,32,1,36,5,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,65,0,33,0,35,1,65,128,1,113,65,128,1,70,4,64,65,1,33,0,11,35,1,16,66,36,1,32,0,4,64,65,1,16,59,5,65,0,16,59,11,65,0,16,57,65,0,16,58,65,0,16,55,65,4,15,11,32,1,16,67,65,12,15,11,35,7,35,8,16,53,34,0,35,5,35,6,16,53,34,1,65,0,16,62,32,0,32,1,106,65,255,255,3,113,34,0,16,9,36,7,32,0,16,10,36,8,65,0,16,58,65,8,15,11,35,5,35,6,16,53,16,18,36,1,65,8,15,11,35,5,35,6,16,53,65,1,107,65,255,255,3,113,34,0,16,9,36,5,32,0,16,10,36,6,65,8,15,11,35,6,65,1,16,56,35,6,65,1,106,65,255,1,113,36,6,35,6,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,4,15,11,35,6,65,127,16,56,35,6,65,1,107,65,255,1,113,36,6,35,6,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,65,4,15,11,32,1,36,6,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,65,0,33,0,35,1,65,1,113,65,1,70,4,64,65,1,33,0,11,35,1,16,68,36,1,32,0,4,64,65,1,16,59,5,65,0,16,59,11,65,0,16,57,65,0,16,58,65,0,16,55,65,4,15,11,65,127,11,10,0,35,2,65,7,118,65,1,113,11,10,0,35,2,65,5,118,65,1,113,11,10,0,35,2,65,6,118,65,1,113,11,198,5,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,32,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,16,70,4,64,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,5,32,1,16,67,65,12,15,11,0,11,32,3,34,0,16,9,36,7,32,0,16,10,36,8,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,11,35,7,35,8,16,53,34,0,35,1,16,45,32,0,65,1,106,65,255,255,3,113,34,0,16,9,36,7,32,0,16,10,36,8,65,8,15,11,35,7,35,8,16,53,65,1,106,65,255,255,3,113,34,0,16,9,36,7,32,0,16,10,36,8,65,8,15,11,35,7,65,1,16,56,35,7,65,1,106,65,255,1,113,36,7,35,7,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,4,15,11,35,7,65,127,16,56,35,7,65,1,107,65,255,1,113,36,7,35,7,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,65,4,15,11,32,1,36,7,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,65,0,33,1,16,71,65,0,75,4,64,65,6,33,1,11,16,65,65,0,75,4,64,32,1,65,224,0,114,65,255,1,113,33,1,11,16,72,65,0,75,4,127,35,1,32,1,107,65,255,1,113,5,35,1,65,15,113,65,9,75,4,64,32,1,65,6,114,65,255,1,113,33,1,11,35,1,65,153,1,75,4,64,32,1,65,224,0,114,65,255,1,113,33,1,11,35,1,32,1,106,65,255,1,113,11,34,0,4,64,65,0,16,57,5,65,1,16,57,11,32,1,65,224,0,113,4,64,65,1,16,59,5,65,0,16,59,11,65,0,16,55,32,0,36,1,65,4,15,11,16,70,65,0,75,4,64,32,1,16,67,65,12,15,5,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,0,11,35,7,35,8,16,53,34,1,32,1,65,0,16,62,32,1,65,2,108,65,255,255,3,113,34,1,16,9,36,7,32,1,16,10,36,8,65,0,16,58,65,8,15,11,35,7,35,8,16,53,34,1,16,18,36,1,32,1,65,1,106,65,255,255,3,113,34,1,16,9,36,7,32,1,16,10,36,8,65,8,15,11,35,7,35,8,16,53,65,1,107,65,255,255,3,113,34,1,16,9,36,7,32,1,16,10,36,8,65,8,15,11,35,8,65,1,16,56,35,8,65,1,106,65,255,1,113,36,8,35,8,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,4,15,11,35,8,65,127,16,56,35,8,65,1,107,65,255,1,113,36,8,35,8,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,65,4,15,11,32,1,36,8,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,1,65,127,115,65,255,1,113,36,1,65,1,16,58,65,1,16,55,65,4,15,11,65,127,11,196,4,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,48,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,16,65,4,64,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,5,32,1,16,67,65,12,15,11,0,11,32,3,36,9,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,11,35,7,35,8,16,53,34,0,35,1,16,45,32,0,65,1,107,65,255,255,3,113,34,0,16,9,36,7,32,0,16,10,36,8,65,8,15,11,35,9,65,1,106,65,255,255,3,113,36,9,65,8,15,11,35,7,35,8,16,53,34,0,16,18,34,1,65,1,34,2,16,56,32,1,65,1,106,65,255,1,113,34,1,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,32,0,32,1,16,45,65,12,15,11,35,7,35,8,16,53,34,2,16,18,34,1,65,127,16,56,32,1,65,1,107,65,255,1,113,34,1,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,32,2,32,1,16,45,65,12,15,11,35,7,35,8,16,53,32,1,16,45,35,0,65,1,106,65,255,255,3,113,36,0,65,12,15,11,65,0,16,58,65,0,16,55,65,1,16,59,65,4,15,11,16,65,65,1,70,4,64,32,1,16,67,65,12,15,5,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,0,11,35,7,35,8,16,53,34,1,35,9,65,0,16,62,32,1,35,9,106,65,255,255,3,113,34,2,16,9,36,7,32,2,16,10,36,8,65,0,16,58,65,8,15,11,35,7,35,8,16,53,34,2,16,18,36,1,32,2,65,1,107,65,255,255,3,113,34,2,16,9,36,7,32,2,16,10,36,8,65,8,15,11,35,9,65,1,107,65,255,255,3,113,36,9,65,8,15,11,35,1,65,1,16,56,35,1,65,1,106,65,255,1,113,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,4,15,11,35,1,65,127,16,56,35,1,65,1,107,65,255,1,113,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,65,4,15,11,32,1,36,1,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,65,0,16,58,65,0,16,55,16,65,65,0,75,4,64,65,0,16,59,5,65,1,16,59,11,65,4,15,11,65,127,11,201,1,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,192,0,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,65,4,15,11,35,4,36,3,65,4,15,11,35,5,36,3,65,4,15,11,35,6,36,3,65,4,15,11,35,7,36,3,65,4,15,11,35,8,36,3,65,4,15,11,35,7,35,8,16,53,16,18,36,3,65,8,15,11,35,1,36,3,65,4,15,11,35,3,36,4,65,4,15,11,65,4,15,11,35,5,36,4,65,4,15,11,35,6,36,4,65,4,15,11,35,7,36,4,65,4,15,11,35,8,36,4,65,4,15,11,35,7,35,8,16,53,16,18,36,4,65,8,15,11,35,1,36,4,65,4,15,11,65,127,11,201,1,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,208,0,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,35,3,36,5,65,4,15,11,35,4,36,5,65,4,15,11,65,4,15,11,35,6,36,5,65,4,15,11,35,7,36,5,65,4,15,11,35,8,36,5,65,4,15,11,35,7,35,8,16,53,16,18,36,5,65,8,15,11,35,1,36,5,65,4,15,11,35,3,36,6,65,4,15,11,35,4,36,6,65,4,15,11,35,5,36,6,65,4,15,11,65,4,15,11,35,7,36,6,65,4,15,11,35,8,36,6,65,4,15,11,35,7,35,8,16,53,16,18,36,6,65,4,15,11,35,1,36,6,65,4,15,11,65,127,11,201,1,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,224,0,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,35,3,36,7,65,4,15,11,35,4,36,7,65,4,15,11,35,5,36,7,65,4,15,11,35,6,36,7,65,4,15,11,65,4,15,11,35,8,36,7,65,4,15,11,35,7,35,8,16,53,16,18,36,7,65,8,15,11,35,1,36,7,65,4,15,11,35,3,36,8,65,4,15,11,35,4,36,8,65,4,15,11,35,5,36,8,65,4,15,11,35,6,36,8,65,4,15,11,35,7,36,8,65,4,15,11,65,4,15,11,35,7,35,8,16,53,16,18,36,8,65,8,15,11,35,1,36,8,65,4,15,11,65,127,11,241,1,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,240,0,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,35,7,35,8,16,53,35,3,16,45,65,8,15,11,35,7,35,8,16,53,35,4,16,45,65,8,15,11,35,7,35,8,16,53,35,5,16,45,65,8,15,11,35,7,35,8,16,53,35,6,16,45,65,8,15,11,35,7,35,8,16,53,35,7,16,45,65,8,15,11,35,7,35,8,16,53,35,8,16,45,65,8,15,11,65,1,36,52,65,4,15,11,35,7,35,8,16,53,35,1,16,45,65,8,15,11,35,3,36,1,65,4,15,11,35,4,36,1,65,4,15,11,35,5,36,1,65,4,15,11,35,6,36,1,65,4,15,11,35,7,36,1,65,4,15,11,35,8,36,1,65,4,15,11,35,7,35,8,16,53,16,18,36,1,65,4,15,11,65,4,15,11,65,127,11,71,1,1,127,32,1,65,0,78,4,64,32,0,32,0,32,1,65,255,1,113,106,65,255,1,113,75,4,64,65,1,16,59,5,65,0,16,59,11,5,32,1,34,2,65,0,32,2,107,32,2,65,0,74,27,32,0,74,4,64,65,1,16,59,5,65,0,16,59,11,11,11,43,0,35,1,32,0,16,56,35,1,32,0,16,79,35,1,32,0,106,65,255,1,113,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,11,90,1,1,127,35,1,32,0,106,16,65,106,65,255,1,113,33,1,35,1,32,0,115,32,1,115,65,16,113,4,64,65,1,16,55,5,65,0,16,55,11,35,1,32,0,106,16,65,106,65,128,2,113,65,0,75,4,64,65,1,16,59,5,65,0,16,59,11,32,1,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,11,209,1,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,128,1,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,35,3,16,80,65,4,15,11,35,4,16,80,65,4,15,11,35,5,16,80,65,4,15,11,35,6,16,80,65,4,15,11,35,7,16,80,65,4,15,11,35,8,16,80,65,4,15,11,35,7,35,8,16,53,16,18,16,80,65,8,15,11,35,1,16,80,65,4,15,11,35,3,16,81,65,4,15,11,35,4,16,81,65,4,15,11,35,5,16,81,65,4,15,11,35,6,16,81,65,4,15,11,35,7,16,81,65,4,15,11,35,8,16,81,65,4,15,11,35,7,35,8,16,53,16,18,16,81,65,8,15,11,35,1,16,81,65,4,15,11,65,127,11,56,1,1,127,35,1,32,0,65,127,108,65,16,116,65,16,117,34,1,16,56,35,1,32,1,16,79,35,1,32,0,107,65,255,1,113,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,11,90,1,1,127,35,1,32,0,107,16,65,107,65,255,1,113,33,1,35,1,32,0,115,32,1,115,65,16,113,4,64,65,1,16,55,5,65,0,16,55,11,35,1,32,0,107,16,65,107,65,128,2,113,65,0,75,4,64,65,1,16,59,5,65,0,16,59,11,32,1,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,11,209,1,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,144,1,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,35,3,16,83,65,4,15,11,35,4,16,83,65,4,15,11,35,5,16,83,65,4,15,11,35,6,16,83,65,4,15,11,35,7,16,83,65,4,15,11,35,8,16,83,65,4,15,11,35,7,35,8,16,53,16,18,16,83,65,8,15,11,35,1,16,83,65,4,15,11,35,3,16,84,65,4,15,11,35,4,16,84,65,4,15,11,35,5,16,84,65,4,15,11,35,6,16,84,65,4,15,11,35,7,16,84,65,4,15,11,35,8,16,84,65,4,15,11,35,7,35,8,16,53,16,18,16,84,65,8,15,11,35,1,16,84,65,4,15,11,65,127,11,39,0,35,1,32,0,113,65,255,1,113,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,1,16,55,65,0,16,59,11,39,0,35,1,32,0,115,65,255,1,113,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,65,0,16,59,11,209,1,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,160,1,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,35,3,16,86,65,4,15,11,35,4,16,86,65,4,15,11,35,5,16,86,65,4,15,11,35,6,16,86,65,4,15,11,35,7,16,86,65,4,15,11,35,8,16,86,65,4,15,11,35,7,35,8,16,53,16,18,16,86,65,8,15,11,35,1,16,86,65,4,15,11,35,3,16,87,65,4,15,11,35,4,16,87,65,4,15,11,35,5,16,87,65,4,15,11,35,6,16,87,65,4,15,11,35,7,16,87,65,4,15,11,35,8,16,87,65,4,15,11,35,7,35,8,16,53,16,18,16,87,65,8,15,11,35,1,16,87,65,4,15,11,65,127,11,39,0,35,1,32,0,114,65,255,1,113,36,1,35,1,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,65,0,16,59,11,53,1,1,127,35,1,32,0,65,127,108,65,16,116,65,16,117,34,1,16,56,35,1,32,1,16,79,35,1,32,1,106,65,255,255,3,113,4,64,65,0,16,57,5,65,1,16,57,11,65,1,16,58,11,209,1,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,176,1,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,35,3,16,89,65,4,15,11,35,4,16,89,65,4,15,11,35,5,16,89,65,4,15,11,35,6,16,89,65,4,15,11,35,7,16,89,65,4,15,11,35,8,16,89,65,4,15,11,35,7,35,8,16,53,16,18,16,89,65,8,15,11,35,1,16,89,65,4,15,11,35,3,16,90,65,4,15,11,35,4,16,90,65,4,15,11,35,5,16,90,65,4,15,11,35,6,16,90,65,4,15,11,35,7,16,90,65,4,15,11,35,8,16,90,65,4,15,11,35,7,35,8,16,53,16,18,16,90,65,8,15,11,35,1,16,90,65,4,15,11,65,127,11,76,1,2,127,2,127,32,0,16,17,34,1,65,127,70,4,64,32,0,16,12,12,1,11,32,1,65,255,1,113,11,33,1,2,127,32,0,65,1,106,65,255,255,3,113,34,0,16,17,34,2,65,127,70,4,64,32,0,16,12,12,1,11,32,2,65,255,1,113,11,34,0,32,1,16,53,11,52,0,32,0,65,128,1,113,65,128,1,70,4,64,65,1,16,59,5,65,0,16,59,11,32,0,16,60,34,0,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,32,0,11,50,0,32,0,65,1,113,65,0,75,4,64,65,1,16,59,5,65,0,16,59,11,32,0,16,63,34,0,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,32,0,11,65,1,1,127,32,0,65,128,1,113,65,128,1,70,4,64,65,1,33,1,11,32,0,16,66,33,0,32,1,4,64,65,1,16,59,5,65,0,16,59,11,32,0,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,32,0,11,63,1,1,127,32,0,65,1,113,65,1,70,4,64,65,1,33,1,11,32,0,16,68,33,0,32,1,4,64,65,1,16,59,5,65,0,16,59,11,32,0,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,32,0,11,70,1,1,127,32,0,65,128,1,113,65,128,1,70,4,64,65,1,33,1,11,32,0,65,1,116,65,255,1,113,33,0,32,1,4,64,65,1,16,59,5,65,0,16,59,11,32,0,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,32,0,11,98,1,2,127,32,0,65,128,1,113,65,128,1,70,4,64,65,1,33,1,11,32,0,65,1,113,65,1,70,4,64,65,1,33,2,11,32,0,65,1,118,33,0,32,1,4,64,32,0,65,128,1,114,65,255,1,113,33,0,11,32,0,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,32,2,4,64,65,1,16,59,5,65,0,16,59,11,32,0,11,48,0,32,0,65,15,113,65,4,116,32,0,65,240,1,113,65,4,118,114,34,0,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,65,0,16,59,32,0,11,62,1,1,127,32,0,65,1,113,65,1,70,4,64,65,1,33,1,11,32,0,65,1,118,34,0,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,0,16,55,32,1,4,64,65,1,16,59,5,65,0,16,59,11,32,0,11,36,0,32,1,65,1,32,0,116,65,255,1,113,113,4,64,65,0,16,57,5,65,1,16,57,11,65,0,16,58,65,1,16,55,32,1,11,48,0,32,1,65,0,75,4,127,32,2,65,1,32,0,116,65,255,1,113,114,65,255,1,113,5,32,2,65,1,32,0,116,65,255,1,113,65,127,115,65,255,1,113,113,11,34,2,11,156,8,1,5,127,65,127,33,4,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,8,112,34,5,14,8,1,2,3,4,5,6,7,8,0,11,12,8,11,35,3,33,1,12,7,11,35,4,33,1,12,6,11,35,5,33,1,12,5,11,35,6,33,1,12,4,11,35,7,33,1,12,3,11,35,8,33,1,12,2,11,35,7,35,8,16,53,16,18,33,1,12,1,11,35,1,33,1,11,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,240,1,113,65,4,118,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,32,0,65,7,77,4,64,32,1,16,93,33,2,65,1,33,3,5,32,0,65,15,77,4,64,32,1,16,94,33,2,65,1,33,3,11,11,12,15,11,32,0,65,23,77,4,64,32,1,16,95,33,2,65,1,33,3,5,32,0,65,31,77,4,64,32,1,16,96,33,2,65,1,33,3,11,11,12,14,11,32,0,65,39,77,4,64,32,1,16,97,33,2,65,1,33,3,5,32,0,65,47,77,4,64,32,1,16,98,33,2,65,1,33,3,11,11,12,13,11,32,0,65,55,77,4,64,32,1,16,99,33,2,65,1,33,3,5,32,0,65,63,77,4,64,32,1,16,100,33,2,65,1,33,3,11,11,12,12,11,32,0,65,199,0,77,4,64,65,0,32,1,16,101,33,2,65,1,33,3,5,32,0,65,207,0,77,4,64,65,1,32,1,16,101,33,2,65,1,33,3,11,11,12,11,11,32,0,65,215,0,77,4,64,65,2,32,1,16,101,33,2,65,1,33,3,5,32,0,65,223,0,77,4,64,65,3,32,1,16,101,33,2,65,1,33,3,11,11,12,10,11,32,0,65,231,0,77,4,64,65,4,32,1,16,101,33,2,65,1,33,3,5,32,0,65,239,0,77,4,64,65,5,32,1,16,101,33,2,65,1,33,3,11,11,12,9,11,32,0,65,247,0,77,4,64,65,6,32,1,16,101,33,2,65,1,33,3,5,32,0,65,255,0,77,4,64,65,7,32,1,16,101,33,2,65,1,33,3,11,11,12,8,11,32,0,65,135,1,77,4,64,65,0,65,0,32,1,16,102,33,2,65,1,33,3,5,32,0,65,143,1,77,4,64,65,1,65,0,32,1,16,102,33,2,65,1,33,3,11,11,12,7,11,32,0,65,151,1,77,4,64,65,2,65,0,32,1,16,102,33,2,65,1,33,3,5,32,0,65,159,1,77,4,64,65,3,65,0,32,1,16,102,33,2,65,1,33,3,11,11,12,6,11,32,0,65,167,1,77,4,64,65,4,65,0,32,1,16,102,33,2,65,1,33,3,5,32,0,65,175,1,77,4,64,65,5,65,0,32,1,16,102,33,2,65,1,33,3,11,11,12,5,11,32,0,65,183,1,77,4,64,65,6,65,0,32,1,16,102,33,2,65,1,33,3,5,32,0,65,191,1,77,4,64,65,7,65,0,32,1,16,102,33,2,65,1,33,3,11,11,12,4,11,32,0,65,199,1,77,4,64,65,0,65,1,32,1,16,102,33,2,65,1,33,3,5,32,0,65,207,1,77,4,64,65,1,65,1,32,1,16,102,33,2,65,1,33,3,11,11,12,3,11,32,0,65,215,1,77,4,64,65,2,65,1,32,1,16,102,33,2,65,1,33,3,5,32,0,65,223,1,77,4,64,65,3,65,1,32,1,16,102,33,2,65,1,33,3,11,11,12,2,11,32,0,65,231,1,77,4,64,65,4,65,1,32,1,16,102,33,2,65,1,33,3,5,32,0,65,239,1,77,4,64,65,5,65,1,32,1,16,102,33,2,65,1,33,3,11,11,12,1,11,32,0,65,247,1,77,4,64,65,6,65,1,32,1,16,102,33,2,65,1,33,3,5,32,0,65,255,1,77,4,64,65,7,65,1,32,1,16,102,33,2,65,1,33,3,11,11,11,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,5,14,8,1,2,3,4,5,6,7,8,0,11,12,8,11,32,2,36,3,12,7,11,32,2,36,4,12,6,11,32,2,36,5,12,5,11,32,2,36,6,12,4,11,32,2,36,7,12,3,11,32,2,36,8,12,2,11,35,7,35,8,16,53,32,2,16,45,12,1,11,32,2,36,1,11,35,0,65,1,106,65,255,255,3,113,36,0,32,3,4,64,65,8,33,4,32,5,65,6,70,4,64,65,16,33,4,11,11,32,4,11,194,4,1,1,127,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,192,1,107,14,16,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,11,12,16,11,16,70,4,64,65,8,15,5,35,9,16,92,36,0,35,9,65,2,106,65,255,255,3,113,36,9,65,20,15,11,0,11,35,3,35,4,16,53,26,35,9,16,92,33,4,35,9,65,2,106,65,255,255,3,113,36,9,32,4,16,9,36,3,32,4,16,10,36,4,65,12,15,11,16,70,4,64,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,5,32,3,36,0,65,16,15,11,0,11,32,3,36,0,65,16,15,11,16,70,4,64,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,5,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,65,2,106,65,255,255,3,113,16,61,35,0,16,92,36,0,65,24,15,11,0,11,35,3,35,4,16,53,33,4,35,9,65,2,107,65,255,255,3,113,36,9,35,9,32,4,16,61,65,16,15,11,32,1,16,80,35,0,65,1,106,65,255,255,3,113,36,0,65,4,15,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,61,65,0,36,0,65,16,15,11,16,70,65,1,70,4,64,35,9,16,92,36,0,35,9,65,2,106,65,255,255,3,113,36,9,65,20,15,5,65,8,15,11,0,11,35,9,16,92,36,0,35,9,65,2,106,65,255,255,3,113,36,9,65,16,15,11,16,70,65,1,70,4,64,32,3,36,0,65,16,15,5,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,11,0,11,32,1,16,103,34,4,65,0,74,4,64,32,4,65,4,106,65,24,116,65,24,117,33,4,11,32,4,15,11,16,70,65,1,70,4,64,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,65,2,106,65,255,255,3,113,16,61,35,0,16,92,36,0,65,24,15,5,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,11,0,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,65,2,106,65,255,255,3,113,16,61,35,0,16,92,36,0,65,24,15,11,32,1,16,81,35,0,65,1,106,65,255,255,3,113,36,0,65,4,15,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,61,65,8,36,0,65,16,15,11,65,127,11,6,0,32,0,36,54,11,247,3,1,1,127,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,208,1,107,14,16,1,2,3,0,4,5,6,7,8,9,10,0,11,0,12,13,0,11,12,13,11,16,65,4,64,65,8,15,5,35,9,16,92,36,0,35,9,65,2,106,65,255,255,3,113,36,9,65,20,15,11,0,11,35,5,35,6,16,53,26,35,9,16,92,33,4,35,9,65,2,106,65,255,255,3,113,36,9,32,4,16,9,36,5,32,4,16,10,36,6,65,12,15,11,16,65,4,64,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,5,32,3,36,0,65,16,15,11,0,11,16,65,4,64,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,5,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,65,2,106,65,255,255,3,113,16,61,35,0,16,92,36,0,65,24,15,11,0,11,35,5,35,6,16,53,33,4,35,9,65,2,107,65,255,255,3,113,36,9,35,9,32,4,16,61,65,16,15,11,32,1,16,83,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,61,65,16,36,0,65,16,15,11,16,65,65,1,70,4,64,35,9,16,92,36,0,35,9,65,2,106,65,255,255,3,113,36,9,65,20,15,5,65,8,15,11,0,11,35,9,16,92,36,0,65,1,16,105,35,9,65,2,106,65,255,255,3,113,36,9,65,16,15,11,16,65,65,1,70,4,64,32,3,36,0,65,16,15,5,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,11,0,11,16,65,65,1,70,4,64,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,65,2,106,65,255,255,3,113,16,61,35,0,16,92,36,0,65,24,15,5,35,0,65,2,106,65,255,255,3,113,36,0,65,12,15,11,0,11,32,1,16,84,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,61,65,24,36,0,65,16,15,11,65,127,11,234,2,1,1,127,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,224,1,107,14,16,1,2,3,0,0,4,5,6,7,8,9,0,0,0,10,11,0,11,12,11,11,32,1,65,128,254,3,106,65,255,255,3,113,35,1,16,45,35,0,65,1,106,65,255,255,3,113,36,0,65,12,15,11,35,7,35,8,16,53,26,35,9,16,92,33,4,35,9,65,2,106,65,255,255,3,113,36,9,32,4,16,9,36,7,32,4,16,10,36,8,65,12,15,11,35,4,65,128,254,3,106,65,255,255,3,113,35,1,16,45,65,8,15,11,35,7,35,8,16,53,33,4,35,9,65,2,107,65,255,255,3,113,36,9,35,9,32,4,16,61,65,16,15,11,32,1,16,86,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,61,65,32,36,0,65,16,15,11,35,9,32,1,65,24,116,65,24,117,34,4,65,1,16,62,35,9,32,4,106,65,255,255,3,113,36,9,65,0,16,57,65,0,16,58,35,0,65,1,106,65,255,255,3,113,36,0,65,16,15,11,35,7,35,8,16,53,36,0,65,4,15,11,32,3,35,1,16,45,35,0,65,2,106,65,255,255,3,113,36,0,65,16,15,11,32,1,16,87,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,61,65,40,36,0,65,16,15,11,65,127,11,146,3,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,240,1,107,14,16,1,2,3,4,0,5,6,7,8,9,10,11,0,0,12,13,0,11,12,13,11,32,1,65,128,254,3,106,65,255,255,3,113,16,18,36,1,35,0,65,1,106,65,255,255,3,113,36,0,65,12,15,11,35,1,35,2,16,53,26,35,9,16,92,33,0,35,9,65,2,106,65,255,255,3,113,36,9,32,0,16,9,36,1,32,0,16,10,36,2,65,12,15,11,35,4,65,128,254,3,106,65,255,255,3,113,16,18,36,1,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,65,0,16,105,65,4,15,11,35,1,35,2,16,53,33,0,35,9,65,2,107,65,255,255,3,113,36,9,35,9,32,0,16,61,65,16,15,11,32,1,16,89,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,61,65,48,36,0,65,16,15,11,65,0,16,57,65,0,16,58,35,9,32,1,65,24,116,65,24,117,34,0,65,1,16,62,35,9,32,0,106,65,255,255,3,113,34,0,16,9,36,7,32,0,16,10,36,8,35,0,65,1,106,65,255,255,3,113,36,0,65,12,15,11,35,7,35,8,16,53,36,9,65,8,15,11,32,3,16,18,36,1,35,0,65,2,106,65,255,255,3,113,36,0,65,16,15,11,65,1,16,105,65,4,15,11,32,1,16,90,35,0,65,1,106,65,255,255,3,113,36,0,65,8,15,11,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,61,65,56,36,0,65,16,15,11,65,127,11,151,2,1,1,127,35,0,65,1,106,65,255,255,3,113,36,0,32,2,32,1,16,53,33,3,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,65,240,1,113,65,4,118,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,11,12,15,11,32,0,32,1,32,2,32,3,16,64,15,11,32,0,32,1,32,2,32,3,16,69,15,11,32,0,32,1,32,2,32,3,16,73,15,11,32,0,32,1,32,2,32,3,16,74,15,11,32,0,32,1,32,2,32,3,16,75,15,11,32,0,32,1,32,2,32,3,16,76,15,11,32,0,32,1,32,2,32,3,16,77,15,11,32,0,32,1,32,2,32,3,16,78,15,11,32,0,32,1,32,2,32,3,16,82,15,11,32,0,32,1,32,2,32,3,16,85,15,11,32,0,32,1,32,2,32,3,16,88,15,11,32,0,32,1,32,2,32,3,16,91,15,11,32,0,32,1,32,2,32,3,16,104,15,11,32,0,32,1,32,2,32,3,16,106,15,11,32,0,32,1,32,2,32,3,16,107,15,11,32,0,32,1,32,2,32,3,16,108,11,4,0,35,54,11,27,0,65,143,254,3,16,18,65,255,255,3,16,18,113,65,255,1,113,4,127,65,1,5,65,0,11,11,45,0,35,55,32,0,106,36,55,35,55,65,255,1,78,4,64,35,55,65,255,1,107,36,55,65,132,254,3,65,132,254,3,16,18,65,1,106,65,255,1,113,16,8,11,11,14,0,65,135,254,3,16,18,65,4,113,65,0,75,11,77,1,1,127,65,128,2,33,0,2,64,2,64,2,64,2,64,2,64,65,135,254,3,16,18,65,3,113,14,3,1,2,3,0,11,12,3,11,65,128,8,33,0,12,2,11,65,16,33,0,12,1,11,65,192,0,33,0,11,32,0,35,57,71,4,64,65,0,36,56,32,0,36,57,11,32,0,11,18,0,65,143,254,3,32,0,65,143,254,3,16,18,16,15,16,8,11,6,0,65,2,16,115,11,80,1,1,127,32,0,16,112,16,113,4,64,35,56,32,0,106,36,56,35,56,16,114,74,4,64,35,56,16,114,107,36,56,65,133,254,3,16,18,34,1,65,255,1,70,4,64,65,133,254,3,65,134,254,3,16,18,16,8,16,116,5,65,133,254,3,32,1,65,1,106,65,255,1,113,16,8,11,11,11,11,12,0,65,7,65,192,254,3,16,18,16,2,11,6,0,65,1,16,115,11,247,1,1,3,127,65,193,254,3,16,18,33,1,32,0,69,4,64,65,0,36,58,65,196,254,3,65,0,16,8,65,0,65,1,32,1,16,14,16,14,33,1,65,0,36,19,65,193,254,3,32,1,16,8,15,11,32,1,65,3,113,65,196,254,3,16,18,34,3,65,144,1,79,4,127,65,4,65,0,65,1,32,1,16,14,16,15,34,1,16,2,33,2,65,1,5,35,58,65,248,2,78,4,127,65,5,65,1,65,0,32,1,16,14,16,15,34,1,16,2,33,2,65,2,5,35,58,65,249,1,78,4,127,65,1,65,0,32,1,16,15,16,15,33,1,65,3,5,65,3,65,1,65,0,32,1,16,14,16,14,34,1,16,2,33,2,65,0,11,11,11,34,0,71,4,64,32,2,4,64,16,119,11,32,0,69,34,2,4,127,32,3,65,197,254,3,16,18,70,5,32,2,11,65,1,113,4,64,65,6,65,2,32,1,16,15,34,1,16,2,4,64,16,119,11,5,65,2,32,1,16,14,33,1,11,11,32,0,36,19,65,193,254,3,32,1,16,8,11,87,1,1,127,32,0,65,128,144,2,70,4,127,32,1,65,128,1,106,65,255,1,113,33,2,65,7,32,1,16,2,4,64,32,1,65,128,1,107,65,16,116,65,16,117,33,2,11,32,0,32,2,65,16,108,65,16,116,65,16,117,65,255,255,3,113,106,65,255,255,3,113,5,32,0,32,1,65,16,108,106,65,255,255,3,113,11,11,19,0,32,1,16,13,32,0,65,2,108,65,255,1,113,118,65,3,113,11,12,0,32,0,32,1,65,1,106,58,0,0,11,151,2,1,7,127,65,195,254,3,16,13,33,7,32,0,65,194,254,3,16,13,106,65,255,255,3,113,34,5,65,128,2,79,4,64,32,5,65,128,2,107,65,255,255,3,113,33,5,11,32,0,65,160,1,108,65,128,188,11,106,33,8,3,64,32,4,65,160,1,72,4,64,32,4,32,7,106,34,3,65,128,2,78,4,64,32,3,65,128,2,107,33,3,11,32,1,32,2,32,5,65,3,118,65,32,108,65,255,255,3,113,106,32,3,65,3,117,65,255,255,3,113,106,65,255,255,3,113,16,13,16,121,34,0,32,5,65,8,112,34,6,65,2,108,65,255,255,3,113,106,65,255,255,3,113,16,13,33,9,32,0,32,6,65,2,108,65,255,255,3,113,106,65,1,106,65,255,255,3,113,16,13,33,6,65,0,33,0,32,3,65,16,116,65,16,117,65,8,111,65,7,107,65,16,116,65,16,117,65,127,108,65,16,116,65,16,117,65,255,1,113,34,3,32,6,16,2,4,64,65,2,33,0,11,32,3,32,9,16,2,4,64,32,0,65,1,106,65,255,1,113,33,0,11,32,8,32,4,106,32,0,65,199,254,3,16,122,16,123,32,4,65,1,106,33,4,12,1,11,11,11,170,2,1,7,127,65,203,254,3,16,13,33,5,32,0,65,202,254,3,16,13,34,3,65,255,1,113,73,4,64,15,11,32,0,32,3,107,65,255,255,3,113,33,7,32,0,65,160,1,108,65,128,188,11,106,33,8,32,5,65,7,107,65,255,255,3,113,34,5,33,3,3,64,32,3,65,160,1,73,4,64,32,3,32,5,107,65,255,255,3,113,34,4,65,128,2,79,4,64,32,4,65,128,2,107,65,255,255,3,113,33,4,11,32,1,32,2,32,7,65,3,118,65,32,108,65,255,255,3,113,106,32,4,65,3,118,106,65,255,255,3,113,16,13,16,121,34,0,32,7,65,8,112,34,6,65,2,108,65,255,255,3,113,106,65,255,255,3,113,16,13,33,9,32,0,32,6,65,2,108,65,255,255,3,113,106,65,1,106,65,255,255,3,113,16,13,33,6,65,0,33,0,32,4,65,16,116,65,16,117,65,8,111,65,7,107,65,16,116,65,16,117,65,127,108,65,16,116,65,16,117,65,255,1,113,34,4,32,6,16,2,4,64,65,2,33,0,11,32,4,32,9,16,2,4,64,32,0,65,1,106,65,255,1,113,33,0,11,32,8,32,3,106,32,0,65,199,254,3,16,122,16,123,32,3,65,1,106,65,255,255,3,113,33,3,12,1,11,11,11,19,0,32,1,65,160,1,108,65,128,188,11,106,32,0,106,45,0,0,11,24,0,32,1,65,160,1,108,65,128,188,11,106,32,0,106,32,2,65,1,106,58,0,0,11,201,3,1,11,127,3,64,32,5,65,40,72,4,64,32,5,65,4,108,65,255,255,3,113,34,2,65,128,252,3,106,65,255,255,3,113,16,13,65,16,107,65,255,1,113,33,4,32,2,65,129,252,3,106,65,255,255,3,113,16,13,65,8,107,65,255,1,113,33,9,32,2,65,130,252,3,106,65,255,255,3,113,16,13,33,6,65,7,32,2,65,131,252,3,106,65,255,255,3,113,16,13,34,2,16,2,33,10,65,6,32,2,16,2,33,7,65,5,32,2,16,2,33,11,65,200,254,3,33,8,65,4,32,2,16,2,4,64,65,201,254,3,33,8,11,65,8,33,3,32,1,4,64,65,16,33,3,11,32,0,32,4,79,34,2,4,127,32,0,32,4,32,3,106,65,255,1,113,73,5,32,2,11,65,1,113,4,64,32,0,32,4,107,65,255,1,113,33,2,32,7,4,64,32,2,32,3,107,65,16,116,65,16,117,65,127,108,65,16,116,65,16,117,33,2,11,65,128,128,2,32,6,16,121,32,2,65,2,108,65,16,116,65,16,117,106,65,255,255,3,113,34,2,16,13,33,6,32,2,65,1,106,65,255,255,3,113,16,13,33,7,65,7,33,2,3,64,32,2,65,0,78,4,64,32,2,33,4,32,11,4,64,32,4,65,7,107,65,24,116,65,24,117,65,127,108,65,24,116,65,24,117,33,4,11,65,0,33,3,32,4,65,255,1,113,32,7,16,2,4,64,65,2,33,3,11,32,4,65,255,1,113,32,6,16,2,4,64,32,3,65,1,106,65,255,1,113,33,3,11,32,3,4,64,32,3,32,8,16,122,33,3,32,9,65,7,32,2,65,255,1,113,107,65,255,1,113,106,65,255,1,113,33,4,32,10,69,34,12,4,127,32,12,5,32,4,32,0,16,126,65,1,77,11,65,1,113,4,64,32,4,32,0,32,3,16,127,11,11,32,2,65,1,107,65,24,116,65,24,117,33,2,12,1,11,11,11,32,5,65,1,106,33,5,12,1,11,11,11,127,1,3,127,65,128,144,2,33,3,65,4,65,192,254,3,16,18,34,1,16,2,4,64,65,128,128,2,33,3,11,65,0,32,1,16,2,4,64,65,128,176,2,33,2,65,3,32,1,16,2,4,64,65,128,184,2,33,2,11,32,0,32,3,32,2,16,124,11,65,5,32,1,16,2,4,64,65,128,176,2,33,2,65,6,32,1,16,2,4,64,65,128,184,2,33,2,11,32,0,32,3,32,2,16,125,11,65,1,32,1,16,2,4,64,32,0,65,2,32,1,16,2,16,128,1,11,11,96,1,4,127,65,128,136,10,33,2,65,128,188,11,33,3,3,64,32,0,65,144,1,72,4,64,65,0,33,1,3,64,32,1,65,160,1,72,4,64,65,128,136,10,32,1,106,32,0,65,160,1,108,106,65,128,188,11,32,0,65,160,1,108,106,32,1,106,45,0,0,58,0,0,32,1,65,1,106,33,1,12,1,11,11,32,0,65,1,106,33,0,12,1,11,11,11,6,0,65,0,16,115,11,109,1,1,127,16,118,34,1,16,120,32,1,4,64,35,58,32,0,106,36,58,35,58,65,200,3,78,4,64,35,58,65,200,3,107,36,58,65,196,254,3,16,18,34,0,65,144,1,70,4,64,32,0,16,129,1,16,130,1,16,131,1,5,32,0,65,144,1,73,4,64,32,0,16,129,1,11,11,65,196,254,3,32,0,65,153,1,75,4,127,65,0,5,32,0,65,1,106,65,255,1,113,11,34,0,16,8,11,11,11,10,0,65,6,32,0,16,21,16,2,11,45,1,1,127,35,28,65,0,74,34,0,4,127,65,1,16,133,1,5,32,0,11,65,1,113,4,64,35,28,65,1,107,36,28,11,35,28,69,4,64,65,0,36,32,11,11,45,1,1,127,35,29,65,0,74,34,0,4,127,65,2,16,133,1,5,32,0,11,65,1,113,4,64,35,29,65,1,107,36,29,11,35,29,69,4,64,65,0,36,39,11,11,45,1,1,127,35,30,65,0,74,34,0,4,127,65,3,16,133,1,5,32,0,11,65,1,113,4,64,35,30,65,1,107,36,30,11,35,30,69,4,64,65,0,36,43,11,11,45,1,1,127,35,31,65,0,74,34,0,4,127,65,4,16,133,1,5,32,0,11,65,1,113,4,64,35,31,65,1,107,36,31,11,35,31,69,4,64,65,0,36,46,11,11,42,0,35,37,65,1,107,36,37,35,37,65,0,76,4,64,16,27,36,37,35,38,4,127,16,27,65,0,75,5,35,38,11,65,1,113,4,64,16,33,11,11,11,10,0,65,3,32,0,16,24,16,2,11,94,1,1,127,35,34,65,1,107,36,34,35,34,65,0,76,4,64,65,1,16,25,36,34,35,34,4,64,65,1,16,139,1,34,0,4,127,35,35,65,15,72,5,32,0,11,65,1,113,4,64,35,35,65,1,106,36,35,5,65,1,16,139,1,69,34,0,4,127,35,35,65,0,74,5,32,0,11,65,1,113,4,64,35,35,65,1,107,36,35,11,11,11,11,11,94,1,1,127,35,41,65,1,107,36,41,35,41,65,0,76,4,64,65,2,16,25,36,41,35,41,4,64,65,2,16,139,1,34,0,4,127,35,42,65,15,72,5,32,0,11,65,1,113,4,64,35,42,65,1,106,36,42,5,65,2,16,139,1,69,34,0,4,127,35,42,65,0,74,5,32,0,11,65,1,113,4,64,35,42,65,1,107,36,42,11,11,11,11,11,94,1,1,127,35,48,65,1,107,36,48,35,48,65,0,76,4,64,65,4,16,25,36,48,35,48,4,64,65,4,16,139,1,34,0,4,127,35,49,65,15,72,5,32,0,11,65,1,113,4,64,35,49,65,1,106,36,49,5,65,4,16,139,1,69,34,0,4,127,35,49,65,0,74,5,32,0,11,65,1,113,4,64,35,49,65,1,107,36,49,11,11,11,11,11,12,0,32,0,16,19,65,6,118,65,3,113,11,69,0,32,0,16,143,1,26,2,64,2,64,2,64,2,64,2,64,32,0,16,143,1,65,1,107,14,3,1,2,3,0,11,12,3,11,32,1,65,129,1,16,2,15,11,32,1,65,135,1,16,2,15,11,32,1,65,254,0,16,2,15,11,32,1,65,1,16,2,11,132,1,1,1,127,35,33,32,0,107,36,33,35,33,65,0,76,4,64,35,33,34,0,65,0,32,0,107,32,0,65,0,74,27,33,0,65,128,16,65,1,16,23,107,65,4,108,36,33,35,33,32,0,107,36,33,35,61,65,1,106,65,255,1,113,36,61,35,61,65,8,79,4,64,65,0,36,61,11,11,35,32,4,127,65,1,16,34,5,35,32,11,65,1,113,4,64,35,35,33,0,5,65,15,15,11,65,1,33,1,65,1,35,61,16,144,1,69,4,64,65,127,33,1,11,32,1,32,0,108,65,15,106,11,132,1,1,1,127,35,40,32,0,107,36,40,35,40,65,0,76,4,64,35,40,34,0,65,0,32,0,107,32,0,65,0,74,27,33,0,65,128,16,65,2,16,23,107,65,4,108,36,40,35,40,32,0,107,36,40,35,62,65,1,106,65,255,1,113,36,62,35,62,65,8,79,4,64,65,0,36,62,11,11,35,39,4,127,65,2,16,34,5,35,39,11,65,1,113,4,64,35,42,33,0,5,65,15,15,11,65,1,33,1,65,1,35,62,16,144,1,69,4,64,65,127,33,1,11,32,1,32,0,108,65,15,106,11,140,2,1,2,127,35,44,32,0,107,36,44,35,44,65,0,76,4,64,35,44,34,1,65,0,32,1,107,32,1,65,0,74,27,33,1,65,128,16,65,3,16,23,107,65,2,108,36,44,35,44,32,1,107,36,44,35,45,65,1,106,65,255,255,3,113,36,45,35,45,65,32,79,4,64,65,0,36,45,11,11,65,0,33,1,35,43,4,127,65,3,16,34,5,35,43,11,65,1,113,4,64,65,156,254,3,16,18,65,5,118,65,15,113,33,2,5,65,15,15,11,35,45,65,2,110,65,255,255,3,113,65,176,254,3,106,65,255,255,3,113,16,18,33,0,35,45,65,2,112,4,127,32,0,65,15,113,5,32,0,65,4,117,65,15,113,11,33,0,2,64,2,64,2,64,2,64,2,64,2,64,32,2,14,3,1,2,3,0,11,12,3,11,32,0,65,4,117,33,0,12,3,11,65,1,33,1,12,2,11,32,0,65,1,117,33,0,65,2,33,1,12,1,11,32,0,65,2,117,33,0,65,4,33,1,11,32,1,65,0,74,4,127,32,0,32,1,109,65,16,116,65,16,117,5,65,0,11,34,0,65,15,106,65,16,116,65,16,117,11,12,0,65,3,65,162,254,3,16,18,16,2,11,177,1,1,1,127,35,47,32,0,107,36,47,35,47,65,0,76,4,64,35,47,34,0,65,0,32,0,107,32,0,65,0,74,27,33,0,16,40,36,47,35,47,32,0,107,36,47,35,50,65,1,113,35,50,65,1,118,65,1,113,115,33,1,35,50,65,1,118,36,50,35,50,32,1,65,14,116,65,255,255,3,113,114,65,255,255,3,113,36,50,16,148,1,4,64,35,50,65,191,255,3,113,36,50,35,50,32,1,65,6,116,65,255,255,3,113,114,65,255,255,3,113,36,50,11,11,35,46,4,127,65,4,16,34,5,35,46,11,65,1,113,4,64,35,49,33,1,5,65,15,15,11,65,0,35,50,65,255,1,113,16,2,4,127,65,127,5,65,1,11,34,0,32,1,108,65,15,106,11,30,0,32,0,65,255,1,113,65,1,107,65,255,1,113,65,4,106,65,255,1,113,65,165,254,3,16,18,16,2,11,23,0,32,0,65,255,1,113,65,1,107,65,255,1,113,65,165,254,3,16,18,16,2,11,56,1,1,127,32,0,65,60,70,4,64,65,255,0,15,11,32,0,65,60,107,65,160,141,6,34,2,108,32,1,108,65,8,109,65,160,141,6,109,65,60,106,65,160,141,6,108,65,140,241,2,109,65,255,1,113,11,37,1,1,127,32,2,65,2,108,65,128,240,20,106,34,3,32,0,65,1,106,58,0,0,32,3,65,1,106,32,1,65,1,106,58,0,0,11,224,3,1,11,127,35,59,32,0,106,36,59,35,59,65,128,192,0,78,4,64,35,59,65,128,192,0,107,36,59,2,64,2,64,2,64,2,64,2,64,2,64,2,64,35,60,14,8,1,0,2,0,3,0,4,5,0,11,12,5,11,16,134,1,16,135,1,16,136,1,16,137,1,12,4,11,16,134,1,16,135,1,16,136,1,16,137,1,16,138,1,12,3,11,16,134,1,16,135,1,16,136,1,16,137,1,12,2,11,16,134,1,16,135,1,16,136,1,16,137,1,16,138,1,12,1,11,16,140,1,16,141,1,16,142,1,11,35,60,65,1,106,65,255,1,113,36,60,35,60,65,8,79,4,64,65,0,36,60,11,11,32,0,16,145,1,33,3,32,0,16,146,1,33,4,32,0,16,147,1,33,5,32,0,16,149,1,33,6,35,63,32,0,106,65,255,1,113,36,63,35,63,65,215,0,79,4,64,35,63,65,215,0,107,65,255,1,113,36,63,65,164,254,3,16,18,34,0,65,4,118,65,7,113,33,7,32,0,65,7,113,33,0,65,1,34,8,16,150,1,4,127,65,0,32,3,106,5,65,15,11,33,1,65,2,34,9,16,150,1,4,127,32,1,32,4,106,5,32,1,65,15,106,11,33,1,65,3,34,10,16,150,1,4,127,32,1,32,5,106,5,32,1,65,15,106,11,33,1,65,4,34,11,16,150,1,4,127,32,1,32,6,106,5,32,1,65,15,106,11,33,1,65,1,16,151,1,4,127,65,0,32,3,106,5,65,15,11,33,2,65,2,16,151,1,4,127,32,2,32,4,106,5,32,2,65,15,106,11,33,2,65,3,16,151,1,4,127,32,2,32,5,106,5,32,2,65,15,106,11,33,2,65,4,16,151,1,4,127,32,2,32,6,106,5,32,2,65,15,106,11,33,2,32,1,32,7,65,1,106,16,152,1,65,1,106,65,255,1,113,32,2,32,0,65,1,106,16,152,1,65,1,106,65,255,1,113,35,64,16,153,1,35,64,65,1,106,36,64,35,64,35,65,65,2,109,65,1,107,78,4,64,35,64,65,1,107,36,64,11,11,11,100,0,65,0,16,105,65,143,254,3,32,0,65,143,254,3,16,18,16,14,16,8,35,9,65,2,107,65,255,255,3,113,36,9,35,9,35,0,16,11,2,64,2,64,2,64,2,64,2,64,2,64,32,0,14,5,1,2,3,0,4,0,11,12,4,11,65,192,0,36,0,12,3,11,65,200,0,36,0,12,2,11,65,208,0,36,0,12,1,11,65,224,0,36,0,11,65,0,36,52,11,186,1,1,4,127,35,54,4,64,65,143,254,3,16,18,33,2,65,255,255,3,16,18,33,3,32,2,65,0,75,4,64,65,0,32,2,16,2,34,0,4,127,65,0,32,3,16,2,5,32,0,11,65,1,113,4,64,65,0,16,155,1,65,1,33,1,5,65,1,32,2,16,2,34,0,4,127,65,1,32,3,16,2,5,32,0,11,65,1,113,4,64,65,1,16,155,1,65,1,33,1,5,65,2,32,2,16,2,34,0,4,127,65,2,32,3,16,2,5,32,0,11,65,1,113,4,64,65,2,16,155,1,65,1,33,1,5,65,4,32,2,16,2,34,0,4,127,65,4,32,3,16,2,5,32,0,11,65,1,113,4,64,65,4,16,155,1,65,1,33,1,11,11,11,11,11,11,32,1,4,127,65,20,5,65,0,11,11,220,1,1,3,127,65,4,33,0,35,52,69,34,2,4,127,35,53,69,5,32,2,11,65,1,113,4,64,35,0,16,18,34,1,35,0,65,1,106,65,255,255,3,113,16,18,35,0,65,2,106,65,255,255,3,113,16,18,16,109,33,0,5,35,52,4,127,16,110,69,5,35,52,11,65,1,113,34,2,4,127,16,111,5,32,2,11,65,1,113,4,64,65,0,36,52,65,0,36,53,35,0,16,18,34,1,35,0,16,18,35,0,65,1,106,65,255,255,3,113,16,18,16,109,33,0,35,0,65,1,107,65,255,255,3,113,36,0,11,11,35,2,65,240,1,113,36,2,32,0,65,255,1,113,16,117,35,53,69,4,64,32,0,65,255,1,113,16,132,1,11,32,0,65,255,1,113,16,154,1,32,0,16,156,1,106,65,24,116,65,24,117,34,0,65,0,76,4,64,65,196,240,156,4,65,1,32,1,65,0,65,0,65,0,65,0,16,1,11,32,0,11,87,1,2,127,3,64,32,1,69,34,0,4,127,35,51,65,145,162,4,72,5,32,0,11,65,1,113,4,64,16,157,1,34,0,65,0,78,4,64,35,51,32,0,106,36,51,5,65,1,33,1,11,12,1,11,11,35,51,65,145,162,4,78,4,64,65,0,36,51,65,1,15,11,35,0,65,1,107,65,255,255,3,113,36,0,65,127,11,73,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,14,8,1,2,3,4,5,6,7,8,0,11,12,8,11,35,24,15,11,35,25,15,11,35,26,15,11,35,27,15,11,35,20,15,11,35,21,15,11,35,22,15,11,35,23,15,11,65,0,11,93,0,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,2,64,32,0,14,8,1,2,3,4,5,6,7,8,0,11,12,8,11,32,1,36,24,12,7,11,32,1,36,25,12,6,11,32,1,36,26,12,5,11,32,1,36,27,12,4,11,32,1,36,20,12,3,11,32,1,36,21,12,2,11,32,1,36,22,12,1,11,32,1,36,23,11,11,6,0,65,4,16,115,11,120,1,3,127,65,0,36,53,32,0,16,159,1,69,4,64,65,1,33,1,11,32,0,65,1,16,160,1,32,1,4,64,65,0,33,1,32,0,65,3,77,4,64,65,1,33,1,11,65,0,33,0,65,4,65,128,254,3,16,13,34,3,16,2,34,2,4,127,32,1,5,32,2,11,65,1,113,4,64,65,1,33,0,11,65,5,32,3,16,2,34,2,4,127,32,1,69,5,32,2,11,65,1,113,4,64,65,1,33,0,11,32,0,4,64,16,161,1,11,11,11,9,0,32,0,65,0,16,160,1,11,154,1,0,32,0,65,0,74,4,64,65,0,16,162,1,5,65,0,16,163,1,11,32,1,65,0,74,4,64,65,1,16,162,1,5,65,1,16,163,1,11,32,2,65,0,74,4,64,65,2,16,162,1,5,65,2,16,163,1,11,32,3,65,0,74,4,64,65,3,16,162,1,5,65,3,16,163,1,11,32,4,65,0,74,4,64,65,4,16,162,1,5,65,4,16,163,1,11,32,5,65,0,74,4,64,65,5,16,162,1,5,65,5,16,163,1,11,32,6,65,0,74,4,64,65,6,16,162,1,5,65,6,16,163,1,11,32,7,65,0,74,4,64,65,7,16,162,1,5,65,7,16,163,1,11,11,4,0,35,64,11,6,0,65,0,36,64,11,20,0,32,0,32,1,65,50,108,65,255,255,3,113,106,65,255,255,3,113,11,22,0,32,1,4,64,32,0,65,1,58,0,0,5,32,0,65,0,58,0,0,11,11,158,1,0,65,0,65,0,16,167,1,35,1,58,0,0,65,1,65,0,16,167,1,35,3,58,0,0,65,2,65,0,16,167,1,35,4,58,0,0,65,3,65,0,16,167,1,35,5,58,0,0,65,4,65,0,16,167,1,35,6,58,0,0,65,5,65,0,16,167,1,35,7,58,0,0,65,6,65,0,16,167,1,35,8,58,0,0,65,7,65,0,16,167,1,35,2,58,0,0,65,8,65,0,16,167,1,35,9,59,1,0,65,10,65,0,16,167,1,35,0,59,1,0,65,12,65,0,16,167,1,35,51,54,2,0,65,17,65,0,16,167,1,35,52,16,168,1,65,18,65,0,16,167,1,35,53,16,168,1,11,26,0,65,0,65,1,16,167,1,35,58,54,2,0,65,4,65,1,16,167,1,35,19,58,0,0,11,26,0,65,0,65,2,16,167,1,35,54,16,168,1,65,1,65,2,16,167,1,35,66,16,168,1,11,3,0,1,11,110,0,65,0,65,4,16,167,1,35,14,59,1,0,65,2,65,4,16,167,1,35,18,59,1,0,65,4,65,4,16,167,1,35,12,16,168,1,65,5,65,4,16,167,1,35,17,16,168,1,65,6,65,4,16,167,1,35,10,16,168,1,65,7,65,4,16,167,1,35,15,16,168,1,65,8,65,4,16,167,1,35,11,16,168,1,65,9,65,4,16,167,1,35,16,16,168,1,65,10,65,4,16,167,1,35,13,16,168,1,11,38,0,65,0,65,5,16,167,1,35,56,54,2,0,65,4,65,5,16,167,1,35,57,54,2,0,65,8,65,5,16,167,1,35,55,54,2,0,11,38,0,65,0,65,6,16,167,1,35,59,54,2,0,65,4,65,6,16,167,1,35,63,58,0,0,65,5,65,6,16,167,1,35,60,58,0,0,11,122,0,65,0,65,7,16,167,1,35,32,16,168,1,65,1,65,7,16,167,1,35,33,54,2,0,65,5,65,7,16,167,1,35,34,54,2,0,65,9,65,7,16,167,1,35,28,54,2,0,65,14,65,7,16,167,1,35,35,54,2,0,65,19,65,7,16,167,1,35,67,58,0,0,65,20,65,7,16,167,1,35,61,58,0,0,65,25,65,7,16,167,1,35,38,16,168,1,65,26,65,7,16,167,1,35,37,54,2,0,65,31,65,7,16,167,1,35,36,59,1,0,11,86,0,65,0,65,8,16,167,1,35,39,16,168,1,65,1,65,8,16,167,1,35,40,54,2,0,65,5,65,8,16,167,1,35,41,54,2,0,65,9,65,8,16,167,1,35,29,54,2,0,65,14,65,8,16,167,1,35,42,54,2,0,65,19,65,8,16,167,1,35,68,58,0,0,65,20,65,8,16,167,1,35,62,58,0,0,11,50,0,65,0,65,9,16,167,1,35,43,16,168,1,65,1,65,9,16,167,1,35,44,54,2,0,65,5,65,9,16,167,1,35,30,54,2,0,65,9,65,9,16,167,1,35,45,59,1,0,11,74,0,65,0,65,10,16,167,1,35,46,16,168,1,65,1,65,10,16,167,1,35,47,54,2,0,65,5,65,10,16,167,1,35,48,54,2,0,65,9,65,10,16,167,1,35,31,54,2,0,65,14,65,10,16,167,1,35,49,54,2,0,65,19,65,10,16,167,1,35,50,59,1,0,11,35,0,16,169,1,16,170,1,16,171,1,16,172,1,16,173,1,16,174,1,16,175,1,16,176,1,16,177,1,16,178,1,16,179,1,11,18,0,32,0,45,0,0,65,0,75,4,64,65,1,15,11,65,0,11,158,1,0,65,0,65,0,16,167,1,45,0,0,36,1,65,1,65,0,16,167,1,45,0,0,36,3,65,2,65,0,16,167,1,45,0,0,36,4,65,3,65,0,16,167,1,45,0,0,36,5,65,4,65,0,16,167,1,45,0,0,36,6,65,5,65,0,16,167,1,45,0,0,36,7,65,6,65,0,16,167,1,45,0,0,36,8,65,7,65,0,16,167,1,45,0,0,36,2,65,8,65,0,16,167,1,47,1,0,36,9,65,10,65,0,16,167,1,47,1,0,36,0,65,12,65,0,16,167,1,40,2,0,36,51,65,17,65,0,16,167,1,16,181,1,36,52,65,18,65,0,16,167,1,16,181,1,36,53,11,26,0,65,0,65,1,16,167,1,40,2,0,36,58,65,4,65,1,16,167,1,45,0,0,36,19,11,26,0,65,0,65,2,16,167,1,16,181,1,36,54,65,1,65,2,16,167,1,16,181,1,36,66,11,110,0,65,0,65,4,16,167,1,47,1,0,36,14,65,2,65,4,16,167,1,47,1,0,36,18,65,4,65,4,16,167,1,16,181,1,36,12,65,5,65,4,16,167,1,16,181,1,36,17,65,6,65,4,16,167,1,16,181,1,36,10,65,7,65,4,16,167,1,16,181,1,36,15,65,8,65,4,16,167,1,16,181,1,36,11,65,9,65,4,16,167,1,16,181,1,36,16,65,10,65,4,16,167,1,16,181,1,36,13,11,38,0,65,0,65,5,16,167,1,40,2,0,36,56,65,4,65,5,16,167,1,40,2,0,36,57,65,8,65,5,16,167,1,40,2,0,36,55,11,41,0,65,0,65,6,16,167,1,40,2,0,36,59,65,4,65,6,16,167,1,45,0,0,36,63,65,5,65,6,16,167,1,45,0,0,36,60,16,166,1,11,122,0,65,0,65,7,16,167,1,16,181,1,36,32,65,1,65,7,16,167,1,40,2,0,36,33,65,5,65,7,16,167,1,40,2,0,36,34,65,9,65,7,16,167,1,40,2,0,36,28,65,14,65,7,16,167,1,40,2,0,36,35,65,19,65,7,16,167,1,45,0,0,36,67,65,20,65,7,16,167,1,45,0,0,36,61,65,25,65,7,16,167,1,16,181,1,36,38,65,26,65,7,16,167,1,40,2,0,36,37,65,31,65,7,16,167,1,47,1,0,36,36,11,86,0,65,0,65,8,16,167,1,16,181,1,36,39,65,1,65,8,16,167,1,40,2,0,36,40,65,5,65,8,16,167,1,40,2,0,36,41,65,9,65,8,16,167,1,40,2,0,36,29,65,14,65,8,16,167,1,40,2,0,36,42,65,19,65,8,16,167,1,45,0,0,36,68,65,20,65,8,16,167,1,45,0,0,36,62,11,50,0,65,0,65,9,16,167,1,16,181,1,36,43,65,1,65,9,16,167,1,40,2,0,36,44,65,5,65,9,16,167,1,40,2,0,36,30,65,9,65,9,16,167,1,47,1,0,36,45,11,74,0,65,0,65,10,16,167,1,16,181,1,36,46,65,1,65,10,16,167,1,40,2,0,36,47,65,5,65,10,16,167,1,40,2,0,36,48,65,9,65,10,16,167,1,40,2,0,36,31,65,14,65,10,16,167,1,40,2,0,36,49,65,19,65,10,16,167,1,47,1,0,36,50,11,35,0,16,182,1,16,183,1,16,184,1,16,172,1,16,185,1,16,186,1,16,187,1,16,188,1,16,189,1,16,190,1,16,191,1,11,4,0,35,1,11,4,0,35,3,11,4,0,35,4,11,4,0,35,5,11,4,0,35,6,11,4,0,35,7,11,4,0,35,8,11,4,0,35,2,11,4,0,35,0,11,4,0,35,9,11,4,0,35,69,11,6,0,35,0,16,18,11,11,125,2,0,65,128,240,156,4,11,67,32,0,0,0,105,0,110,0,105,0,116,0,105,0,97,0,108,0,105,0,122,0,105,0,110,0,103,0,32,0,40,0,105,0,110,0,99,0,108,0,117,0,100,0,101,0,66,0,111,0,111,0,116,0,82,0,111,0,109,0,61,0,36,0,48,0,41,0,65,196,240,156,4,11,41,19,0,0,0,79,0,112,0,99,0,111,0,100,0,101,0,32,0,97,0,116,0,32,0,99,0,114,0,97,0,115,0,104,0,58,0,32,0,36,0,48,0,245,63,4,110,97,109,101,1,237,63,205,1,0,26,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,101,110,118,46,108,111,103,1,22,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,108,111,103,2,33,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,99,104,101,99,107,66,105,116,79,110,66,121,116,101,3,33,119,97,115,109,47,109,101,109,111,114,121,47,98,97,110,107,105,110,103,47,104,97,110,100,108,101,66,97,110,107,105,110,103,4,37,119,97,115,109,47,109,101,109,111,114,121,47,98,97,110,107,105,110,103,47,103,101,116,82,111,109,66,97,110,107,65,100,100,114,101,115,115,5,37,119,97,115,109,47,109,101,109,111,114,121,47,98,97,110,107,105,110,103,47,103,101,116,82,97,109,66,97,110,107,65,100,100,114,101,115,115,6,55,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,77,97,112,47,103,101,116,87,97,115,109,66,111,121,79,102,102,115,101,116,70,114,111,109,71,97,109,101,66,111,121,79,102,102,115,101,116,7,49,119,97,115,109,47,109,101,109,111,114,121,47,115,116,111,114,101,47,95,101,105,103,104,116,66,105,116,83,116,111,114,101,73,110,116,111,87,97,115,109,66,111,121,77,101,109,111,114,121,8,52,119,97,115,109,47,109,101,109,111,114,121,47,115,116,111,114,101,47,101,105,103,104,116,66,105,116,83,116,111,114,101,73,110,116,111,71,66,77,101,109,111,114,121,83,107,105,112,84,114,97,112,115,9,32,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,115,112,108,105,116,72,105,103,104,66,121,116,101,10,31,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,115,112,108,105,116,76,111,119,66,121,116,101,11,54,119,97,115,109,47,109,101,109,111,114,121,47,115,116,111,114,101,47,115,105,120,116,101,101,110,66,105,116,83,116,111,114,101,73,110,116,111,71,66,77,101,109,111,114,121,83,107,105,112,84,114,97,112,115,12,47,119,97,115,109,47,109,101,109,111,114,121,47,108,111,97,100,47,95,101,105,103,104,116,66,105,116,76,111,97,100,70,114,111,109,87,97,115,109,66,111,121,77,101,109,111,114,121,13,50,119,97,115,109,47,109,101,109,111,114,121,47,108,111,97,100,47,101,105,103,104,116,66,105,116,76,111,97,100,70,114,111,109,71,66,77,101,109,111,114,121,83,107,105,112,84,114,97,112,115,14,33,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,114,101,115,101,116,66,105,116,79,110,66,121,116,101,15,31,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,115,101,116,66,105,116,79,110,66,121,116,101,16,32,119,97,115,109,47,106,111,121,112,97,100,47,105,110,100,101,120,47,103,101,116,74,111,121,112,97,100,83,116,97,116,101,17,36,119,97,115,109,47,109,101,109,111,114,121,47,114,101,97,100,84,114,97,112,115,47,99,104,101,99,107,82,101,97,100,84,114,97,112,115,18,41,119,97,115,109,47,109,101,109,111,114,121,47,108,111,97,100,47,101,105,103,104,116,66,105,116,76,111,97,100,70,114,111,109,71,66,77,101,109,111,114,121,19,42,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,103,101,116,82,101,103,105,115,116,101,114,49,79,102,67,104,97,110,110,101,108,20,41,119,97,115,109,47,115,111,117,110,100,47,108,101,110,103,116,104,47,115,101,116,67,104,97,110,110,101,108,76,101,110,103,116,104,67,111,117,110,116,101,114,21,42,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,103,101,116,82,101,103,105,115,116,101,114,52,79,102,67,104,97,110,110,101,108,22,42,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,103,101,116,82,101,103,105,115,116,101,114,51,79,102,67,104,97,110,110,101,108,23,40,119,97,115,109,47,115,111,117,110,100,47,102,114,101,113,117,101,110,99,121,47,103,101,116,67,104,97,110,110,101,108,70,114,101,113,117,101,110,99,121,24,42,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,103,101,116,82,101,103,105,115,116,101,114,50,79,102,67,104,97,110,110,101,108,25,44,119,97,115,109,47,115,111,117,110,100,47,101,110,118,101,108,111,112,101,47,103,101,116,67,104,97,110,110,101,108,69,110,118,101,108,111,112,101,80,101,114,105,111,100,26,45,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,103,101,116,67,104,97,110,110,101,108,83,116,97,114,116,105,110,103,86,111,108,117,109,101,27,34,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,103,101,116,83,119,101,101,112,80,101,114,105,111,100,28,33,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,103,101,116,83,119,101,101,112,83,104,105,102,116,29,44,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,103,101,116,78,101,119,70,114,101,113,117,101,110,99,121,70,114,111,109,83,119,101,101,112,30,42,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,115,101,116,82,101,103,105,115,116,101,114,51,79,102,67,104,97,110,110,101,108,31,42,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,115,101,116,82,101,103,105,115,116,101,114,52,79,102,67,104,97,110,110,101,108,32,40,119,97,115,109,47,115,111,117,110,100,47,102,114,101,113,117,101,110,99,121,47,115,101,116,67,104,97,110,110,101,108,70,114,101,113,117,101,110,99,121,33,50,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,99,97,108,99,117,108,97,116,101,83,119,101,101,112,65,110,100,67,104,101,99,107,79,118,101,114,102,108,111,119,34,40,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,105,115,67,104,97,110,110,101,108,68,97,99,69,110,97,98,108,101,100,35,36,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,67,104,97,110,110,101,108,49,46,116,114,105,103,103,101,114,36,36,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,50,47,67,104,97,110,110,101,108,50,46,116,114,105,103,103,101,114,37,36,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,51,47,67,104,97,110,110,101,108,51,46,116,114,105,103,103,101,114,38,66,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,103,101,116,78,111,105,115,101,67,104,97,110,110,101,108,68,105,118,105,115,111,114,70,114,111,109,68,105,118,105,115,111,114,67,111,100,101,39,54,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,103,101,116,78,111,105,115,101,67,104,97,110,110,101,108,67,108,111,99,107,83,104,105,102,116,40,59,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,103,101,116,78,111,105,115,101,67,104,97,110,110,101,108,70,114,101,113,117,101,110,99,121,80,101,114,105,111,100,41,36,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,116,114,105,103,103,101,114,42,48,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,104,97,110,100,108,101,100,87,114,105,116,101,84,111,83,111,117,110,100,82,101,103,105,115,116,101,114,43,35,119,97,115,109,47,109,101,109,111,114,121,47,119,114,105,116,101,84,114,97,112,115,47,95,100,109,97,84,114,97,110,115,102,101,114,44,38,119,97,115,109,47,109,101,109,111,114,121,47,119,114,105,116,101,84,114,97,112,115,47,99,104,101,99,107,87,114,105,116,101,84,114,97,112,115,45,43,119,97,115,109,47,109,101,109,111,114,121,47,115,116,111,114,101,47,101,105,103,104,116,66,105,116,83,116,111,114,101,73,110,116,111,71,66,77,101,109,111,114,121,46,38,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,105,110,105,116,105,97,108,105,122,101,67,97,114,116,114,105,100,103,101,47,39,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,67,104,97,110,110,101,108,49,46,105,110,105,116,105,97,108,105,122,101,48,39,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,50,47,67,104,97,110,110,101,108,50,46,105,110,105,116,105,97,108,105,122,101,49,39,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,51,47,67,104,97,110,110,101,108,51,46,105,110,105,116,105,97,108,105,122,101,50,39,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,105,110,105,116,105,97,108,105,122,101,51,32,119,97,115,109,47,115,111,117,110,100,47,115,111,117,110,100,47,105,110,105,116,105,97,108,105,122,101,83,111,117,110,100,52,23,119,97,115,109,47,99,112,117,47,99,112,117,47,105,110,105,116,105,97,108,105,122,101,53,35,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,99,111,110,99,97,116,101,110,97,116,101,66,121,116,101,115,54,25,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,115,101,116,70,108,97,103,66,105,116,55,31,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,115,101,116,72,97,108,102,67,97,114,114,121,70,108,97,103,56,47,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,99,104,101,99,107,65,110,100,83,101,116,69,105,103,104,116,66,105,116,72,97,108,102,67,97,114,114,121,70,108,97,103,57,26,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,115,101,116,90,101,114,111,70,108,97,103,58,30,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,115,101,116,83,117,98,116,114,97,99,116,70,108,97,103,59,27,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,115,101,116,67,97,114,114,121,70,108,97,103,60,33,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,114,111,116,97,116,101,66,121,116,101,76,101,102,116,61,45,119,97,115,109,47,109,101,109,111,114,121,47,115,116,111,114,101,47,115,105,120,116,101,101,110,66,105,116,83,116,111,114,101,73,110,116,111,71,66,77,101,109,111,114,121,62,52,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,99,104,101,99,107,65,110,100,83,101,116,83,105,120,116,101,101,110,66,105,116,70,108,97,103,115,65,100,100,79,118,101,114,102,108,111,119,63,34,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,114,111,116,97,116,101,66,121,116,101,82,105,103,104,116,64,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,48,120,65,27,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,103,101,116,67,97,114,114,121,70,108,97,103,66,45,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,114,111,116,97,116,101,66,121,116,101,76,101,102,116,84,104,114,111,117,103,104,67,97,114,114,121,67,25,119,97,115,109,47,99,112,117,47,99,112,117,47,114,101,108,97,116,105,118,101,74,117,109,112,68,46,119,97,115,109,47,104,101,108,112,101,114,115,47,105,110,100,101,120,47,114,111,116,97,116,101,66,121,116,101,82,105,103,104,116,84,104,114,111,117,103,104,67,97,114,114,121,69,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,49,120,70,26,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,103,101,116,90,101,114,111,70,108,97,103,71,31,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,103,101,116,72,97,108,102,67,97,114,114,121,70,108,97,103,72,30,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,103,101,116,83,117,98,116,114,97,99,116,70,108,97,103,73,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,50,120,74,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,51,120,75,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,52,120,76,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,53,120,77,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,54,120,78,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,55,120,79,43,119,97,115,109,47,99,112,117,47,102,108,97,103,115,47,99,104,101,99,107,65,110,100,83,101,116,69,105,103,104,116,66,105,116,67,97,114,114,121,70,108,97,103,80,34,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,97,100,100,65,82,101,103,105,115,116,101,114,81,46,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,97,100,100,65,84,104,114,111,117,103,104,67,97,114,114,121,82,101,103,105,115,116,101,114,82,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,56,120,83,34,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,115,117,98,65,82,101,103,105,115,116,101,114,84,46,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,115,117,98,65,84,104,114,111,117,103,104,67,97,114,114,121,82,101,103,105,115,116,101,114,85,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,57,120,86,34,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,97,110,100,65,82,101,103,105,115,116,101,114,87,34,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,120,111,114,65,82,101,103,105,115,116,101,114,88,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,65,120,89,33,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,111,114,65,82,101,103,105,115,116,101,114,90,33,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,99,112,65,82,101,103,105,115,116,101,114,91,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,66,120,92,43,119,97,115,109,47,109,101,109,111,114,121,47,108,111,97,100,47,115,105,120,116,101,101,110,66,105,116,76,111,97,100,70,114,111,109,71,66,77,101,109,111,114,121,93,40,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,114,111,116,97,116,101,82,101,103,105,115,116,101,114,76,101,102,116,94,41,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,114,111,116,97,116,101,82,101,103,105,115,116,101,114,82,105,103,104,116,95,52,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,114,111,116,97,116,101,82,101,103,105,115,116,101,114,76,101,102,116,84,104,114,111,117,103,104,67,97,114,114,121,96,53,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,114,111,116,97,116,101,82,101,103,105,115,116,101,114,82,105,103,104,116,84,104,114,111,117,103,104,67,97,114,114,121,97,39,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,115,104,105,102,116,76,101,102,116,82,101,103,105,115,116,101,114,98,50,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,115,104,105,102,116,82,105,103,104,116,65,114,105,116,104,109,101,116,105,99,82,101,103,105,115,116,101,114,99,43,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,115,119,97,112,78,105,98,98,108,101,115,79,110,82,101,103,105,115,116,101,114,100,47,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,115,104,105,102,116,82,105,103,104,116,76,111,103,105,99,97,108,82,101,103,105,115,116,101,114,101,39,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,116,101,115,116,66,105,116,79,110,82,101,103,105,115,116,101,114,102,38,119,97,115,109,47,99,112,117,47,105,110,115,116,114,117,99,116,105,111,110,115,47,115,101,116,66,105,116,79,110,82,101,103,105,115,116,101,114,103,33,119,97,115,109,47,99,112,117,47,99,98,79,112,99,111,100,101,115,47,104,97,110,100,108,101,67,98,79,112,99,111,100,101,104,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,67,120,105,35,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,115,101,116,73,110,116,101,114,114,117,112,116,115,106,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,68,120,107,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,69,120,108,31,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,104,97,110,100,108,101,79,112,99,111,100,101,70,120,109,30,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,101,120,101,99,117,116,101,79,112,99,111,100,101,110,42,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,97,114,101,73,110,116,101,114,114,117,112,116,115,69,110,97,98,108,101,100,111,42,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,97,114,101,73,110,116,101,114,114,117,112,116,115,80,101,110,100,105,110,103,112,39,119,97,115,109,47,116,105,109,101,114,115,47,105,110,100,101,120,47,95,99,104,101,99,107,68,105,118,105,100,101,114,82,101,103,105,115,116,101,114,113,33,119,97,115,109,47,116,105,109,101,114,115,47,105,110,100,101,120,47,95,105,115,84,105,109,101,114,69,110,97,98,108,101,100,114,50,119,97,115,109,47,116,105,109,101,114,115,47,105,110,100,101,120,47,95,103,101,116,67,117,114,114,101,110,116,67,121,99,108,101,67,111,117,110,116,101,114,70,114,101,113,117,101,110,99,121,115,39,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,95,114,101,113,117,101,115,116,73,110,116,101,114,114,117,112,116,116,43,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,114,101,113,117,101,115,116,84,105,109,101,114,73,110,116,101,114,114,117,112,116,117,30,119,97,115,109,47,116,105,109,101,114,115,47,105,110,100,101,120,47,117,112,100,97,116,101,84,105,109,101,114,115,118,30,119,97,115,109,47,103,114,97,112,104,105,99,115,47,108,99,100,47,105,115,76,99,100,69,110,97,98,108,101,100,119,41,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,114,101,113,117,101,115,116,76,99,100,73,110,116,101,114,114,117,112,116,120,30,119,97,115,109,47,103,114,97,112,104,105,99,115,47,108,99,100,47,115,101,116,76,99,100,83,116,97,116,117,115,121,44,119,97,115,109,47,103,114,97,112,104,105,99,115,47,114,101,110,100,101,114,85,116,105,108,115,47,103,101,116,84,105,108,101,68,97,116,97,65,100,100,114,101,115,115,122,45,119,97,115,109,47,103,114,97,112,104,105,99,115,47,114,101,110,100,101,114,85,116,105,108,115,47,103,101,116,67,111,108,111,114,70,114,111,109,80,97,108,101,116,116,101,123,54,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,115,101,116,80,105,120,101,108,79,110,70,114,97,109,101,68,105,114,101,99,116,108,121,84,111,87,97,115,109,77,101,109,111,114,121,124,41,119,97,115,109,47,103,114,97,112,104,105,99,115,47,98,97,99,107,103,114,111,117,110,100,47,114,101,110,100,101,114,66,97,99,107,103,114,111,117,110,100,125,33,119,97,115,109,47,103,114,97,112,104,105,99,115,47,119,105,110,100,111,119,47,114,101,110,100,101,114,87,105,110,100,111,119,126,34,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,103,101,116,80,105,120,101,108,79,110,70,114,97,109,101,127,34,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,115,101,116,80,105,120,101,108,79,110,70,114,97,109,101,128,1,35,119,97,115,109,47,103,114,97,112,104,105,99,115,47,115,112,114,105,116,101,115,47,114,101,110,100,101,114,83,112,114,105,116,101,115,129,1,36,119,97,115,109,47,103,114,97,112,104,105,99,115,47,103,114,97,112,104,105,99,115,47,95,100,114,97,119,83,99,97,110,108,105,110,101,130,1,41,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,115,116,111,114,101,70,114,97,109,101,84,111,66,101,82,101,110,100,101,114,101,100,131,1,44,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,114,101,113,117,101,115,116,86,66,108,97,110,107,73,110,116,101,114,114,117,112,116,132,1,37,119,97,115,109,47,103,114,97,112,104,105,99,115,47,103,114,97,112,104,105,99,115,47,117,112,100,97,116,101,71,114,97,112,104,105,99,115,133,1,40,119,97,115,109,47,115,111,117,110,100,47,108,101,110,103,116,104,47,105,115,67,104,97,110,110,101,108,76,101,110,103,116,104,69,110,97,98,108,101,100,134,1,41,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,67,104,97,110,110,101,108,49,46,117,112,100,97,116,101,76,101,110,103,116,104,135,1,41,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,50,47,67,104,97,110,110,101,108,50,46,117,112,100,97,116,101,76,101,110,103,116,104,136,1,41,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,51,47,67,104,97,110,110,101,108,51,46,117,112,100,97,116,101,76,101,110,103,116,104,137,1,41,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,117,112,100,97,116,101,76,101,110,103,116,104,138,1,40,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,67,104,97,110,110,101,108,49,46,117,112,100,97,116,101,83,119,101,101,112,139,1,45,119,97,115,109,47,115,111,117,110,100,47,101,110,118,101,108,111,112,101,47,103,101,116,67,104,97,110,110,101,108,69,110,118,101,108,111,112,101,65,100,100,77,111,100,101,140,1,43,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,67,104,97,110,110,101,108,49,46,117,112,100,97,116,101,69,110,118,101,108,111,112,101,141,1,43,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,50,47,67,104,97,110,110,101,108,50,46,117,112,100,97,116,101,69,110,118,101,108,111,112,101,142,1,43,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,117,112,100,97,116,101,69,110,118,101,108,111,112,101,143,1,30,119,97,115,109,47,115,111,117,110,100,47,100,117,116,121,47,103,101,116,67,104,97,110,110,101,108,68,117,116,121,144,1,61,119,97,115,109,47,115,111,117,110,100,47,100,117,116,121,47,105,115,68,117,116,121,67,121,99,108,101,67,108,111,99,107,80,111,115,105,116,105,118,101,79,114,78,101,103,97,116,105,118,101,70,111,114,87,97,118,101,102,111,114,109,145,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,67,104,97,110,110,101,108,49,46,103,101,116,83,97,109,112,108,101,146,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,50,47,67,104,97,110,110,101,108,50,46,103,101,116,83,97,109,112,108,101,147,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,51,47,67,104,97,110,110,101,108,51,46,103,101,116,83,97,109,112,108,101,148,1,55,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,105,115,78,111,105,115,101,67,104,97,110,110,101,108,87,105,100,116,104,77,111,100,101,83,101,116,149,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,103,101,116,83,97,109,112,108,101,150,1,49,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,105,115,67,104,97,110,110,101,108,69,110,97,98,108,101,100,79,110,76,101,102,116,79,117,116,112,117,116,151,1,50,119,97,115,109,47,115,111,117,110,100,47,114,101,103,105,115,116,101,114,115,47,105,115,67,104,97,110,110,101,108,69,110,97,98,108,101,100,79,110,82,105,103,104,116,79,117,116,112,117,116,152,1,40,119,97,115,109,47,115,111,117,110,100,47,115,111,117,110,100,47,103,101,116,83,97,109,112,108,101,65,115,85,110,115,105,103,110,101,100,66,121,116,101,153,1,53,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,115,101,116,76,101,102,116,65,110,100,82,105,103,104,116,79,117,116,112,117,116,70,111,114,65,117,100,105,111,81,117,101,117,101,154,1,28,119,97,115,109,47,115,111,117,110,100,47,115,111,117,110,100,47,117,112,100,97,116,101,83,111,117,110,100,155,1,38,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,95,104,97,110,100,108,101,73,110,116,101,114,114,117,112,116,156,1,37,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,99,104,101,99,107,73,110,116,101,114,114,117,112,116,115,157,1,30,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,101,109,117,108,97,116,105,111,110,83,116,101,112,158,1,23,119,97,115,109,47,99,112,117,47,111,112,99,111,100,101,115,47,117,112,100,97,116,101,159,1,51,119,97,115,109,47,106,111,121,112,97,100,47,105,110,100,101,120,47,95,103,101,116,74,111,121,112,97,100,66,117,116,116,111,110,83,116,97,116,101,70,114,111,109,66,117,116,116,111,110,73,100,160,1,51,119,97,115,109,47,106,111,121,112,97,100,47,105,110,100,101,120,47,95,115,101,116,74,111,121,112,97,100,66,117,116,116,111,110,83,116,97,116,101,70,114,111,109,66,117,116,116,111,110,73,100,161,1,44,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,114,101,113,117,101,115,116,74,111,121,112,97,100,73,110,116,101,114,114,117,112,116,162,1,36,119,97,115,109,47,106,111,121,112,97,100,47,105,110,100,101,120,47,95,112,114,101,115,115,74,111,121,112,97,100,66,117,116,116,111,110,163,1,38,119,97,115,109,47,106,111,121,112,97,100,47,105,110,100,101,120,47,95,114,101,108,101,97,115,101,74,111,121,112,97,100,66,117,116,116,111,110,164,1,32,119,97,115,109,47,106,111,121,112,97,100,47,105,110,100,101,120,47,115,101,116,74,111,121,112,97,100,83,116,97,116,101,165,1,35,119,97,115,109,47,115,111,117,110,100,47,115,111,117,110,100,47,103,101,116,65,117,100,105,111,81,117,101,117,101,73,110,100,101,120,166,1,32,119,97,115,109,47,115,111,117,110,100,47,115,111,117,110,100,47,114,101,115,101,116,65,117,100,105,111,81,117,101,117,101,167,1,43,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,103,101,116,83,97,118,101,83,116,97,116,101,77,101,109,111,114,121,79,102,102,115,101,116,168,1,50,119,97,115,109,47,109,101,109,111,114,121,47,115,116,111,114,101,47,115,116,111,114,101,66,111,111,108,101,97,110,68,105,114,101,99,116,108,121,84,111,87,97,115,109,77,101,109,111,114,121,169,1,26,119,97,115,109,47,99,112,117,47,99,112,117,47,67,112,117,46,115,97,118,101,83,116,97,116,101,170,1,41,119,97,115,109,47,103,114,97,112,104,105,99,115,47,103,114,97,112,104,105,99,115,47,71,114,97,112,104,105,99,115,46,115,97,118,101,83,116,97,116,101,171,1,42,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,73,110,116,101,114,114,117,112,116,115,46,115,97,118,101,83,116,97,116,101,172,1,34,119,97,115,109,47,106,111,121,112,97,100,47,105,110,100,101,120,47,74,111,121,112,97,100,46,115,97,118,101,83,116,97,116,101,173,1,35,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,77,101,109,111,114,121,46,115,97,118,101,83,116,97,116,101,174,1,34,119,97,115,109,47,116,105,109,101,114,115,47,105,110,100,101,120,47,84,105,109,101,114,115,46,115,97,118,101,83,116,97,116,101,175,1,32,119,97,115,109,47,115,111,117,110,100,47,115,111,117,110,100,47,83,111,117,110,100,46,115,97,118,101,83,116,97,116,101,176,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,67,104,97,110,110,101,108,49,46,115,97,118,101,83,116,97,116,101,177,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,50,47,67,104,97,110,110,101,108,50,46,115,97,118,101,83,116,97,116,101,178,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,51,47,67,104,97,110,110,101,108,51,46,115,97,118,101,83,116,97,116,101,179,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,115,97,118,101,83,116,97,116,101,180,1,20,119,97,115,109,47,105,110,100,101,120,47,115,97,118,101,83,116,97,116,101,181,1,50,119,97,115,109,47,109,101,109,111,114,121,47,108,111,97,100,47,108,111,97,100,66,111,111,108,101,97,110,68,105,114,101,99,116,108,121,70,114,111,109,87,97,115,109,77,101,109,111,114,121,182,1,26,119,97,115,109,47,99,112,117,47,99,112,117,47,67,112,117,46,108,111,97,100,83,116,97,116,101,183,1,41,119,97,115,109,47,103,114,97,112,104,105,99,115,47,103,114,97,112,104,105,99,115,47,71,114,97,112,104,105,99,115,46,108,111,97,100,83,116,97,116,101,184,1,42,119,97,115,109,47,105,110,116,101,114,114,117,112,116,115,47,105,110,100,101,120,47,73,110,116,101,114,114,117,112,116,115,46,108,111,97,100,83,116,97,116,101,185,1,35,119,97,115,109,47,109,101,109,111,114,121,47,109,101,109,111,114,121,47,77,101,109,111,114,121,46,108,111,97,100,83,116,97,116,101,186,1,34,119,97,115,109,47,116,105,109,101,114,115,47,105,110,100,101,120,47,84,105,109,101,114,115,46,108,111,97,100,83,116,97,116,101,187,1,32,119,97,115,109,47,115,111,117,110,100,47,115,111,117,110,100,47,83,111,117,110,100,46,108,111,97,100,83,116,97,116,101,188,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,49,47,67,104,97,110,110,101,108,49,46,108,111,97,100,83,116,97,116,101,189,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,50,47,67,104,97,110,110,101,108,50,46,108,111,97,100,83,116,97,116,101,190,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,51,47,67,104,97,110,110,101,108,51,46,108,111,97,100,83,116,97,116,101,191,1,38,119,97,115,109,47,115,111,117,110,100,47,99,104,97,110,110,101,108,52,47,67,104,97,110,110,101,108,52,46,108,111,97,100,83,116,97,116,101,192,1,20,119,97,115,109,47,105,110,100,101,120,47,108,111,97,100,83,116,97,116,101,193,1,23,119,97,115,109,47,105,110,100,101,120,47,103,101,116,82,101,103,105,115,116,101,114,65,194,1,23,119,97,115,109,47,105,110,100,101,120,47,103,101,116,82,101,103,105,115,116,101,114,66,195,1,23,119,97,115,109,47,105,110,100,101,120,47,103,101,116,82,101,103,105,115,116,101,114,67,196,1,23,119,97,115,109,47,105,110,100,101,120,47,103,101,116,82,101,103,105,115,116,101,114,68,197,1,23,119,97,115,109,47,105,110,100,101,120,47,103,101,116,82,101,103,105,115,116,101,114,69,198,1,23,119,97,115,109,47,105,110,100,101,120,47,103,101,116,82,101,103,105,115,116,101,114,72,199,1,23,119,97,115,109,47,105,110,100,101,120,47,103,101,116,82,101,103,105,115,116,101,114,76,200,1,23,119,97,115,109,47,105,110,100,101,120,47,103,101,116,82,101,103,105,115,116,101,114,70,201,1,28,119,97,115,109,47,105,110,100,101,120,47,103,101,116,80,114,111,103,114,97,109,67,111,117,110,116,101,114,202,1,26,119,97,115,109,47,105,110,100,101,120,47,103,101,116,83,116,97,99,107,80,111,105,110,116,101,114,203,1,28,119,97,115,109,47,105,110,100,101,120,47,103,101,116,80,114,101,118,105,111,117,115,79,112,99,111,100,101,204,1,36,119,97,115,109,47,105,110,100,101,120,47,103,101,116,79,112,99,111,100,101,65,116,80,114,111,103,114,97,109,67,111,117,110,116,101,114,0,49,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,31,97,115,115,101,116,115,47,105,110,100,101,120,46,117,110,116,111,117,99,104,101,100,46,119,97,115,109,46,109,97,112,]);// This file will not run on it's own\n\nconst {\n  Module,\n  instantiate,\n  Memory,\n  Table\n} = WebAssembly;\n\nconst WebAssemblyModule = function(deps = {\n  'global': {},\n  'env': {\n    'memory': new Memory({initial: 10, limit: 100}),\n    'table': new Table({initial: 0, element: 'anyfunc'})\n  }\n}) {\n  return instantiate(buffer, deps);\n}\n\nmodule.exports = WebAssemblyModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/wasm/index.untouched.wasm\n// module id = toTQ\n// module chunks = 0"],"sourceRoot":""}