{"version":3,"sources":["webpack:///webpack/bootstrap 33b9ea8d995ee0c764e2","webpack:///./node_modules/idb/lib/node.js","webpack:///./node_modules/preact/dist/preact.min.js","webpack:///./style.css?b85c","webpack:///./node_modules/audiobuffer-to-wav/index.js","webpack:///./node_modules/unfetch/dist/unfetch.es.js","webpack:///./node_modules/promise-polyfill/src/index.js","webpack:///./lib/graphics/graphics.js","webpack:///./lib/audio/audio.js","webpack:///./node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","webpack:///./lib/controller/controller.js","webpack:///./lib/memory/idb.js","webpack:///./lib/memory/memory.js","webpack:///./lib/wasmboy.js","webpack:///./debugger/wasmboySystemControls.js","webpack:///./debugger/numberBaseTable.js","webpack:///./debugger/wasmboyBackgroundMap.js","webpack:///./debugger/wasmboyTileData.js","webpack:///./debugger/wasmboyDebugger.js","webpack:///./debugger/wasmboyOptions.js","webpack:///./debugger/index.js","webpack:///./index.js","webpack:///./node_modules/preact-portal/dist/preact-portal.js","webpack:///./node_modules/performance-now/lib/performance-now.js","webpack:///./node_modules/idb/lib/idb.js","webpack:///./node_modules/raf/index.js","webpack:///./dist/wasm/index.untouched.wasm"],"names":["indexedDB","module","exports","require","open","Promise","reject","delete","e","t","n","o","r","i","l","a","E","arguments","length","W","push","children","pop","u","nodeName","attributes","key","S","vnode","slice","call","__d","A","debounceRendering","P","k","splitText","_componentConstructor","__n","toLowerCase","defaultProps","_","document","createElementNS","createElement","p","parentNode","removeChild","c","style","cssText","V","test","innerHTML","__html","replace","substring","addEventListener","f","removeEventListener","__l","s","removeAttribute","removeAttributeNS","setAttributeNS","setAttribute","className","type","event","d","D","afterMount","componentDidMount","h","H","R","ownerSVGElement","j","m","appendChild","_component","nodeValue","createTextNode","replaceChild","b","__preactattr_","U","firstChild","name","value","nextSibling","v","dangerouslySetInnerHTML","g","childNodes","y","w","C","x","N","__k","trim","insertBefore","L","ref","lastChild","previousSibling","constructor","I","prototype","render","T","__b","splice","__x","__r","base","componentWillMount","componentWillReceiveProps","context","__c","__p","props","syncComponentUpdates","state","__s","shouldComponentUpdate","componentWillUpdate","getChildContext","M","__u","unshift","componentDidUpdate","afterUpdate","__h","beforeUnmount","componentWillUnmount","resolve","then","bind","setTimeout","setState","forceUpdate","$","cloneElement","Component","rerender","options","self","preact","audioBufferToWav","buffer","opt","numChannels","numberOfChannels","sampleRate","format","float32","bitDepth","result","interleave","getChannelData","encodeWAV","samples","bytesPerSample","blockAlign","ArrayBuffer","view","DataView","writeString","setUint32","setUint16","floatTo16BitPCM","writeFloat32","inputL","inputR","Float32Array","index","inputIndex","output","offset","input","setFloat32","Math","max","min","setInt16","string","setUint8","charCodeAt","fetch","url","request","XMLHttpRequest","method","headers","setRequestHeader","withCredentials","credentials","onload","response","onerror","send","body","keys","all","header","getAllResponseHeaders","ok","status","statusText","responseURL","clone","text","responseText","json","JSON","parse","blob","Blob","entries","get","has","setTimeoutFunc","noop","fn","thisArg","apply","handle","deferred","_state","_value","_deferreds","_handled","_immediateFn","cb","onFulfilled","onRejected","promise","ret","newValue","TypeError","finale","doResolve","_unhandledRejectionFn","len","Handler","done","reason","ex","undefined","_proto","catch","prom","arr","args","Array","remaining","res","val","race","values","setImmediate","err","console","warn","GAMEBOY_CAMERA_WIDTH","GAMEBOY_CAMERA_HEIGHT","WASMBOY_MAX_FRAMES_IN_QUEUE","WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION","wasmInstance","wasmByteMemory","frameQueue","frameQueueRenderPromise","canvasElement","canvasContext","canvasImageData","initialize","frameInProgressVideoOutputLocation","getContext","width","height","createImageData","clearRect","error","renderFrame","imageDataArray","Uint8ClampedArray","rgbColor","pixelStart","color","imageDataIndex","data","putImageData","WasmBoyGraphics","DEFAULT_AUDIO_LATENCY_IN_MILLI","WASMBOY_MIN_TIME_REMAINING_IN_MILLI","WASMBOY_SAMPLE_RATE","DEFAULT_AUDIO_LATENCY_IN_SECONDS","WASMBOY_MIN_TIME_REMAINING_IN_SECONDS","WASMBOY_SOUND_OUTPUT_LOCATION","getUnsignedAudioSampleAsFloat","audioSample","abs","audioContext","audioBuffer","audioPlaytime","audioSources","averageTimeStretchFps","soundOutputLocation","window","AudioContext","webkitAudioContext","playAudio","currentFps","allowFastSpeedStretching","fps","fpsCap","floor","shift","reduce","accumulator","currentValue","playbackRate","timeUntilNextSample","currentTime","audioContextCurrentTime","audioContextCurrentTimeWithLatency","cancelAllAudio","wasmAudioQueueIndex","getAudioQueueIndex","wasmBoyNumberOfSamples","createBuffer","leftChannelBuffer","rightChannelBuffer","bufferIndex","wasmBoyNumberOfSamplesForStereo","resetAudioQueue","source","createBufferSource","setValueAtTime","connect","destination","start","sourcePlaybackLength","playtime","stop","playTime","timeUntilSourceEnds","debugSaveCurrentAudioBufferToWav","toWav","wav","URL","createObjectURL","anchor","href","download","click","revokeObjectURL","WasmBoyAudio","keyInputSchema","ACTIVE","KEY_CODE","gamepadInputSchema","BUTTON_ID","JOYSTICK","AXIS_ID","IS_POSITIVE","touchInputSchema","ELEMENT","TYPE","DIRECTION","EVENT_HANDLER","BOUNDING_RECT","keyMapSchema","UP","KEYBOARD","GAMEPAD","TOUCHPAD","RIGHT","DOWN","LEFT","B","SELECT","START","getKeyInput","keyCode","getGamepadInput","gamepadButtonId","axisId","axisIsPositive","getTouchInput","element","direction","eventHandler","boundingRect","getBoundingClientRect","eventListenerCallback","KeyMapSchema","Key","BACKSPACE","TAB","RETURN","SHIFT","CTRL","ALT","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","Q","X","Z","SEMI_COLON","SINGLE_QUOTE","BACK_SLASH","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","keymap","KEYMAP","classCallCheck","instance","Constructor","createClass","defineProperties","target","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","INPUT_HTML_TAGS","getAnalogStickAxis","gamepad","axes","isButtonPressed","buttonId","buttons","pressed","ResponsiveGamepadService","gamepadAnalogStickDeadZone","keyMapKeys","keyMap","_this","updateKeyboard","updateTouchpadRect","addTouchInput","keyMapKey","_this2","touchInput","updateTouchpad","getState","_this3","updateGamepad","controllerState","forEach","keyboardState","some","keyInput","gamepadState","gamepadInput","touchState","keyEvent","_this4","tagName","isTargetInputField","htmlTag","isPressed","preventDefault","_this5","gamepads","navigator","getGamepads","_loop","_ret","_this6","resetTouchDpad","_this7","dpadKeys","dpadKey","includes","touches","touch","rectCenterX","right","left","rectCenterY","bottom","top","touchX","clientX","touchY","clientY","horizontalInfluence","isHorizontal","deadzoneSize","isLeft","isUp","ResponsiveGamepad","updateController","setJoypadState","WasmBoyController","idb","keyval","dbPromise","upgradeDB","createObjectStore","db","transaction","objectStore","set","tx","put","complete","clear","store","iterateKeyCursor","iterateCursor","cursor","continue","idbKeyval","WASMBOY_UNLOAD_STORAGE","WASMBOY_SAVE_STATE_SCHEMA","wasmBoyMemory","wasmBoyInternalState","wasmBoyPaletteMemory","gameBoyMemory","cartridgeRam","date","isAuto","WASMBOY_GAME_BYTES_LOCATION","WASMBOY_GAME_RAM_BANKS_LOCATION","WASMBOY_INTERNAL_STATE_SIZE","WASMBOY_INTERNAL_STATE_LOCATION","WASMBOY_INTERNAL_MEMORY_SIZE","WASMBOY_INTERNAL_MEMORY_LOCATION","WASMBOY_PALETTE_MEMORY_SIZE","WASMBOY_PALETTE_MEMORY_LOCATION","getCartridgeHeader","headerLength","headerArray","Uint8Array","getCartridgeRam","cartridgeType","ramSize","getSaveState","saveStateCallback","saveStateName","saveState","Date","now","loadSaveState","loadedCartridgeMemoryState","ROM","RAM","_initializeConstants","hasCoreStarted","saveStateMemoryKeys","localStorage","setItem","stringify","unloadStorage","getItem","unloadStorageObject","removeItem","saveCartridgeRam","initializeHeadless","gameBytesLocation","gameRamBanksLocation","wasmBoyInternalStateSize","wasmBoyInternalStateLocation","gameBoyInternalMemorySize","gameBoyInternalMemoryLocation","gameboyColorPaletteSize","gameboyColorPaletteLocation","getLoadedCartridgeMemoryState","clearMemory","resetMemory","loadCartridgeRom","gameBytes","isGbcEnabled","bootRom","passedHeader","passedCartridgeRam","cartridgeObject","loadCartridgeRam","passedSaveState","saveStates","loadState","resetState","getCartridgeObject","WasmBoyMemory","raf","getPerformanceTimestamp","performance","paused","pauseFpsThrottle","ready","renderId","updateId","loadedGame","headless","isAudioEnabled","gameboyFrameRate","gameboyFpsCap","fpsTimeStamps","frameSkip","frameSkipCounter","audioBatchProcessing","graphicsBatchProcessing","timersBatchProcessing","graphicsDisableScanlineRendering","audioAccumulateSamples","tileRendering","tileCaching","logRequest","performanceTimestamps","wasmBoyOptions","gameboySpeed","loadGame","game","pauseGame","initPromises","_fetchGameAsByteArray","_getWasmInstance","responses","reset","config","startGame","resumeGame","_emulatorUpdate","intervalRate","setInterval","_emulatorRender","cancel","clearInterval","getFps","getWasmBoyMemoryForLoadedGame","wasPaused","currentHighResTime","log","update","getProgramCounter","toString","shouldSkipRenderingFrame","memoryBase","wasmModule","env","message","arg0","arg1","arg2","arg3","arg4","arg5","Uint32Array","memory","str","String","fromCharCode","Uint16Array","hexLog","logString","random","performanceTimestamp","id","throttle","totalTime","timestamp","endTime","timeDifference","instantiatedWasm","isView","size","fileReader","FileReader","byteArray","readAsArrayBuffer","arrayBuffer","bytes","WasmBoy","showSaveStates","fpsCounter","wasmboy","openSaveStates","newState","wasmboyMemory","closeSaveStates","files","saveStateElements","saveStateDateString","toLocaleString","screenshotCanvasDataURL","object","nextProps","numberToBinaryString","number","hexString","binaryString","valueAtIncrementer","parseInt","charAt","paddedValueAtIncrementer","getTableCellsForValueWithBase","valueBase","tableCells","getTableCellsForObjectKeys","objectKeysAsTableCells","getElementById","updateBackgroundMap","shouldUpdate","drawBackgroundMapToWasmMemory","backgroundMapLocation","beginPath","scrollX","getWasmBoyOffsetFromGameBoyOffset","scrollY","lineWidth","strokeStyle","rect","stroke","canvasId","tileDataXPixels","tileDataYPixels","updateCanvas","drawTileDataToWasmMemory","tileDataMap","gameboyOffset","autoUpdateValueTableId","showValueTable","autoUpdateValueTable","showBackgroundMap","showTileData","breakPoint","opcodesToRun","valueTable","cpu","ppu","apu","timers","interrupts","flipShowStatus","stateKey","updateValueTable","requestAnimationFrame","cancelAnimationFrame","getStateClass","stepOpcode","wasmboyGraphics","skipDebugOutput","numberOfCycles","emulationStep","updateDebugInfo","Error","runNumberOfOpcodes","numberOfOpcodes","opcodesRan","runOpcode","skipInitialStep","initialStepPromise","logWasmBoyMemory","wasmBoy","getOpcodeAtProgramCounter","getStackPointer","getRegisterA","getRegisterF","getRegisterB","getRegisterC","getRegisterD","getRegisterE","getRegisterH","getRegisterL","channelNum","registerNum","registerAddress","toUpperCase","evt","wasmboyAudio","defaultOptions","optionKey","setStateKey","applyOptions","stateOptionKey","parseFloat","defaultGamePath","wasmBoyDefaultOptions","saveStateObject","toDataURL","showDebugger","showOptions","querySelector","dpadElement","startElement","selectElement","aElement","bElement","optionsComponent","debuggerComponent","global","factory","define","amd","preactPortal","asyncGenerator","AwaitValue","AsyncGenerator","gen","front","back","arg","next","resume","settle","_invoke","return","Symbol","asyncIterator","throw","wrap","await","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","Portal","_Component","renderLayer","isMounted","remote","findNode","node","show","into","intoPointer","PortalProxy","_Component2","_ref","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","process","hr","uptime","getTime","toArray","promisifyRequest","onsuccess","promisifyRequestCall","obj","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","prop","proxyRequestMethods","proxyMethods","proxyCursorRequestMethods","Index","_index","IDBIndex","_cursor","_request","IDBCursor","methodName","ObjectStore","_store","createIndex","IDBObjectStore","Transaction","idbTransaction","_tx","oncomplete","onabort","IDBTransaction","UpgradeDB","oldVersion","_db","IDBDatabase","DB","funcName","callback","nativeObject","getAll","query","count","items","exp","version","upgradeCallback","onupgradeneeded","default","root","vendors","suffix","caf","last","queue","frameDuration","_now","cp","cancelled","round","polyfill"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/wasmBoy/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"JkW7\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 33b9ea8d995ee0c764e2","if (typeof indexedDB != 'undefined') {\n  module.exports = require('./idb.js');\n}\nelse {\n  module.exports = {\n    open: function () {\n      return Promise.reject('IDB requires a browser environment');\n    },\n    delete: function () {\n      return Promise.reject('IDB requires a browser environment');\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/idb/lib/node.js","!function(){\"use strict\";function e(){}function t(t,n){var o,r,i,l,a=E;for(l=arguments.length;l-- >2;)W.push(arguments[l]);n&&null!=n.children&&(W.length||W.push(n.children),delete n.children);while(W.length)if((r=W.pop())&&void 0!==r.pop)for(l=r.length;l--;)W.push(r[l]);else\"boolean\"==typeof r&&(r=null),(i=\"function\"!=typeof t)&&(null==r?r=\"\":\"number\"==typeof r?r+=\"\":\"string\"!=typeof r&&(i=!1)),i&&o?a[a.length-1]+=r:a===E?a=[r]:a.push(r),o=i;var u=new e;return u.nodeName=t,u.children=a,u.attributes=null==n?void 0:n,u.key=null==n?void 0:n.key,void 0!==S.vnode&&S.vnode(u),u}function n(e,t){for(var n in t)e[n]=t[n];return e}function o(e,o){return t(e.nodeName,n(n({},e.attributes),o),arguments.length>2?[].slice.call(arguments,2):e.children)}function r(e){!e.__d&&(e.__d=!0)&&1==A.push(e)&&(S.debounceRendering||P)(i)}function i(){var e,t=A;A=[];while(e=t.pop())e.__d&&k(e)}function l(e,t,n){return\"string\"==typeof t||\"number\"==typeof t?void 0!==e.splitText:\"string\"==typeof t.nodeName?!e._componentConstructor&&a(e,t.nodeName):n||e._componentConstructor===t.nodeName}function a(e,t){return e.__n===t||e.nodeName.toLowerCase()===t.toLowerCase()}function u(e){var t=n({},e.attributes);t.children=e.children;var o=e.nodeName.defaultProps;if(void 0!==o)for(var r in o)void 0===t[r]&&(t[r]=o[r]);return t}function _(e,t){var n=t?document.createElementNS(\"http://www.w3.org/2000/svg\",e):document.createElement(e);return n.__n=e,n}function p(e){var t=e.parentNode;t&&t.removeChild(e)}function c(e,t,n,o,r){if(\"className\"===t&&(t=\"class\"),\"key\"===t);else if(\"ref\"===t)n&&n(null),o&&o(e);else if(\"class\"!==t||r)if(\"style\"===t){if(o&&\"string\"!=typeof o&&\"string\"!=typeof n||(e.style.cssText=o||\"\"),o&&\"object\"==typeof o){if(\"string\"!=typeof n)for(var i in n)i in o||(e.style[i]=\"\");for(var i in o)e.style[i]=\"number\"==typeof o[i]&&!1===V.test(i)?o[i]+\"px\":o[i]}}else if(\"dangerouslySetInnerHTML\"===t)o&&(e.innerHTML=o.__html||\"\");else if(\"o\"==t[0]&&\"n\"==t[1]){var l=t!==(t=t.replace(/Capture$/,\"\"));t=t.toLowerCase().substring(2),o?n||e.addEventListener(t,f,l):e.removeEventListener(t,f,l),(e.__l||(e.__l={}))[t]=o}else if(\"list\"!==t&&\"type\"!==t&&!r&&t in e)s(e,t,null==o?\"\":o),null!=o&&!1!==o||e.removeAttribute(t);else{var a=r&&t!==(t=t.replace(/^xlink\\:?/,\"\"));null==o||!1===o?a?e.removeAttributeNS(\"http://www.w3.org/1999/xlink\",t.toLowerCase()):e.removeAttribute(t):\"function\"!=typeof o&&(a?e.setAttributeNS(\"http://www.w3.org/1999/xlink\",t.toLowerCase(),o):e.setAttribute(t,o))}else e.className=o||\"\"}function s(e,t,n){try{e[t]=n}catch(e){}}function f(e){return this.__l[e.type](S.event&&S.event(e)||e)}function d(){var e;while(e=D.pop())S.afterMount&&S.afterMount(e),e.componentDidMount&&e.componentDidMount()}function h(e,t,n,o,r,i){H++||(R=null!=r&&void 0!==r.ownerSVGElement,j=null!=e&&!(\"__preactattr_\"in e));var l=m(e,t,n,o,i);return r&&l.parentNode!==r&&r.appendChild(l),--H||(j=!1,i||d()),l}function m(e,t,n,o,r){var i=e,l=R;if(null!=t&&\"boolean\"!=typeof t||(t=\"\"),\"string\"==typeof t||\"number\"==typeof t)return e&&void 0!==e.splitText&&e.parentNode&&(!e._component||r)?e.nodeValue!=t&&(e.nodeValue=t):(i=document.createTextNode(t),e&&(e.parentNode&&e.parentNode.replaceChild(i,e),b(e,!0))),i.__preactattr_=!0,i;var u=t.nodeName;if(\"function\"==typeof u)return U(e,t,n,o);if(R=\"svg\"===u||\"foreignObject\"!==u&&R,u+=\"\",(!e||!a(e,u))&&(i=_(u,R),e)){while(e.firstChild)i.appendChild(e.firstChild);e.parentNode&&e.parentNode.replaceChild(i,e),b(e,!0)}var p=i.firstChild,c=i.__preactattr_,s=t.children;if(null==c){c=i.__preactattr_={};for(var f=i.attributes,d=f.length;d--;)c[f[d].name]=f[d].value}return!j&&s&&1===s.length&&\"string\"==typeof s[0]&&null!=p&&void 0!==p.splitText&&null==p.nextSibling?p.nodeValue!=s[0]&&(p.nodeValue=s[0]):(s&&s.length||null!=p)&&v(i,s,n,o,j||null!=c.dangerouslySetInnerHTML),g(i,t.attributes,c),R=l,i}function v(e,t,n,o,r){var i,a,u,_,c,s=e.childNodes,f=[],d={},h=0,v=0,y=s.length,g=0,w=t?t.length:0;if(0!==y)for(var C=0;C<y;C++){var x=s[C],N=x.__preactattr_,k=w&&N?x._component?x._component.__k:N.key:null;null!=k?(h++,d[k]=x):(N||(void 0!==x.splitText?!r||x.nodeValue.trim():r))&&(f[g++]=x)}if(0!==w)for(var C=0;C<w;C++){_=t[C],c=null;var k=_.key;if(null!=k)h&&void 0!==d[k]&&(c=d[k],d[k]=void 0,h--);else if(!c&&v<g)for(i=v;i<g;i++)if(void 0!==f[i]&&l(a=f[i],_,r)){c=a,f[i]=void 0,i===g-1&&g--,i===v&&v++;break}c=m(c,_,n,o),u=s[C],c&&c!==e&&c!==u&&(null==u?e.appendChild(c):c===u.nextSibling?p(u):e.insertBefore(c,u))}if(h)for(var C in d)void 0!==d[C]&&b(d[C],!1);while(v<=g)void 0!==(c=f[g--])&&b(c,!1)}function b(e,t){var n=e._component;n?L(n):(null!=e.__preactattr_&&e.__preactattr_.ref&&e.__preactattr_.ref(null),!1!==t&&null!=e.__preactattr_||p(e),y(e))}function y(e){e=e.lastChild;while(e){var t=e.previousSibling;b(e,!0),e=t}}function g(e,t,n){var o;for(o in n)t&&null!=t[o]||null==n[o]||c(e,o,n[o],n[o]=void 0,R);for(o in t)\"children\"===o||\"innerHTML\"===o||o in n&&t[o]===(\"value\"===o||\"checked\"===o?e[o]:n[o])||c(e,o,n[o],n[o]=t[o],R)}function w(e){var t=e.constructor.name;(I[t]||(I[t]=[])).push(e)}function C(e,t,n){var o,r=I[e.name];if(e.prototype&&e.prototype.render?(o=new e(t,n),T.call(o,t,n)):(o=new T(t,n),o.constructor=e,o.render=x),r)for(var i=r.length;i--;)if(r[i].constructor===e){o.__b=r[i].__b,r.splice(i,1);break}return o}function x(e,t,n){return this.constructor(e,n)}function N(e,t,n,o,i){e.__x||(e.__x=!0,(e.__r=t.ref)&&delete t.ref,(e.__k=t.key)&&delete t.key,!e.base||i?e.componentWillMount&&e.componentWillMount():e.componentWillReceiveProps&&e.componentWillReceiveProps(t,o),o&&o!==e.context&&(e.__c||(e.__c=e.context),e.context=o),e.__p||(e.__p=e.props),e.props=t,e.__x=!1,0!==n&&(1!==n&&!1===S.syncComponentUpdates&&e.base?r(e):k(e,1,i)),e.__r&&e.__r(e))}function k(e,t,o,r){if(!e.__x){var i,l,a,_=e.props,p=e.state,c=e.context,s=e.__p||_,f=e.__s||p,m=e.__c||c,v=e.base,y=e.__b,g=v||y,w=e._component,x=!1;if(v&&(e.props=s,e.state=f,e.context=m,2!==t&&e.shouldComponentUpdate&&!1===e.shouldComponentUpdate(_,p,c)?x=!0:e.componentWillUpdate&&e.componentWillUpdate(_,p,c),e.props=_,e.state=p,e.context=c),e.__p=e.__s=e.__c=e.__b=null,e.__d=!1,!x){i=e.render(_,p,c),e.getChildContext&&(c=n(n({},c),e.getChildContext()));var U,T,M=i&&i.nodeName;if(\"function\"==typeof M){var W=u(i);l=w,l&&l.constructor===M&&W.key==l.__k?N(l,W,1,c,!1):(U=l,e._component=l=C(M,W,c),l.__b=l.__b||y,l.__u=e,N(l,W,0,c,!1),k(l,1,o,!0)),T=l.base}else a=g,U=w,U&&(a=e._component=null),(g||1===t)&&(a&&(a._component=null),T=h(a,i,c,o||!v,g&&g.parentNode,!0));if(g&&T!==g&&l!==w){var E=g.parentNode;E&&T!==E&&(E.replaceChild(T,g),U||(g._component=null,b(g,!1)))}if(U&&L(U),e.base=T,T&&!r){var P=e,V=e;while(V=V.__u)(P=V).base=T;T._component=P,T._componentConstructor=P.constructor}}if(!v||o?D.unshift(e):x||(e.componentDidUpdate&&e.componentDidUpdate(s,f,m),S.afterUpdate&&S.afterUpdate(e)),null!=e.__h)while(e.__h.length)e.__h.pop().call(e);H||r||d()}}function U(e,t,n,o){var r=e&&e._component,i=r,l=e,a=r&&e._componentConstructor===t.nodeName,_=a,p=u(t);while(r&&!_&&(r=r.__u))_=r.constructor===t.nodeName;return r&&_&&(!o||r._component)?(N(r,p,3,n,o),e=r.base):(i&&!a&&(L(i),e=l=null),r=C(t.nodeName,p,n),e&&!r.__b&&(r.__b=e,l=null),N(r,p,1,n,o),e=r.base,l&&e!==l&&(l._component=null,b(l,!1))),e}function L(e){S.beforeUnmount&&S.beforeUnmount(e);var t=e.base;e.__x=!0,e.componentWillUnmount&&e.componentWillUnmount(),e.base=null;var n=e._component;n?L(n):t&&(t.__preactattr_&&t.__preactattr_.ref&&t.__preactattr_.ref(null),e.__b=t,p(t),w(e),y(t)),e.__r&&e.__r(null)}function T(e,t){this.__d=!0,this.context=t,this.props=e,this.state=this.state||{}}function M(e,t,n){return h(n,e,{},!1,t,!1)}var S={},W=[],E=[],P=\"function\"==typeof Promise?Promise.resolve().then.bind(Promise.resolve()):setTimeout,V=/acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i,A=[],D=[],H=0,R=!1,j=!1,I={};n(T.prototype,{setState:function(e,t){var o=this.state;this.__s||(this.__s=n({},o)),n(o,\"function\"==typeof e?e(o,this.props):e),t&&(this.__h=this.__h||[]).push(t),r(this)},forceUpdate:function(e){e&&(this.__h=this.__h||[]).push(e),k(this,2)},render:function(){}});var $={h:t,createElement:t,cloneElement:o,Component:T,render:M,rerender:i,options:S};\"undefined\"!=typeof module?module.exports=$:self.preact=$}();\n//# sourceMappingURL=preact.min.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/preact/dist/preact.min.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./style.css\n// module id = FWi5\n// module chunks = 0","module.exports = audioBufferToWav\nfunction audioBufferToWav (buffer, opt) {\n  opt = opt || {}\n\n  var numChannels = buffer.numberOfChannels\n  var sampleRate = buffer.sampleRate\n  var format = opt.float32 ? 3 : 1\n  var bitDepth = format === 3 ? 32 : 16\n\n  var result\n  if (numChannels === 2) {\n    result = interleave(buffer.getChannelData(0), buffer.getChannelData(1))\n  } else {\n    result = buffer.getChannelData(0)\n  }\n\n  return encodeWAV(result, format, sampleRate, numChannels, bitDepth)\n}\n\nfunction encodeWAV (samples, format, sampleRate, numChannels, bitDepth) {\n  var bytesPerSample = bitDepth / 8\n  var blockAlign = numChannels * bytesPerSample\n\n  var buffer = new ArrayBuffer(44 + samples.length * bytesPerSample)\n  var view = new DataView(buffer)\n\n  /* RIFF identifier */\n  writeString(view, 0, 'RIFF')\n  /* RIFF chunk length */\n  view.setUint32(4, 36 + samples.length * bytesPerSample, true)\n  /* RIFF type */\n  writeString(view, 8, 'WAVE')\n  /* format chunk identifier */\n  writeString(view, 12, 'fmt ')\n  /* format chunk length */\n  view.setUint32(16, 16, true)\n  /* sample format (raw) */\n  view.setUint16(20, format, true)\n  /* channel count */\n  view.setUint16(22, numChannels, true)\n  /* sample rate */\n  view.setUint32(24, sampleRate, true)\n  /* byte rate (sample rate * block align) */\n  view.setUint32(28, sampleRate * blockAlign, true)\n  /* block align (channel count * bytes per sample) */\n  view.setUint16(32, blockAlign, true)\n  /* bits per sample */\n  view.setUint16(34, bitDepth, true)\n  /* data chunk identifier */\n  writeString(view, 36, 'data')\n  /* data chunk length */\n  view.setUint32(40, samples.length * bytesPerSample, true)\n  if (format === 1) { // Raw PCM\n    floatTo16BitPCM(view, 44, samples)\n  } else {\n    writeFloat32(view, 44, samples)\n  }\n\n  return buffer\n}\n\nfunction interleave (inputL, inputR) {\n  var length = inputL.length + inputR.length\n  var result = new Float32Array(length)\n\n  var index = 0\n  var inputIndex = 0\n\n  while (index < length) {\n    result[index++] = inputL[inputIndex]\n    result[index++] = inputR[inputIndex]\n    inputIndex++\n  }\n  return result\n}\n\nfunction writeFloat32 (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 4) {\n    output.setFloat32(offset, input[i], true)\n  }\n}\n\nfunction floatTo16BitPCM (output, offset, input) {\n  for (var i = 0; i < input.length; i++, offset += 2) {\n    var s = Math.max(-1, Math.min(1, input[i]))\n    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true)\n  }\n}\n\nfunction writeString (view, offset, string) {\n  for (var i = 0; i < string.length; i++) {\n    view.setUint8(offset + i, string.charCodeAt(i))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/audiobuffer-to-wav/index.js","var index = typeof fetch=='function' ? fetch.bind() : function(url, options) {\n\toptions = options || {};\n\treturn new Promise( function (resolve, reject) {\n\t\tvar request = new XMLHttpRequest();\n\n\t\trequest.open(options.method || 'get', url);\n\n\t\tfor (var i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\trequest.onload = function () {\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.send(options.body);\n\n\t\tfunction response() {\n\t\t\tvar keys = [],\n\t\t\t\tall = [],\n\t\t\t\theaders = {},\n\t\t\t\theader;\n\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):\\s*([\\s\\S]*?)$/gm, function (m, key, value) {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theader = headers[key];\n\t\t\t\theaders[key] = header ? (header + \",\" + value) : value;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tok: (request.status/200|0) == 1,\t\t// 200-299\n\t\t\t\tstatus: request.status,\n\t\t\t\tstatusText: request.statusText,\n\t\t\t\turl: request.responseURL,\n\t\t\t\tclone: response,\n\t\t\t\ttext: function () { return Promise.resolve(request.responseText); },\n\t\t\t\tjson: function () { return Promise.resolve(request.responseText).then(JSON.parse); },\n\t\t\t\tblob: function () { return Promise.resolve(new Blob([request.response])); },\n\t\t\t\theaders: {\n\t\t\t\t\tkeys: function () { return keys; },\n\t\t\t\t\tentries: function () { return all; },\n\t\t\t\t\tget: function (n) { return headers[n.toLowerCase()]; },\n\t\t\t\t\thas: function (n) { return n.toLowerCase() in headers; }\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n};\n\nexport default index;\n//# sourceMappingURL=unfetch.es.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/unfetch/dist/unfetch.es.js","// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  this._state = 0;\n  this._handled = false;\n  this._value = undefined;\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nvar _proto = Promise.prototype;\n_proto.catch = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\n_proto.then = function(onFulfilled, onRejected) {\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nexport default Promise;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/promise-polyfill/src/index.js","import Promise from 'promise-polyfill';\n\n// Performance tips with canvas:\n// https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas\n\n// Declare Our Constants\nconst GAMEBOY_CAMERA_WIDTH = 160;\nconst GAMEBOY_CAMERA_HEIGHT = 144;\n\n// Must be greater than 4, or else will have really weird performance\n// noticed you get about 4 frames for every 4096 samples\nconst WASMBOY_MAX_FRAMES_IN_QUEUE = 6;\n\n// Cached Current Frame output location, since call to wasm is expensive\nlet WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = 0;\n\nclass WasmBoyGraphicsService {\n  constructor() {\n    this.wasmInstance = undefined;\n    this.wasmByteMemory = undefined;\n\n    this.frameQueue = undefined;\n    this.frameQueueRenderPromise = undefined;\n\n    this.canvasElement = undefined;\n    this.canvasContext = undefined;\n    this.canvasImageData = undefined;\n  }\n\n  initialize(canvasElement, wasmInstance, wasmByteMemory) {\n    this.wasmInstance = wasmInstance;\n    this.wasmByteMemory = wasmByteMemory;\n\n    // Initialiuze our cached wasm constants\n    WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = this.wasmInstance.exports.frameInProgressVideoOutputLocation;\n\n    // Reset our frame queue and render promises\n    this.frameQueue = [];\n\n    return new Promise((resolve, reject) => {\n      try {\n        // Prepare our canvas\n        this.canvasElement = canvasElement;\n        this.canvasContext = this.canvasElement.getContext('2d');\n        this.canvasElement.width = GAMEBOY_CAMERA_WIDTH;\n        this.canvasElement.height = GAMEBOY_CAMERA_HEIGHT;\n        this.canvasImageData = this.canvasContext.createImageData(GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n\n        // Add some css for smooth 8-bit canvas scaling\n        // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n        // https://caniuse.com/#feat=css-crisp-edges\n        this.canvasElement.style = `\n          image-rendering: optimizeSpeed;\n          image-rendering: -moz-crisp-edges;\n          image-rendering: -webkit-optimize-contrast;\n          image-rendering: -o-crisp-edges;\n          image-rendering: pixelated;\n          -ms-interpolation-mode: nearest-neighbor;\n        `;\n\n        // Fill the canvas with a blank screen\n        // using client width since we are not requiring a width and height oin the canvas\n        // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n        // TODO: Mention respopnsive canvas scaling in the docs\n        this.canvasContext.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n\n        resolve();\n      } catch(error) {\n        reject(error);\n      }\n    });\n  }\n\n  // Function to render a frame\n  // Will add the frame to the frame queue to be rendered\n  // Returns the promise from this.drawFrameQueue\n  // Which resolves once all frames are rendered\n  renderFrame() {\n    return new Promise((resolve) => {\n      // Draw the pixels\n      // 160x144\n      // Split off our image Data\n      const imageDataArray = new Uint8ClampedArray(GAMEBOY_CAMERA_HEIGHT * GAMEBOY_CAMERA_WIDTH * 4);\n      const rgbColor = new Uint8ClampedArray(3);\n\n      for(let y = 0; y < GAMEBOY_CAMERA_HEIGHT; y++) {\n        for (let x = 0; x < GAMEBOY_CAMERA_WIDTH; x++) {\n\n          // Each color has an R G B component\n          let pixelStart = ((y * 160) + x) * 3;\n\n          for (let color = 0; color < 3; color++) {\n            rgbColor[color] = this.wasmByteMemory[\n              WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION + pixelStart + color\n            ];\n          }\n\n          // Doing graphics using second answer on:\n          // https://stackoverflow.com/questions/4899799/whats-the-best-way-to-set-a-single-pixel-in-an-html5-canvas\n          // Image Data mapping\n          const imageDataIndex = (x + (y * GAMEBOY_CAMERA_WIDTH)) * 4;\n\n          imageDataArray[imageDataIndex] = rgbColor[0];\n          imageDataArray[imageDataIndex + 1] = rgbColor[1];\n          imageDataArray[imageDataIndex + 2] = rgbColor[2];\n          // Alpha, no transparency\n          imageDataArray[imageDataIndex + 3] = 255;\n        }\n      }\n\n      // Add our new imageData\n      for(let i = 0; i < imageDataArray.length; i++) {\n        this.canvasImageData.data[i] = imageDataArray[i];\n      }\n\n      // TODO: Allow changing gameboy background color\n      // https://designpieces.com/palette/game-boy-original-color-palette-hex-and-rgb/\n      //this.canvasContext.fillStyle = \"#9bbc0f\";\n      //this.canvasContext.fillRect(0, 0, this.canvasElement.clientWidth, this.canvasElement.clientHeight);\n\n      this.canvasContext.clearRect(0, 0, GAMEBOY_CAMERA_WIDTH, GAMEBOY_CAMERA_HEIGHT);\n      this.canvasContext.putImageData(this.canvasImageData, 0, 0);\n\n      resolve();\n    });\n  }\n}\n\nexport const WasmBoyGraphics = new WasmBoyGraphicsService();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/graphics/graphics.js","// Tons of help from:\n// https://binji.github.io/2017/02/27/binjgb-on-the-web-part-2.html\n// https://github.com/binji/binjgb/blob/master/demo/demo.js\n// Web Audio API is tricky!\n\nimport Promise from 'promise-polyfill';\n\n// Define our performance constants\n// Both of these make it sound off\n// Latency controls how much delay audio has, larger = more delay, goal is to be as small as possible\n// Time remaining controls how far ahead we can be., larger = more frames rendered before playing a new set of samples. goal is to be as small as possible. May want to adjust this number according to performance of device\n// These magic numbers just come from preference, can be set as options\nconst DEFAULT_AUDIO_LATENCY_IN_MILLI = 100;\nconst WASMBOY_MIN_TIME_REMAINING_IN_MILLI = 75\nconst WASMBOY_SAMPLE_RATE = 48000;\n\n// Some canstants that use the ones above that will allow for faster performance\nconst DEFAULT_AUDIO_LATENCY_IN_SECONDS = DEFAULT_AUDIO_LATENCY_IN_MILLI / 1000;\nconst WASMBOY_MIN_TIME_REMAINING_IN_SECONDS = WASMBOY_MIN_TIME_REMAINING_IN_MILLI / 1000;\n\n// Our sound output Location, we will initialize this in init\nlet WASMBOY_SOUND_OUTPUT_LOCATION = 0;\n\nconst getUnsignedAudioSampleAsFloat = (audioSample) => {\n  // Subtract 1 as it is added so the value is not empty\n  audioSample -= 1;\n  // Divide by 127 to get back to our float scale\n  audioSample = audioSample / 127\n  // Subtract 1 to regain our sign\n  audioSample -= 1;\n\n  // Because of the innacuracy of converting an unsigned int to a signed float\n  // We will have some leftovers when doing the conversion.\n  // When testing with Pokemon blue, when it is supposed to be complete silence in the intro,\n  // It shows 0.007874015748031482, meaning we want to cut our values lower than this\n  if (Math.abs(audioSample) < 0.008) {\n    audioSample = 0;\n  }\n\n  // Return, but divide by lower volume, PCM is loouuuuddd\n  return audioSample / 2.5;\n}\n\nclass WasmBoyAudioService {\n    constructor() {\n      // Wasmboy instance and memory\n      this.wasmInstance = undefined;\n      this.wasmByteMemory = undefined;\n\n      this.audioContext = undefined;\n      this.audioBuffer = undefined;\n      // The play time for our audio samples\n      this.audioPlaytime = undefined;\n      this.audioSources = [];\n\n      // Average fps for time stretching\n      this.averageTimeStretchFps = [];\n    }\n\n    initialize(wasmInstance, wasmByteMemory) {\n      this.wasmInstance = wasmInstance;\n      this.wasmByteMemory = wasmByteMemory;\n\n      // Initialiuze our cached wasm constants\n      WASMBOY_SOUND_OUTPUT_LOCATION = this.wasmInstance.exports.soundOutputLocation;\n\n      this.audioSources = [];\n      this.averageTimeStretchFps = [];\n\n      // Get our Audio context\n      if(!this.audioContext) {\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      }\n      return Promise.resolve();\n    }\n\n    // Function to queue up and audio buyffer to be played\n    // Returns a promise so that we may \"sync by audio\"\n    // https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/dau8e2w/\n    playAudio(currentFps, allowFastSpeedStretching) {\n      return new Promise((resolve) => {\n\n        // Find our averageFps\n        let fps = (currentFps) || 60;\n        // TODO Make this a constant\n        let fpsCap = 59;\n\n        // Find our average fps for time stretching\n        this.averageTimeStretchFps.push(currentFps);\n        // TODO Make the multiplier Const the timeshift speed\n        if (this.averageTimeStretchFps.length > Math.floor(fpsCap * 3)) {\n          this.averageTimeStretchFps.shift();\n        }\n\n        // Make sure we have a minimum number of time stretch fps timestamps to judge the average time\n        if(this.averageTimeStretchFps.length >= fpsCap) {\n          fps = this.averageTimeStretchFps.reduce((accumulator, currentValue) => {\n            return accumulator + currentValue;\n          });\n          fps = Math.floor(fps / this.averageTimeStretchFps.length);\n        }\n\n        // Find if we should time stretch this sample or not from our current fps\n        let playbackRate = 1.0;\n        if (fps < fpsCap || allowFastSpeedStretching) {\n          // Has to be 60 to get accurent playback regarless of fps cap\n          playbackRate = (playbackRate * ((fps) / 60));\n          if(playbackRate <= 0) {\n            playbackRate = 0.01;\n          }\n        }\n\n        // Check if we need more samples yet\n        let timeUntilNextSample;\n        if (this.audioPlaytime) {\n          timeUntilNextSample = this.audioPlaytime - this.audioContext.currentTime;\n          if (timeUntilNextSample > WASMBOY_MIN_TIME_REMAINING_IN_SECONDS) {\n            resolve();\n            return;\n          }\n        }\n\n        // Check if we made it in time\n        // Idea from: https://github.com/binji/binjgb/blob/master/demo/demo.js\n        let audioContextCurrentTime = this.audioContext.currentTime;\n        let audioContextCurrentTimeWithLatency = audioContextCurrentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n        this.audioPlaytime = (this.audioPlaytime || audioContextCurrentTimeWithLatency);\n\n        if (this.audioPlaytime < audioContextCurrentTime) {\n          // We took too long, or something happen and hiccup'd the emulator, reset audio playback times\n          //console.log(`[Wasmboy] Reseting Audio Playback time: ${this.audioPlaytime.toFixed(2)} < ${audioContextCurrentTimeWithLatency.toFixed(2)}, Audio Queue Index: ${this.wasmInstance.exports.getAudioQueueIndex()}`);\n          this.cancelAllAudio();\n          this.audioPlaytime = audioContextCurrentTimeWithLatency;\n          resolve();\n          return;\n        }\n\n        // Cache the audio queue indec here, jumping to wasm is expensive\n        let wasmAudioQueueIndex = this.wasmInstance.exports.getAudioQueueIndex();\n\n        // Lastly, check if we even have any samples we can play\n        if (wasmAudioQueueIndex < 4) {\n          resolve();\n          return true;\n        }\n\n        // We made it! Go ahead and grab and play the pcm samples\n        let wasmBoyNumberOfSamples = wasmAudioQueueIndex;\n\n        this.audioBuffer = this.audioContext.createBuffer(2, wasmBoyNumberOfSamples, WASMBOY_SAMPLE_RATE);\n        const leftChannelBuffer = this.audioBuffer.getChannelData(0);\n        const rightChannelBuffer = this.audioBuffer.getChannelData(1);\n\n        // Our index on our left/right buffers\n        let bufferIndex = 0;\n\n        // Our total number of stereo samples\n        let wasmBoyNumberOfSamplesForStereo = (wasmBoyNumberOfSamples * 2);\n\n        // Left Channel\n        for (let i = 0; i < wasmBoyNumberOfSamplesForStereo; i = i + 2) {\n          leftChannelBuffer[bufferIndex] = getUnsignedAudioSampleAsFloat(this.wasmByteMemory[i + WASMBOY_SOUND_OUTPUT_LOCATION]);\n          bufferIndex++;\n        }\n\n        // Reset the buffer index\n        bufferIndex = 0;\n\n        // Right Channel\n        for (let i = 1; i < wasmBoyNumberOfSamplesForStereo; i = i + 2) {\n          rightChannelBuffer[bufferIndex] = getUnsignedAudioSampleAsFloat(this.wasmByteMemory[i + WASMBOY_SOUND_OUTPUT_LOCATION]);\n          bufferIndex++;\n        }\n\n        // Reset the Audio Queue\n        this.wasmInstance.exports.resetAudioQueue();\n\n        // Get an AudioBufferSourceNode.\n        // This is the AudioNode to use when we want to play an AudioBuffer\n        let source = this.audioContext.createBufferSource();\n\n        // set the buffer in the AudioBufferSourceNode\n        source.buffer = this.audioBuffer;\n\n        // Set our playback rate for time resetretching\n        source.playbackRate.setValueAtTime(playbackRate, this.audioContext.currentTime);\n\n        // connect the AudioBufferSourceNode to the\n        // destination so we can hear the sound\n        source.connect(this.audioContext.destination);\n\n        // start the source playing\n        source.start(this.audioPlaytime);\n\n        // Set our new audio playtime goal\n        const sourcePlaybackLength = (wasmBoyNumberOfSamples / (WASMBOY_SAMPLE_RATE * playbackRate));\n        this.audioPlaytime = this.audioPlaytime + sourcePlaybackLength;\n\n        // Cancel all audio sources on the tail that play before us\n        while(this.audioSources[this.audioSources.length - 1] && this.audioSources[this.audioSources.length - 1].playtime <= this.audioPlaytime) {\n          this.audioSources[this.audioSources.length - 1].source.stop();\n          this.audioSources.pop();\n        }\n\n        // Add the source so we can stop this if needed\n        this.audioSources.push({\n          source: source,\n          playTime: this.audioPlaytime,\n          fps: fps\n        });\n\n        // Shift ourselves out when finished\n        const timeUntilSourceEnds = (this.audioPlaytime - this.audioContext.currentTime) + 500;\n        setTimeout(() => {\n          this.audioSources.shift();\n        }, timeUntilSourceEnds);\n\n        resolve();\n      });\n    }\n\n    cancelAllAudio() {\n      // Cancel all audio That was queued to play\n      for (let i = 0; i < this.audioSources.length; i++) {\n        if (this.audioSources[i].playTime > this.audioPlaytime) {\n          this.audioSources[i].source.stop();\n        }\n      }\n\n      // Reset our audioPlaytime\n      this.audioPlaytime = this.audioContext.currentTime + DEFAULT_AUDIO_LATENCY_IN_SECONDS;\n    }\n\n    debugSaveCurrentAudioBufferToWav() {\n\n      if(!this.audioBuffer) {\n        return;\n      }\n\n      // https://www.npmjs.com/package/audiobuffer-to-wav\n      const toWav = require('audiobuffer-to-wav');\n      // https://github.com/Jam3/audiobuffer-to-wav/blob/master/demo/index.js\n\n      const wav = toWav(this.audioBuffer);\n      const blob = new window.Blob([ new DataView(wav) ], {\n        type: 'audio/wav'\n      });\n\n      const url = window.URL.createObjectURL(blob)\n      const anchor = document.createElement('a')\n      document.body.appendChild(anchor)\n      anchor.style = 'display: none'\n      anchor.href = url\n      anchor.download = 'audio.wav'\n      anchor.click()\n      window.URL.revokeObjectURL(url)\n    }\n}\n\nexport const WasmBoyAudio = new WasmBoyAudioService();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/audio/audio.js","// Define a keyboard key schema\nvar keyInputSchema = {\n  ACTIVE: false,\n  KEY_CODE: undefined\n\n  // Define a gamepad button schema\n  // https://w3c.github.io/gamepad/#remapping\n};var gamepadInputSchema = {\n  ACTIVE: false,\n  BUTTON_ID: undefined,\n  JOYSTICK: {\n    AXIS_ID: undefined,\n    IS_POSITIVE: undefined\n  }\n};\n\nvar touchInputSchema = {\n  ACTIVE: false,\n  ELEMENT: undefined,\n  TYPE: undefined,\n  DIRECTION: undefined,\n  EVENT_HANDLER: undefined,\n  BOUNDING_RECT: undefined\n\n  // Define our finaly kerboard schema here\n};var keyMapSchema = {\n  UP: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  RIGHT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  DOWN: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  LEFT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  A: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  B: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  SELECT: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  },\n  START: {\n    KEYBOARD: [],\n    GAMEPAD: [],\n    TOUCHPAD: []\n  }\n};\n\nfunction getKeyInput(keyCode) {\n  var input = Object.assign({}, keyInputSchema);\n  input.KEY_CODE = keyCode;\n  return input;\n}\n\nfunction getGamepadInput(gamepadButtonId, axisId, axisIsPositive) {\n  var input = Object.assign({}, gamepadInputSchema);\n  input.JOYSTICK = Object.assign({}, gamepadInputSchema.JOYSTICK);\n  if (gamepadButtonId || gamepadButtonId === 0) {\n    input.BUTTON_ID = gamepadButtonId;\n  } else if (axisId !== undefined && axisIsPositive !== undefined) {\n    input.JOYSTICK.AXIS_ID = axisId;\n    input.JOYSTICK.IS_POSITIVE = axisIsPositive;\n  }\n  return input;\n}\n\nfunction getTouchInput(element, type, direction, eventHandler) {\n  var input = Object.assign({}, touchInputSchema);\n\n  // TODO: Check the type for a valid type\n\n  // Add our passed parameters\n  input.ELEMENT = element;\n  input.TYPE = type;\n  input.DIRECTION = direction;\n  input.EVENT_HANDLER = eventHandler;\n\n  // Add our bounding rect\n  var boundingRect = input.ELEMENT.getBoundingClientRect();\n  input.BOUNDING_RECT = boundingRect;\n\n  // Define our eventListener functions\n  var eventListenerCallback = function eventListenerCallback(event) {\n    if (input.EVENT_HANDLER) {\n      input.EVENT_HANDLER(event);\n    }\n  };\n\n  // Add event listeners to the element\n  input.ELEMENT.addEventListener(\"touchstart\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"touchmove\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"touchend\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"mousedown\", eventListenerCallback);\n  input.ELEMENT.addEventListener(\"mouseup\", eventListenerCallback);\n\n  return input;\n}\n\nfunction KeyMapSchema() {\n  return Object.assign({}, keyMapSchema);\n}\n\nvar Key = {\n\n  BACKSPACE: 8,\n  TAB: 9,\n  RETURN: 13,\n  SHIFT: 16,\n  CTRL: 17,\n  ALT: 18,\n  ESCAPE: 27,\n  SPACE: 32,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40,\n\n  W: 87,\n  A: 65,\n  S: 83,\n  D: 68,\n  Q: 81,\n  E: 69,\n  X: 88,\n  Z: 90,\n\n  SEMI_COLON: 186,\n  SINGLE_QUOTE: 222,\n  BACK_SLASH: 220,\n\n  NUMPAD_0: 96,\n  NUMPAD_1: 97,\n  NUMPAD_2: 98,\n  NUMPAD_3: 99,\n  NUMPAD_4: 100,\n  NUMPAD_5: 101,\n  NUMPAD_6: 102,\n  NUMPAD_7: 103,\n  NUMPAD_8: 104,\n  NUMPAD_9: 105\n};\n\nvar keymap = KeyMapSchema();\n\n// Up\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.ARROW_UP));\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.W));\nkeymap.UP.KEYBOARD.push(getKeyInput(Key.NUMPAD_8));\nkeymap.UP.GAMEPAD.push(getGamepadInput(12));\nkeymap.UP.GAMEPAD.push(getGamepadInput(false, 1, false));\nkeymap.UP.GAMEPAD.push(getGamepadInput(false, 3, false));\n\n// Right\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.ARROW_RIGHT));\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.D));\nkeymap.RIGHT.KEYBOARD.push(getKeyInput(Key.NUMPAD_6));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(15));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(false, 0, true));\nkeymap.RIGHT.GAMEPAD.push(getGamepadInput(false, 2, true));\n\n// Down\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.ARROW_DOWN));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.S));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.NUMPAD_5));\nkeymap.DOWN.KEYBOARD.push(getKeyInput(Key.NUMPAD_2));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(13));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(false, 1, true));\nkeymap.DOWN.GAMEPAD.push(getGamepadInput(false, 3, true));\n\n// Left\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.ARROW_LEFT));\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.A));\nkeymap.LEFT.KEYBOARD.push(getKeyInput(Key.NUMPAD_4));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(14));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(false, 0, false));\nkeymap.LEFT.GAMEPAD.push(getGamepadInput(false, 2, false));\n\n// A\nkeymap.A.KEYBOARD.push(getKeyInput(Key.X));\nkeymap.A.KEYBOARD.push(getKeyInput(Key.SEMI_COLON));\nkeymap.A.KEYBOARD.push(getKeyInput(Key.NUMPAD_7));\nkeymap.A.GAMEPAD.push(getGamepadInput(0));\nkeymap.A.GAMEPAD.push(getGamepadInput(1));\n\n// B\nkeymap.B.KEYBOARD.push(getKeyInput(Key.Z));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.ESCAPE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.SINGLE_QUOTE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.BACKSPACE));\nkeymap.B.KEYBOARD.push(getKeyInput(Key.NUMPAD_9));\nkeymap.B.GAMEPAD.push(getGamepadInput(2));\nkeymap.B.GAMEPAD.push(getGamepadInput(3));\n\n// Start\nkeymap.START.KEYBOARD.push(getKeyInput(Key.RETURN));\nkeymap.START.KEYBOARD.push(getKeyInput(Key.SPACE));\nkeymap.START.KEYBOARD.push(getKeyInput(Key.NUMPAD_3));\nkeymap.START.GAMEPAD.push(getGamepadInput(9));\n\n// Select\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.SHIFT));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.TAB));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.BACK_SLASH));\nkeymap.SELECT.KEYBOARD.push(getKeyInput(Key.NUMPAD_1));\nkeymap.SELECT.GAMEPAD.push(getGamepadInput(8));\n\nvar KEYMAP = keymap;\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n// HTML Tags that can be focused on, where the library should be disabled\n// https://www.w3schools.com/tags/ref_byfunc.asp\nvar INPUT_HTML_TAGS = ['input', 'textarea', 'button', 'select', 'option', 'optgroup', 'label', 'datalist'];\n\n// Helpers for accessing gamepad\n// Similar to: https://github.com/torch2424/picoDeploy/blob/master/src/assets/3pLibs/pico8gamepad/pico8gamepad.js\nfunction getAnalogStickAxis(gamepad, axisId) {\n  return gamepad.axes[axisId] || 0.0;\n}\n\nfunction isButtonPressed(gamepad, buttonId) {\n  return gamepad.buttons[buttonId] ? gamepad.buttons[buttonId].pressed : false;\n}\n\nvar ResponsiveGamepadService = function () {\n  function ResponsiveGamepadService() {\n    classCallCheck(this, ResponsiveGamepadService);\n\n    // Our settings\n    this.gamepadAnalogStickDeadZone = 0.25;\n    this.keyMapKeys = Object.keys(KeyMapSchema());\n    this.keyMap = KEYMAP;\n  }\n\n  createClass(ResponsiveGamepadService, [{\n    key: 'initialize',\n    value: function initialize(keyMap) {\n      var _this = this;\n\n      // Add our key event listeners\n      window.addEventListener('keyup', function (event) {\n        _this.updateKeyboard(event);\n      });\n      window.addEventListener('keydown', function (event) {\n        _this.updateKeyboard(event);\n      });\n\n      // Add a resize listen to update the gamepad rect on resize\n      window.addEventListener(\"resize\", function () {\n        _this.updateTouchpadRect();\n      });\n\n      if (keyMap) {\n        this.keyMap = keyMap;\n      }\n    }\n  }, {\n    key: 'addTouchInput',\n    value: function addTouchInput(keyMapKey, element, type, direction) {\n      var _this2 = this;\n\n      // Declare our touch input\n      // TODO: May have to add the event handler after getting the input\n      var touchInput = void 0;\n      touchInput = getTouchInput(element, type, direction, function (event) {\n        _this2.updateTouchpad(keyMapKey, touchInput, event);\n      });\n\n      // Add the input to our keymap\n      this.keyMap[keyMapKey].TOUCHPAD.push(touchInput);\n    }\n  }, {\n    key: 'getState',\n    value: function getState() {\n      var _this3 = this;\n\n      // Keyboard handled by listeners on window\n\n      // Update the gamepad state\n      this.updateGamepad();\n\n      // Touch Handled by listeners on touchInputs\n\n      // Create an abstracted controller state\n      var controllerState = {};\n\n      // Loop through our Keys, and quickly build our controller state\n      this.keyMapKeys.forEach(function (key) {\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var keyboardState = _this3.keyMap[key].KEYBOARD.some(function (keyInput) {\n          return keyInput.ACTIVE;\n        });\n\n        if (keyboardState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var gamepadState = _this3.keyMap[key].GAMEPAD.some(function (gamepadInput) {\n          return gamepadInput.ACTIVE;\n        });\n\n        if (gamepadState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        // Find if any of the keyboard, gamepad or touchpad buttons are pressed\n        var touchState = _this3.keyMap[key].TOUCHPAD.some(function (touchInput) {\n          return touchInput.ACTIVE;\n        });\n\n        if (touchState) {\n          controllerState[key] = true;\n          return;\n        }\n\n        controllerState[key] = false;\n      });\n\n      // Return the controller state in case we need something from it\n      return controllerState;\n    }\n\n    // Function to handle keyboard update events\n\n  }, {\n    key: 'updateKeyboard',\n    value: function updateKeyboard(keyEvent) {\n      var _this4 = this;\n\n      // Ignore the event if focus on a input-table field\n      // https://www.w3schools.com/tags/ref_byfunc.asp\n      if (keyEvent && keyEvent.target && keyEvent.target.tagName) {\n        var isTargetInputField = INPUT_HTML_TAGS.some(function (htmlTag) {\n          if (keyEvent && keyEvent.target.tagName.toLowerCase() === htmlTag.toLowerCase()) {\n            return true;\n          }\n          return false;\n        });\n\n        if (isTargetInputField) {\n          return;\n        }\n      }\n\n      // Get the new state of the key\n      var isPressed = false;\n      if (keyEvent.type === 'keydown') {\n        isPressed = true;\n      }\n\n      // Loop through our keys\n      this.keyMapKeys.forEach(function (key) {\n        _this4.keyMap[key].KEYBOARD.forEach(function (keyInput, index) {\n          if (keyInput.KEY_CODE === keyEvent.keyCode) {\n            _this4.keyMap[key].KEYBOARD[index].ACTIVE = isPressed;\n          }\n        });\n      });\n\n      // If we found a key, prevent default so page wont scroll and things\n      keyEvent.preventDefault();\n    }\n\n    // Function to check the gamepad API for the gamepad state\n\n  }, {\n    key: 'updateGamepad',\n    value: function updateGamepad() {\n      var _this5 = this;\n\n      // Similar to: https://github.com/torch2424/picoDeploy/blob/master/src/assets/3pLibs/pico8gamepad/pico8gamepad.js\n      // Gampad Diagram: https://www.html5rocks.com/en/tutorials/doodles/gamepad/#toc-gamepadinfo\n      var gamepads = navigator.getGamepads ? navigator.getGamepads() : [];\n\n      var _loop = function _loop(i) {\n\n        // Get our current gamepad\n        var gamepad = gamepads[i];\n\n        if (!gamepad) {\n          return 'continue';\n        }\n\n        // Loop through our keys\n        _this5.keyMapKeys.forEach(function (key) {\n          _this5.keyMap[key].GAMEPAD.forEach(function (gamepadInput, index) {\n\n            // Check if we are a gamepad button\n            if (_this5.keyMap[key].GAMEPAD[index].BUTTON_ID || _this5.keyMap[key].GAMEPAD[index].BUTTON_ID === 0) {\n              _this5.keyMap[key].GAMEPAD[index].ACTIVE = isButtonPressed(gamepad, _this5.keyMap[key].GAMEPAD[index].BUTTON_ID);\n            }\n\n            // Check if we are an axis\n            if (_this5.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID !== undefined && _this5.keyMap[key].GAMEPAD[index].JOYSTICK.IS_POSITIVE !== undefined) {\n              if (_this5.keyMap[key].GAMEPAD[index].JOYSTICK.IS_POSITIVE) {\n                _this5.keyMap[key].GAMEPAD[index].ACTIVE = getAnalogStickAxis(gamepad, _this5.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID) > +_this5.gamepadAnalogStickDeadZone;\n              } else {\n                _this5.keyMap[key].GAMEPAD[index].ACTIVE = getAnalogStickAxis(gamepad, _this5.keyMap[key].GAMEPAD[index].JOYSTICK.AXIS_ID) < -_this5.gamepadAnalogStickDeadZone;\n              }\n            }\n          });\n        });\n      };\n\n      for (var i = 0; i < gamepads.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === 'continue') continue;\n      }\n    }\n\n    // Function to update button position and size\n\n  }, {\n    key: 'updateTouchpadRect',\n    value: function updateTouchpadRect() {\n      var _this6 = this;\n\n      // Read from the DOM, and get each of our elements position, doing this here, as it is best to read from the dom in sequence\n      // use element.getBoundingRect() top, bottom, left, right to get clientX and clientY in touch events :)\n      // https://stackoverflow.com/questions/442404/retrieve-the-position-x-y-of-an-html-element\n      //console.log(\"GamepadComponent: Updating Rect()...\");\n      this.keyMapKeys.forEach(function (key) {\n        _this6.keyMap[key].TOUCHPAD.forEach(function (touchInput, index) {\n          var boundingRect = _this6.keyMap[key].TOUCHPAD[index].ELEMENT.getBoundingClientRect();\n          _this6.keyMap[key].TOUCHPAD[index].BOUNDING_RECT = boundingRect;\n        });\n      });\n    }\n\n    // Reset all Diretion keys for a DPAD for touch Inputs\n\n  }, {\n    key: 'resetTouchDpad',\n    value: function resetTouchDpad() {\n      var _this7 = this;\n\n      var dpadKeys = ['UP', 'RIGHT', 'DOWN', 'LEFT'];\n\n      dpadKeys.forEach(function (dpadKey) {\n        _this7.keyMap[dpadKey].TOUCHPAD.forEach(function (touchInput) {\n          touchInput.ACTIVE = false;\n        });\n      });\n    }\n\n    // Function called on an event of a touchInput SVG Element\n\n  }, {\n    key: 'updateTouchpad',\n    value: function updateTouchpad(keyMapKey, touchInput, event) {\n\n      if (!event || event.type.includes('touch') && !event.touches) return;\n\n      //event.stopPropagation();\n      event.preventDefault();\n\n      //this.debugCurrentTouch(event);\n\n      // Check for active event types\n      if (event.type === \"touchstart\" || event.type === \"touchmove\" || event.type === \"mousedown\") {\n        // Active\n\n        if (touchInput.TYPE === 'DPAD') {\n\n          // Calculate for the correct key\n          // Only using the first touch, since we shouldn't be having two fingers on the dpad\n          var touch = void 0;\n          if (event.type.includes('touch')) {\n            touch = event.touches[0];\n          } else if (event.type.includes('mouse')) {\n            touch = event;\n          }\n\n          // Find if the horizontal or vertical influence is greater\n          // Find our centers of our rectangles, and our unbiased X Y values on the rect\n          var rectCenterX = (touchInput.BOUNDING_RECT.right - touchInput.BOUNDING_RECT.left) / 2;\n          var rectCenterY = (touchInput.BOUNDING_RECT.bottom - touchInput.BOUNDING_RECT.top) / 2;\n          var touchX = touch.clientX - touchInput.BOUNDING_RECT.left;\n          var touchY = touch.clientY - touchInput.BOUNDING_RECT.top;\n\n          // Lesson From: picoDeploy\n          // Fix for shoot button causing the character to move right on multi touch error\n          // + 50 for some buffer\n          if (touchX > rectCenterX + touchInput.BOUNDING_RECT.width / 2 + 50) {\n            // Ignore the event\n            return;\n          }\n\n          // Create an additonal influece for horizontal, to make it feel better\n          var horizontalInfluence = touchInput.BOUNDING_RECT.width / 8;\n\n          // Determine if we are horizontal or vertical\n          var isHorizontal = Math.abs(rectCenterX - touchX) + horizontalInfluence > Math.abs(rectCenterY - touchY);\n\n          // Find if left or right from width, vice versa for height\n          if (isHorizontal) {\n            // Add a horizontal dead zone\n            var deadzoneSize = touchInput.BOUNDING_RECT.width / 20;\n            if (Math.abs(touchInput.BOUNDING_RECT.width / 2 - touchX) > deadzoneSize) {\n\n              var isLeft = touchX < touchInput.BOUNDING_RECT.width / 2;\n\n              if (isLeft && touchInput.DIRECTION === 'LEFT') {\n                touchInput.ACTIVE = true;\n              } else if (!isLeft && touchInput.DIRECTION === 'RIGHT') {\n                touchInput.ACTIVE = true;\n              } else {\n                touchInput.ACTIVE = false;\n              }\n            }\n          } else {\n            var isUp = touchY < touchInput.BOUNDING_RECT.height / 2;\n            if (isUp && touchInput.DIRECTION === 'UP') {\n              touchInput.ACTIVE = true;\n            } else if (!isUp && touchInput.DIRECTION === 'DOWN') {\n              touchInput.ACTIVE = true;\n            } else {\n              touchInput.ACTIVE = false;\n            }\n          }\n        }\n\n        // Button Type\n        if (touchInput.TYPE === 'BUTTON') {\n          touchInput.ACTIVE = true;\n        }\n      } else {\n        // Not active\n\n        // Handle Dpad Type\n        if (touchInput.TYPE === 'DPAD') {\n          this.resetTouchDpad();\n        }\n\n        // Button Type\n        if (touchInput.TYPE === 'BUTTON') {\n          touchInput.ACTIVE = false;\n        }\n      }\n    }\n  }]);\n  return ResponsiveGamepadService;\n}();\n\n// Exports\n\n\nvar ResponsiveGamepad = new ResponsiveGamepadService();\n\nexport { ResponsiveGamepad, KEYMAP as DEFAULT_KEYMAP, KEYMAP as GAMEBOY_KEYMAP };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/responsive-gamepad/dist/responsive-gamepad.esm.js","import Promise from 'promise-polyfill';\n// https://github.com/torch2424/responsive-gamepad\nimport { ResponsiveGamepad } from 'responsive-gamepad'\n\nclass WasmBoyControllerService {\n  constructor() {\n    // Our wasm instance\n    this.wasmInstance = undefined;\n  }\n\n  initialize(wasmInstance) {\n    this.wasmInstance = wasmInstance;\n\n    ResponsiveGamepad.initialize();\n\n    return Promise.resolve();\n  }\n\n  addTouchInput(keyMapKey, element, type, direction) {\n    ResponsiveGamepad.addTouchInput(keyMapKey, element, type, direction);\n  }\n\n  updateController() {\n\n    // Create an abstracted controller state\n    const controllerState = ResponsiveGamepad.getState();\n\n    // Set the new controller state on the instance\n    this.wasmInstance.exports.setJoypadState(\n      controllerState.UP ? 1 : 0,\n      controllerState.RIGHT ? 1 : 0,\n      controllerState.DOWN ? 1 : 0,\n      controllerState.LEFT ? 1 : 0,\n      controllerState.A ? 1 : 0,\n      controllerState.B ? 1 : 0,\n      controllerState.SELECT ? 1 : 0,\n      controllerState.START ? 1 : 0\n    );\n\n    // Return the controller state in case we need something from it\n    return controllerState;\n  }\n}\n\nexport const WasmBoyController = new WasmBoyControllerService();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/controller/controller.js","// Get our idb instance, and initialize to asn idb-keyval\n// This is so we don't get the default keyval DB name. And will allow\n// Parent projects to use the slimmer idb keyval\n// https://www.npmjs.com/package/idb\nconst idb = require('idb');\n\nlet keyval = false;\n\n// Get our idb dPromise\nif (typeof window !== 'undefined') {\n  const dbPromise = idb.open('wasmboy', 1, upgradeDB => {\n    upgradeDB.createObjectStore('keyval');\n  });\n\n  // Get our idb-keyval instance\n  keyval = {\n    get(key) {\n      return dbPromise.then(db => {\n        return db.transaction('keyval')\n          .objectStore('keyval').get(key);\n      });\n    },\n    set(key, val) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').put(val, key);\n        return tx.complete;\n      });\n    },\n    delete(key) {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').delete(key);\n        return tx.complete;\n      });\n    },\n    clear() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval', 'readwrite');\n        tx.objectStore('keyval').clear();\n        return tx.complete;\n      });\n    },\n    keys() {\n      return dbPromise.then(db => {\n        const tx = db.transaction('keyval');\n        const keys = [];\n        const store = tx.objectStore('keyval');\n\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // openKeyCursor isn't supported by Safari, so we fall back\n        (store.iterateKeyCursor || store.iterateCursor).call(store, cursor => {\n          if (!cursor) return;\n          keys.push(cursor.key);\n          cursor.continue();\n        });\n\n        return tx.complete.then(() => keys);\n      });\n    }\n  }\n}\n\nexport const idbKeyval = keyval;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/memory/idb.js","import Promise from 'promise-polyfill';\nimport { idbKeyval } from './idb';\n\n// Going to set the key for idbKeyval as the cartridge header.\n// Then, for each cartridge, it will return an object.\n// there will be a cartridgeRam Key, settings Key, and a saveState key\n// Not going to make one giant object, as we want to keep idb transactions light and fast\n\nconst WASMBOY_UNLOAD_STORAGE = 'WASMBOY_UNLOAD_STORAGE';\n\n//  Will save the state in parts, to easy memory map changes:\n// https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\nconst WASMBOY_SAVE_STATE_SCHEMA = {\n  wasmBoyMemory: {\n    wasmBoyInternalState: [],\n    wasmBoyPaletteMemory: [],\n    gameBoyMemory: [],\n    cartridgeRam: []\n  },\n  date: undefined,\n  name: undefined,\n  isAuto: undefined\n}\n\n// Define some constants since calls to wasm are expensive\nlet WASMBOY_GAME_BYTES_LOCATION = 0;\nlet WASMBOY_GAME_RAM_BANKS_LOCATION = 0;\nlet WASMBOY_INTERNAL_STATE_SIZE = 0;\nlet WASMBOY_INTERNAL_STATE_LOCATION = 0;\nlet WASMBOY_INTERNAL_MEMORY_SIZE = 0;\nlet WASMBOY_INTERNAL_MEMORY_LOCATION = 0;\nlet WASMBOY_PALETTE_MEMORY_SIZE = 0;\nlet WASMBOY_PALETTE_MEMORY_LOCATION = 0;\n\n// Private function to get the cartridge header\nconst getCartridgeHeader = (wasmInstance, wasmByteMemory) => {\n\n  if (!wasmByteMemory) {\n    return false;\n  }\n\n  // Header is at 0x0134 - 0x014F\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  const headerLength = 0x014F - 0x0134;\n  const headerArray = new Uint8Array(headerLength);\n  for(let i = 0; i <= headerLength; i++) {\n    // Get the CARTRIDGE_ROM + the offset to point us at the header, plus the current byte\n    headerArray[i] = wasmByteMemory[WASMBOY_GAME_BYTES_LOCATION + 0x0134 + i];\n  }\n\n  return headerArray;\n}\n\n// Private function to get the caretridge ram\nconst getCartridgeRam = (wasmInstance, wasmByteMemory) => {\n\n  if (!wasmByteMemory) {\n    return false;\n  }\n\n  // Depening on the rom type, we will have different ram sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = wasmByteMemory[WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let ramSize = undefined;\n  if(cartridgeType === 0x00) {\n    // No memory for this rom type\n    return false;\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 512X4 Bytes, 2KB\n    ramSize = 0x800;\n  } else if (cartridgeType >= 0x0F && cartridgeType <= 0x13) {\n    // MBC3 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1E) {\n    // MBC5 128KB of Ram\n    ramSize = 0x20000;\n  }\n\n  if(!ramSize) {\n    return false;\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRam = new Uint8Array(ramSize);\n\n  for(let i = 0; i < (ramSize); i++) {\n    cartridgeRam[i] = wasmByteMemory[WASMBOY_GAME_RAM_BANKS_LOCATION + i];\n  }\n\n  return cartridgeRam;\n}\n\n// Function to return a save state of the current memory\nconst getSaveState = (wasmInstance, wasmByteMemory, saveStateCallback, saveStateName) => {\n\n\n  const cartridgeRam = getCartridgeRam(wasmInstance, wasmByteMemory);\n\n  const wasmBoyInternalState = new Uint8Array(WASMBOY_INTERNAL_STATE_SIZE);\n  const wasmBoyPaletteMemory = new Uint8Array(WASMBOY_PALETTE_MEMORY_SIZE);\n  const gameBoyMemory = new Uint8Array(WASMBOY_INTERNAL_MEMORY_SIZE);\n\n  for (let i = 0; i < WASMBOY_INTERNAL_STATE_SIZE; i++) {\n    wasmBoyInternalState[i] =\n      wasmByteMemory[i + WASMBOY_INTERNAL_STATE_LOCATION];\n  }\n\n  for (let i = 0; i < WASMBOY_PALETTE_MEMORY_SIZE; i++) {\n    wasmBoyPaletteMemory[i] =\n      wasmByteMemory[i + WASMBOY_PALETTE_MEMORY_LOCATION];\n  }\n\n  for (let i = 0; i < WASMBOY_INTERNAL_MEMORY_SIZE; i++) {\n    gameBoyMemory[i] =\n      wasmByteMemory[i + WASMBOY_INTERNAL_MEMORY_LOCATION];\n  }\n\n  let saveState = Object.assign({}, WASMBOY_SAVE_STATE_SCHEMA);\n\n  saveState.wasmBoyMemory.wasmBoyInternalState = wasmBoyInternalState;\n  saveState.wasmBoyMemory.wasmBoyPaletteMemory = wasmBoyPaletteMemory;\n  saveState.wasmBoyMemory.gameBoyMemory = gameBoyMemory;\n  saveState.wasmBoyMemory.cartridgeRam = cartridgeRam;\n  saveState.date = Date.now();\n  saveState.isAuto = false;\n  saveState.name = saveStateName;\n\n  if (saveStateCallback) {\n    saveState = saveStateCallback(saveState);\n  }\n\n  return saveState;\n}\n\nconst loadSaveState = (wasmInstance, wasmByteMemory, saveState) => {\n\n  for (let i = 0; i  < WASMBOY_INTERNAL_STATE_SIZE; i++) {\n    wasmByteMemory[i + WASMBOY_INTERNAL_STATE_LOCATION] =\n      saveState.wasmBoyMemory.wasmBoyInternalState[i];\n  }\n\n  for (let i = 0; i < WASMBOY_PALETTE_MEMORY_SIZE; i++) {\n    wasmByteMemory[i + WASMBOY_PALETTE_MEMORY_LOCATION] =\n      saveState.wasmBoyMemory.wasmBoyPaletteMemory[i];\n  }\n\n  for (let i = 0; i < WASMBOY_INTERNAL_MEMORY_SIZE; i++) {\n    wasmByteMemory[i + WASMBOY_INTERNAL_MEMORY_LOCATION] =\n      saveState.wasmBoyMemory.gameBoyMemory[i];\n  }\n\n  for (let i = 0; i < saveState.wasmBoyMemory.cartridgeRam.length; i++) {\n    wasmByteMemory[i + WASMBOY_GAME_RAM_BANKS_LOCATION] =\n      saveState.wasmBoyMemory.cartridgeRam[i];\n  }\n\n  return true;\n};\n\nclass WasmBoyMemoryService {\n\n  constructor() {\n    this.wasmInstance = undefined;\n    this.wasmByteMemory = undefined;\n    this.saveStateCallback = undefined;\n    this.loadedCartridgeMemoryState = {\n      ROM: false,\n      RAM: false\n    };\n  }\n\n  initialize(wasmInstance, wasmByteMemory, saveStateCallback) {\n    this.wasmInstance = wasmInstance;\n    this.wasmByteMemory = wasmByteMemory;\n    this.saveStateCallback = saveStateCallback;\n\n    this._initializeConstants();\n\n    // Set listeners to ensure we save our cartridge ram before closing\n    window.addEventListener(\"beforeunload\", () => {\n      // Need to add a retrun value, and force all code in the block to be sync\n      // https://stackoverflow.com/questions/7255649/window-onbeforeunload-not-working\n      // http://vaughnroyko.com/idbonbeforeunload/\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=870645\n\n      // Solution:\n      // ~~Try to force sync: https://www.npmjs.com/package/deasync~~ Didn't work, requires fs\n      // Save to local storage, and pick it back up in init: https://bugs.chromium.org/p/chromium/issues/detail?id=144862\n\n      // Check if the game is currently playing\n      if(this.wasmInstance.exports.hasCoreStarted() <= 0) {\n        return null;\n      }\n\n      // Get our cartridge ram and header\n      const header = getCartridgeHeader(this.wasmInstance, this.wasmByteMemory);\n      const cartridgeRam = getCartridgeRam(this.wasmInstance, this.wasmByteMemory);\n\n      // Get our save state, and un type our arrays\n      const saveState = getSaveState(this.wasmInstance, this.wasmByteMemory, this.saveStateCallback);\n      const saveStateMemoryKeys = Object.keys(saveState.wasmBoyMemory);\n      for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n        saveState.wasmBoyMemory[saveStateMemoryKeys[i]] =\n          Array.prototype.slice.call(saveState.wasmBoyMemory[saveStateMemoryKeys[i]]);\n      }\n\n      // Set isAuto\n      saveState.isAuto = true;\n\n      // Need to vonert types arrays, and back, or selse wll get indexed JSON\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n      localStorage.setItem(WASMBOY_UNLOAD_STORAGE, JSON.stringify({\n        header: Array.prototype.slice.call(header),\n        cartridgeRam: Array.prototype.slice.call(cartridgeRam),\n        saveState: saveState\n      }));\n\n      return null;\n    }, false);\n\n    return new Promise((resolve, reject) => {\n      // Load any unloaded storage in our localStorage\n      const unloadStorage = localStorage.getItem(WASMBOY_UNLOAD_STORAGE);\n      if (unloadStorage) {\n\n        const unloadStorageObject = JSON.parse(unloadStorage);\n        localStorage.removeItem(WASMBOY_UNLOAD_STORAGE);\n\n        const header = new Uint8Array(unloadStorageObject.header);\n        const cartridgeRam = new Uint8Array(unloadStorageObject.cartridgeRam);\n\n        // Get our save state, and re-type our array\n        const saveState = unloadStorageObject.saveState;\n        if (saveState) {\n          const saveStateMemoryKeys = Object.keys(saveState.wasmBoyMemory);\n          for (let i = 0; i < saveStateMemoryKeys.length; i++) {\n            saveState.wasmBoyMemory[saveStateMemoryKeys[i]] =\n              new Uint8Array(saveState.wasmBoyMemory[saveStateMemoryKeys[i]]);\n          }\n        }\n\n        this.saveCartridgeRam(header, cartridgeRam).then(() => {\n          this.saveState(header, saveState).then(() => {\n            return resolve();\n          }).catch((error) => {\n            return reject(error);\n          });\n        }).catch((error) => {\n          return reject(error);\n        });\n      } else {\n        return resolve();\n      }\n    });\n  }\n\n  initializeHeadless(wasmInstance, wasmByteMemory, saveStateCallback) {\n    this.wasmInstance = wasmInstance;\n    this.wasmByteMemory = wasmByteMemory;\n    this.saveStateCallback = saveStateCallback;\n\n    this._initializeConstants();\n  }\n\n  _initializeConstants() {\n    // Initialiuze our cached wasm constants\n    WASMBOY_GAME_BYTES_LOCATION = this.wasmInstance.exports.gameBytesLocation;\n    WASMBOY_GAME_RAM_BANKS_LOCATION = this.wasmInstance.exports.gameRamBanksLocation;\n    WASMBOY_INTERNAL_STATE_SIZE = this.wasmInstance.exports.wasmBoyInternalStateSize;\n    WASMBOY_INTERNAL_STATE_LOCATION = this.wasmInstance.exports.wasmBoyInternalStateLocation;\n    WASMBOY_INTERNAL_MEMORY_SIZE = this.wasmInstance.exports.gameBoyInternalMemorySize;\n    WASMBOY_INTERNAL_MEMORY_LOCATION = this.wasmInstance.exports.gameBoyInternalMemoryLocation;\n    WASMBOY_PALETTE_MEMORY_SIZE = this.wasmInstance.exports.gameboyColorPaletteSize;\n    WASMBOY_PALETTE_MEMORY_LOCATION = this.wasmInstance.exports.gameboyColorPaletteLocation;\n  }\n\n  getLoadedCartridgeMemoryState() {\n    return this.loadedCartridgeMemoryState;\n  }\n\n  clearMemory() {\n    // Clear Wasm memory\n    // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n    for(let i = 0; i <= this.wasmByteMemory.length; i++) {\n      this.wasmByteMemory[i] = 0;\n    }\n\n    this.loadedCartridgeMemoryState.ROM = false;\n    this.loadedCartridgeMemoryState.RAM = false;\n  }\n\n  // Function to reset stateful sections of memory\n  resetMemory() {\n    for(let i = 0; i <= WASMBOY_GAME_BYTES_LOCATION; i++) {\n      this.wasmByteMemory[i] = 0;\n    }\n\n    this.loadedCartridgeMemoryState.RAM = false;\n  }\n\n  loadCartridgeRom(gameBytes, isGbcEnabled, bootRom) {\n\n    // Load the game data into actual memory\n    for(let i = 0; i < gameBytes.length; i++) {\n      if (gameBytes[i]) {\n        this.wasmByteMemory[WASMBOY_GAME_BYTES_LOCATION + i] = gameBytes[i];\n      }\n    }\n\n    // TODO: Handle getting a boot rom\n    this.wasmInstance.exports.initialize(\n      isGbcEnabled ? 1 : 0,\n      0\n    );\n\n    this.loadedCartridgeMemoryState.ROM = true;\n  }\n\n  // Function to save the cartridge ram\n  // This emulates the cartridge having a battery to\n  // Keep things like Pokemon Save data in memory\n  // Also allows passing in a a Uint8Array header and ram to be set manually\n  saveCartridgeRam(passedHeader, passedCartridgeRam) {\n\n    return new Promise((resolve, reject) => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      let header;\n      let cartridgeRam;\n      if(passedHeader && passedCartridgeRam) {\n        header = passedHeader;\n        cartridgeRam = passedCartridgeRam;\n      } else {\n        header = getCartridgeHeader(this.wasmInstance, this.wasmByteMemory);\n        cartridgeRam = getCartridgeRam(this.wasmInstance, this.wasmByteMemory);\n      }\n\n      if(!header || !cartridgeRam) {\n        console.error('Error parsing the cartridgeRam or cartridge header', header, cartridgeRam);\n        reject('Error parsing the cartridgeRam or cartridge header');\n      }\n\n      // Get our cartridge object\n      idbKeyval.get(header).then((cartridgeObject) => {\n\n        if(!cartridgeObject) {\n          cartridgeObject = {};\n        }\n\n        // Set the cartridgeRam to our cartridgeObject\n        cartridgeObject.cartridgeRam = cartridgeRam;\n\n        idbKeyval.set(header, cartridgeObject).then(() => {\n          resolve();\n        }).catch((error) => {\n          reject(error);\n        });\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  // function to load the cartridge ram\n  // opposite of above\n  loadCartridgeRam() {\n\n    return new Promise((resolve, reject) => {\n      // Get the entire header in byte memory\n      // Each version of a rom can have similar title and checksums\n      // Therefore comparing all of it should help with this :)\n      // https://drive.google.com/file/d/0B7y-o-Uytiv9OThXWXFCM1FPbGs/view\n      const header = getCartridgeHeader(this.wasmInstance, this.wasmByteMemory);\n\n      if(!header) {\n        reject('Error parsing the cartridge header');\n      }\n\n      idbKeyval.get(header).then((cartridgeObject) => {\n\n        if(!cartridgeObject || !cartridgeObject.cartridgeRam) {\n          resolve();\n          return;\n        }\n\n        // Set the cartridgeRam\n        for(let i = 0; i < cartridgeObject.cartridgeRam.length; i++) {\n           this.wasmByteMemory[WASMBOY_GAME_RAM_BANKS_LOCATION + i] = cartridgeObject.cartridgeRam[i];\n        }\n        this.loadedCartridgeMemoryState.RAM = true;\n        resolve();\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  // Function to save the state to the indexeddb\n  saveState(passedHeader, passedSaveState) {\n\n    return new Promise((resolve, reject) => {\n\n      // Save our internal wasmboy state to memory\n      this.wasmInstance.exports.saveState();\n\n      // Get our save state\n      let saveState;\n      let header;\n      if (passedHeader && passedSaveState) {\n        saveState = passedSaveState;\n        header = passedHeader;\n      } else {\n        saveState = getSaveState(this.wasmInstance, this.wasmByteMemory, this.saveStateCallback);\n        header = getCartridgeHeader(this.wasmInstance, this.wasmByteMemory);\n      }\n\n      if(!header) {\n        reject('Error parsing the cartridge header');\n      }\n\n      idbKeyval.get(header).then((cartridgeObject) => {\n\n        if(!cartridgeObject) {\n          cartridgeObject = {};\n        }\n\n        if(!cartridgeObject.saveStates) {\n          cartridgeObject.saveStates = [];\n        }\n\n        cartridgeObject.saveStates.push(saveState);\n\n        idbKeyval.set(header, cartridgeObject).then(() => {\n          resolve();\n        }).catch((error) => {\n          reject(error);\n        });\n      }).catch((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  loadState(saveState) {\n    return new Promise((resolve, reject) => {\n\n      const header = getCartridgeHeader(this.wasmInstance, this.wasmByteMemory);\n\n      if(!header) {\n        reject('Error parsing the cartridge header');\n      }\n\n      if(saveState) {\n        loadSaveState(this.wasmInstance, this.wasmByteMemory, saveState);\n\n        // Load back out internal wasmboy state from memory\n        this.wasmInstance.exports.loadState();\n\n        resolve();\n      } else {\n        idbKeyval.get(header).then((cartridgeObject) => {\n\n          if(!cartridgeObject || !cartridgeObject.saveStates) {\n            reject('No Save State passed, and no cartridge object found');\n            return;\n          }\n\n          // Load the last save state\n          loadSaveState(this.wasmInstance, this.wasmByteMemory, cartridgeObject.saveStates[0]);\n\n          // Load back out internal wasmboy state from memory\n          this.wasmInstance.exports.loadState();\n\n          resolve();\n        }).catch((error) => {\n          reject(error);\n        });\n      }\n    });\n  }\n\n  // Function to reset the state of the wasm core\n  resetState(isGbcEnabled, bootRom) {\n    this.resetMemory();\n\n    // TODO: Handle getting a boot rom\n    this.wasmInstance.exports.initialize(\n      isGbcEnabled ? 1 : 0,\n      0\n    );\n  }\n\n  // Function to return the current cartridge object\n  getCartridgeObject() {\n    const header = getCartridgeHeader(this.wasmInstance, this.wasmByteMemory);\n    return idbKeyval.get(header);\n  }\n}\n\n// Create a singleton to export\nexport const WasmBoyMemory = new WasmBoyMemoryService();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/memory/memory.js","import fetch from 'unfetch'\nimport Promise from 'promise-polyfill';\nimport wasmModule from '../dist/wasm/index.untouched.wasm';\nimport { WasmBoyGraphics } from './graphics/graphics';\nimport { WasmBoyAudio } from './audio/audio';\nimport { WasmBoyController } from './controller/controller';\nimport { WasmBoyMemory } from './memory/memory';\n\n// requestAnimationFrame() for headless mode\nconst raf = require('raf');\n\n// Function to get performance timestamp\n// This is to support node vs. Browser\nconst getPerformanceTimestamp = () => {\n  if (typeof window !== 'undefined') {\n    return performance.now();\n  }\n  return Date.now();\n}\n\nclass WasmBoyLib {\n\n  // Start the request to our wasm module\n  constructor() {\n    this.wasmInstance = undefined;\n    this.wasmByteMemory = undefined;\n    this.canvasElement = undefined;\n    this.paused = false;\n    this.pauseFpsThrottle = false;\n    this.ready = false;\n    this.renderId = false;\n    this.updateId = false;\n    this.loadedGame = false;\n\n    // Options, can't be undefined\n    this.headless = false;\n    this.isGbcEnabled = true;\n    this.isAudioEnabled = true;\n    this.gameboyFrameRate = 60;\n    this.gameboyFpsCap = 60;\n    this.fpsTimeStamps = [];\n    this.frameSkip = 0;\n    this.frameSkipCounter = 0;\n    this.saveStateCallback = false;\n\n    // Options for wasm\n    this.audioBatchProcessing = false;\n    this.graphicsBatchProcessing = false;\n    this.timersBatchProcessing = false;\n    this.graphicsDisableScanlineRendering = false;\n    this.audioAccumulateSamples = false;\n    this.tileRendering = false;\n    this.tileCaching = false;\n\n    // Debug code\n    this.logRequest = false;\n    this.performanceTimestamps = {};\n  }\n\n  // Function to initialize our Wasmboy\n  initialize(canvasElement, wasmBoyOptions) {\n\n    // Get our canvas elements\n    this.canvasElement = canvasElement;\n\n    // Set our defaults\n    this.headless = false;\n    this.isAudioEnabled = true;\n    this.gameboyFrameRate = 60;\n    this.gameboyFpsCap = 60;\n    this.fpsTimeStamps = [];\n    this.frameSkip = 0;\n    this.frameSkipCounter = 0;\n\n    // Defaults for wasm\n    this.audioBatchProcessing = false;\n    this.graphicsBatchProcessing = false;\n    this.timersBatchProcessing = false;\n    this.graphicsDisableScanlineRendering = false;\n    this.audioAccumulateSamples = false;\n\n    // Defaults for action callbacks\n    this.saveStateCallback = false;\n\n\n    // set our options\n    if(wasmBoyOptions) {\n\n      // Set all options\n      Object.keys(wasmBoyOptions).forEach((key) => {\n        if (this[key] !== undefined) {\n          this[key] = wasmBoyOptions[key];\n        }\n      });\n\n      // Aliases\n      // Gameboy Speed / Framerate\n      if(wasmBoyOptions.gameboySpeed) {\n        let gameboyFrameRate = Math.floor(wasmBoyOptions.gameboySpeed * 60);\n        if(gameboyFrameRate <= 0) {\n          gameboyFrameRate = 1;\n        }\n        this.gameboyFrameRate = gameboyFrameRate;\n        this.gameboyFpsCap = gameboyFrameRate;\n      }\n\n      // Check some conflicting variables\n      if (this.gameboyFrameRate > this.gameboyFpsCap) {\n        this.gameboyFrameRate = this.gameboyFpsCap\n      }\n    }\n  }\n\n  // Finish request for wasm module, and fetch game\n  loadGame(game) {\n    // Getting started with wasm\n    // http://webassembly.org/getting-started/js-api/\n    this.ready = false;\n    return new Promise((resolve, reject) => {\n\n      // Pause the game in case it was running\n      this.pauseGame().then(() => {\n        // Get our promises\n        const initPromises = [\n          this._fetchGameAsByteArray(game),\n          this._getWasmInstance()\n        ];\n\n        if (!this.headless && WasmBoyMemory.getLoadedCartridgeMemoryState().RAM) {\n          initPromises.push(WasmBoyMemory.saveCartridgeRam());\n        }\n\n        Promise.all(initPromises).then((responses) => {\n\n          // Save the game that we loaded if we need to reload the game\n          this.loadedGame = game;\n\n          // Check if we are running headless\n          if(this.headless) {\n\n            WasmBoyMemory.initializeHeadless(this.wasmInstance, this.wasmByteMemory, this.saveStateCallback);\n\n            // Clear what is currently in memory, then load the cartridge memory\n            WasmBoyMemory.clearMemory();\n            WasmBoyMemory.resetState();\n\n            // TODO: Handle passing a boot rom\n            WasmBoyMemory.loadCartridgeRom(responses[0], false, false);\n            this.ready = true;\n\n            resolve();\n          } else {\n            // Finally intialize all of our services\n            // Initialize our services\n            Promise.all([\n              WasmBoyGraphics.initialize(this.canvasElement, this.wasmInstance, this.wasmByteMemory),\n              WasmBoyAudio.initialize(this.wasmInstance, this.wasmByteMemory),\n              WasmBoyController.initialize(this.wasmInstance),\n              WasmBoyMemory.initialize(this.wasmInstance, this.wasmByteMemory, this.saveStateCallback)\n            ]).then(() => {\n\n              // Clear what is currently in memory, then load the carttridge memory\n              WasmBoyMemory.clearMemory();\n              WasmBoyMemory.resetState();\n\n\n              // TODO: Handle passing a boot rom\n              WasmBoyMemory.loadCartridgeRom(responses[0], this.isGbcEnabled, false);\n\n              // Load the game's cartridge ram\n              WasmBoyMemory.loadCartridgeRam().then(() => {\n                this.ready = true;\n                resolve();\n              }).catch((error) => {\n                reject(error);\n              });\n            }).catch((error) => {\n              reject(error);\n            });\n          }\n        }).catch((error) => {\n          reject(error);\n        });\n      });\n    });\n  }\n\n  // Function to reset wasmBoy, with an optional set of options\n  reset(wasmBoyOptions) {\n\n    this.initialize(this.canvasElement, wasmBoyOptions);\n    WasmBoyMemory.resetState();\n    if (this.wasmInstance) {\n      // Run our initialization on the core\n      this.wasmInstance.exports.config(\n        this.audioBatchProcessing ? 1 : 0,\n        this.graphicsBatchProcessing ? 1 : 0,\n        this.timersBatchProcessing ? 1 : 0,\n        this.graphicsDisableScanlineRendering ? 1 : 0,\n        this.audioAccumulateSamples ? 1 : 0,\n        this.tileRendering ? 1 : 0,\n        this.tileCaching ? 1 : 0\n      );\n    }\n\n    // Reload the game if one was already loaded\n    if(this.loadedGame && !this.headless) {\n      this.loadGame(this.loadedGame);\n    }\n  }\n\n  // Function to start the game\n  startGame() {\n    return this.resumeGame();\n  }\n\n  resumeGame() {\n    if (!this.ready) {\n      return false;\n    }\n\n    // Reset the audio queue index to stop weird pauses when trying to load a game\n    this.wasmInstance.exports.resetAudioQueue();\n\n    // Start our update and render process\n    // Can't time by raf, as raf is not garunteed to be 60fps\n    // Need to run like a web game, where updates to the state of the core are done a 60 fps\n    // but we can render whenever the user would actually see the changes browser side in a raf\n    // https://developer.mozilla.org/en-US/docs/Games/Anatomy\n    this._emulatorUpdate();\n\n    // Undo any pause\n    this.paused = false;\n\n    if(!this.updateId) {\n\n      const intervalRate = 1000 / this.gameboyFrameRate;\n\n      // Reset the frameTimeStamps\n      this.fpsTimeStamps = [];\n\n      // 1000 / 60 = 60fps\n      this.updateId = setInterval(() => {\n        this._emulatorUpdate();\n      }, intervalRate);\n    }\n\n    if(!this.renderId && !this.headless) {\n      this.renderId = raf(() => {\n        this._emulatorRender();\n      });\n    }\n\n    // Finally set up out pause fps throttle\n    // This will allow us to know if we just un paused\n    this.pauseFpsThrottle = true;\n    setTimeout(() => {\n      this.pauseFpsThrottle = false;\n    }, 2000);\n  }\n\n  // Function to pause the game, returns a promise\n  // Will try to wait until the emulation sync is returned, and then will\n  // Allow any actions\n  pauseGame() {\n    this.paused = true;\n\n    // Cancel our update and render loop\n    raf.cancel(this.renderId);\n    this.renderId = false;\n    clearInterval(this.updateId);\n    this.updateId = false;\n\n    // Wait a raf to ensure everything is done\n    return new Promise((resolve) => {\n      raf(() => {\n        resolve();\n      });\n    });\n  }\n\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  getFps() {\n    if(this.pauseFpsThrottle) {\n      return this.gameboyFpsCap;\n    }\n    return this.fpsTimeStamps.length;\n  }\n\n  // Function to return the current game object in memory\n  getWasmBoyMemoryForLoadedGame() {\n    return WasmBoyMemory.getCartridgeObject();\n  }\n\n  saveState() {\n    const wasPaused = this.paused;\n    // Pause the game in case it was running\n    this.pauseGame().then(() => {\n      // Save our state to wasmMemory\n      WasmBoyMemory.saveState().then(() => {\n        if(!wasPaused) {\n          this.resumeGame();\n        }\n      });\n    });\n  }\n\n  loadState(saveState) {\n    const wasPaused = this.paused;\n    // Pause the game in case it was running, and set to not ready\n    this.pauseGame().then(() => {\n      WasmBoyMemory.loadState(saveState).then(() => {\n        if(!wasPaused) {\n          this.resumeGame();\n        }\n      });\n    });\n  }\n\n  // Function to run an update on the emulator itself\n  _emulatorUpdate() {\n\n    // Don't run if paused\n    if (this.paused) {\n      return true;\n    }\n\n    // Track our Fps\n    // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n    let currentHighResTime = getPerformanceTimestamp();\n    while (this.fpsTimeStamps[0] < currentHighResTime - 1000) {\n      this.fpsTimeStamps.shift();\n    }\n\n    // Framecap at 60fps\n    const currentFps = this.getFps();\n    if (currentFps > this.gameboyFpsCap) {\n      return true;\n    } else {\n      this.fpsTimeStamps.push(currentHighResTime);\n    }\n\n    // If audio is enabled, sync by audio\n    // Check how many samples we have, and if we are getting too ahead, need to skip the update\n    // Magic number is from experimenting and this seems to go good\n    // TODO: Make this a preference, or calculate from perfrmance.now()\n    // TODO Make audio que ocnstant in wasmboy audio, and make itr a function to be callsed in wasmboy audiio\n    if(!this.headless &&\n      !this.pauseFpsThrottle &&\n      this.isAudioEnabled &&\n      this.wasmInstance.exports.getAudioQueueIndex() > (9000 * (this.gameboyFpsCap / 60)) &&\n      this.gameboyFpsCap <= 60) {\n      // TODO: Waiting for time stretching to resolve may be causing this\n      console.log('Waiting for audio...');\n      return true;\n    }\n\n    // Update (Execute a frame)\n    let response = this.wasmInstance.exports.update();\n\n    // Handle our update() response\n    if(response > 0) {\n      // See: wasm/cpu/opcodes update() function\n      // 1 = render a frame\n      // 2 = replace boot rom\n      // TODO: Find what should go here\n      switch(response) {\n        case 1:\n        case 2:\n          break;\n      }\n\n      return true;\n    } else {\n      console.log('Wasmboy Crashed!');\n      console.log(`Program Counter: 0x${this.wasmInstance.exports.getProgramCounter().toString(16)}`)\n      console.log(`Opcode: 0x${this.wasmByteMemory[this.wasmInstance.exports.getProgramCounter()].toString(16)}`);\n      this.pauseGame();\n      return false;\n    }\n  }\n\n  // Function to render our emulator output\n  _emulatorRender() {\n\n      // Don't run if paused\n      if (this.paused) {\n        return true;\n      }\n\n      // Check if we have frameskip\n      let shouldSkipRenderingFrame = false;\n      if (this.frameSkip && this.frameSkip > 0) {\n        this.frameSkipCounter++;\n\n        if (this.frameSkipCounter < this.frameSkip) {\n          shouldSkipRenderingFrame = true;\n        } else {\n          this.frameSkipCounter = 0;\n        }\n      }\n\n      // Render the display\n      if(!shouldSkipRenderingFrame) {\n        WasmBoyGraphics.renderFrame();\n      }\n\n      // Play the audio\n      if(this.isAudioEnabled) {\n        WasmBoyAudio.playAudio(this.getFps(), this.gameboyFpsCap > 60);\n      }\n\n      // Update our controller\n      WasmBoyController.updateController();\n\n      this.renderId = raf(() => {\n        this._emulatorRender();\n      });\n  }\n\n  // Private funciton to returna promise to our wasmModule\n  // This allow will re-load the wasm module, that way we can obtain a new wasm instance\n  // For each time we load a game\n  _getWasmInstance() {\n    return new Promise((resolve, reject) => {\n\n      // Get our wasm instance from our wasmModule\n      const memoryBase =\n      wasmModule({\n        env: {\n          log: (message, arg0, arg1, arg2, arg3, arg4, arg5) => {\n            // Grab our string\n            var len = new Uint32Array(this.wasmInstance.exports.memory.buffer, message, 1)[0];\n            var str = String.fromCharCode.apply(null, new Uint16Array(this.wasmInstance.exports.memory.buffer, message + 4, len));\n            if (arg0 !== -9999) str = str.replace(\"$0\", arg0);\n            if (arg1 !== -9999) str = str.replace(\"$1\", arg1);\n            if (arg2 !== -9999) str = str.replace(\"$2\", arg2);\n            if (arg3 !== -9999) str = str.replace(\"$3\", arg3);\n            if (arg4 !== -9999) str = str.replace(\"$4\", arg4);\n            if (arg5 !== -9999) str = str.replace(\"$5\", arg5);\n\n            console.log(\"[WasmBoy] \" + str);\n          },\n          hexLog: (arg0, arg1, arg2, arg3, arg4, arg5) => {\n\n            if(!this.logRequest) {\n\n              // Grab our arguments, and log as hex\n              let logString = '[WasmBoy]';\n              if (arg0 !== -9999) logString += ` 0x${arg0.toString(16)} `;\n              if (arg1 !== -9999) logString += ` 0x${arg1.toString(16)} `;\n              if (arg2 !== -9999) logString += ` 0x${arg2.toString(16)} `;\n              if (arg3 !== -9999) logString += ` 0x${arg3.toString(16)} `;\n              if (arg4 !== -9999) logString += ` 0x${arg4.toString(16)} `;\n              if (arg5 !== -9999) logString += ` 0x${arg5.toString(16)} `;\n\n              // Uncomment to unthrottle\n              //console.log(logString);\n\n              // Comment the lines below to disable throttle\n              this.logRequest = true;\n              setTimeout(() => {\n                console.log(logString);\n                this.logRequest = false;\n              }, Math.floor(Math.random() * 500));\n\n\n            }\n          },\n          performanceTimestamp: (id, value) => {\n\n            if(id === -9999) {\n              id = 0;\n            }\n\n            if (value === -9999) {\n              value = 0;\n            }\n\n            if(!this.performanceTimestamps[id]) {\n              this.performanceTimestamps[id] = {};\n              this.performanceTimestamps[id].throttle = false;\n              this.performanceTimestamps[id].totalTime = 0;\n              this.performanceTimestamps[id].value = 0;\n            }\n            if(!this.performanceTimestamps[id].throttle) {\n              if (this.performanceTimestamps[id].timestamp) {\n                // sleep a millisecond for hopefully more accurate times\n                let endTime = getPerformanceTimestamp();\n                let timeDifference = endTime - this.performanceTimestamps[id].timestamp;\n                this.performanceTimestamps[id].throttle = true;\n                this.performanceTimestamps[id].totalTime += timeDifference;\n                console.log(`[WasmBoy] Performance Timestamp. ID: ${id}, Time: ${timeDifference}, value difference: ${value - this.performanceTimestamps[id].value}, total time: ${this.performanceTimestamps[id].totalTime}`);\n                this.performanceTimestamps[id].timestamp = false;\n                setTimeout(() => {\n                  this.performanceTimestamps[id].throttle = false;\n                }, 100)\n              } else {\n                this.performanceTimestamps[id].timestamp = getPerformanceTimestamp();\n                this.performanceTimestamps[id].value = value;\n              }\n            }\n          }\n        }\n      }).then((instantiatedWasm) => {\n        // Using || since rollup and webpack wasm loaders will return differently\n        const instance = this.wasmInstance = instantiatedWasm.instance || instantiatedWasm;\n        const module = instantiatedWasm.module;\n\n        // Get our memory from our wasm instance\n        const memory = instance.exports.memory;\n\n        // NOTE: Memory growing is now done in the wasm itself\n        // Grow memory to wasmboy memory map\n        // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n        // if (memory.buffer.byteLength < this.wasmInstance.exports.wasmMemorySize) {\n        //   // Scale to the maximum needed pages\n        //   memory.grow(Math.ceil(this.wasmInstance.exports.wasmMemorySize / 1024 / 64));\n        // }\n\n        // Will stay in sync\n        this.wasmByteMemory = new Uint8Array(this.wasmInstance.exports.memory.buffer);\n\n        // Run our initialization on the core\n        this.wasmInstance.exports.config(\n          this.audioBatchProcessing ? 1 : 0,\n          this.graphicsBatchProcessing ? 1 : 0,\n          this.timersBatchProcessing ? 1 : 0,\n          this.graphicsDisableScanlineRendering ? 1 : 0,\n          this.audioAccumulateSamples ? 1 : 0,\n          this.tileRendering ? 1 : 0,\n          this.tileCaching ? 1 : 0\n        );\n        resolve(this.wasmInstance);\n      });\n    });\n  }\n\n  // Private function to fetch a game\n  _fetchGameAsByteArray(game) {\n    return new Promise((resolve, reject) => {\n      if (ArrayBuffer.isView(game) && game.constructor === Uint8Array) {\n        // Simply resolve with the input\n        resolve(game);\n        return;\n      } else if (typeof game === 'object' && game.size) {\n        // Read the file object\n        // https://www.javascripture.com/FileReader#readAsArrayBuffer_Blob\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n          const byteArray = new Uint8Array(fileReader.result);\n          resolve(byteArray);\n        }\n        fileReader.readAsArrayBuffer(game);\n      } else {\n        // Fetch the file\n        fetch(game)\n        .then(blob => {\n          if(!blob.ok) {\n            return Promise.reject(blob);\n          }\n\n          return blob.arrayBuffer();\n        }).then(bytes => {\n          const byteArray = new Uint8Array(bytes);\n          resolve(byteArray);\n        }).catch((error) => {\n          reject(error);\n        });\n      }\n    });\n  }\n}\n\nexport const WasmBoy = new WasmBoyLib();\nexport { WasmBoyAudio } from './audio/audio';\nexport { WasmBoyGraphics } from './graphics/graphics';\nexport { WasmBoyController } from './controller/controller';\n// TODO: Remove this, and consolidate public api in Wasmboy\nexport { WasmBoyMemory } from './memory/memory';\n\n\n\n// WEBPACK FOOTER //\n// ./lib/wasmboy.js","import { Component } from 'preact';\nimport Portal from 'preact-portal';\n\nexport class WasmBoySystemControls extends Component {\n\n  constructor(props) {\n\t\tsuper(props);\n\t\t// set our state to if we are initialized or not\n\t\tthis.state = {\n      showSaveStates: false,\n      saveStates: []\n    };\n\n    let fpsCounter;\n    fpsCounter = () => {\n      this.setState({\n        fps: props.wasmboy.getFps()\n      });\n      setTimeout(() => {\n        fpsCounter();\n      }, 500);\n    }\n    fpsCounter();\n\t}\n\n  // Toggle showing all save states\n  openSaveStates() {\n\n    if(this.state.showSaveStates) {\n      return;\n    }\n\n    const newState = Object.assign({}, this.state);\n    newState.showSaveStates = true;\n    this.setState(newState);\n\n    // Get our save states\n    this.props.wasmboyMemory.getCartridgeObject().then((cartridgeObject) => {\n      newState.saveStates = cartridgeObject.saveStates;\n      this.setState(newState);\n    });\n  }\n\n  closeSaveStates() {\n    const newState = Object.assign({}, this.state);\n    newState.showSaveStates = false;\n    this.setState(newState);\n  }\n\n  // Allow passing a file\n  // https://gist.github.com/AshikNesin/e44b1950f6a24cfcd85330ffc1713513\n  loadGame(wasmboy, event) {\n    wasmboy.loadGame(event.target.files[0])\n    .then(() => {\n      console.log('wasmboy Ready!');\n    });\n  }\n\n  render(props) {\n\n    let saveStateElements = (\n      <div class=\"donut\"></div>\n    )\n    if (this.state.showSaveStates && this.state.saveStates.length > 0) {\n      // Loop through save states\n      saveStateElements = [];\n      this.state.saveStates.forEach((saveState) => {\n        let saveStateDateString = new Date(saveState.date);\n        saveStateDateString = saveStateDateString.toLocaleString();\n        saveStateElements.unshift((\n          <div class=\"saveState\" onClick={() => {props.wasmboy.loadState(saveState); this.closeSaveStates();}}>\n            <img src={saveState.screenshotCanvasDataURL} />\n            <h3>Date:</h3>\n            {saveStateDateString}\n            <h3>Auto:</h3>\n            {saveState.isAuto ? \"true\" : \"false\"}\n          </div>\n        ))\n      });\n    }\n\n    return (\n      <div className=\"system-controls\">\n        <div className=\"system-controls__file-input\">\n          <input type=\"file\" onChange={(event) => {this.loadGame(props.wasmboy, event)}}></input>\n        </div>\n        <button onclick={() => {props.wasmboy.startGame();}}>Start Game</button>\n        <button onclick={() => {props.wasmboy.pauseGame();}}>Pause Game</button>\n        <button onclick={() => {props.wasmboy.resumeGame();}}>Resume Game</button>\n        <button onclick={() => {props.wasmboy.saveState();}}>Save State</button>\n        <button onclick={() => {this.openSaveStates();}}>Load State</button>\n        <div>Gameboy FPS: {this.state.fps}</div>\n\n        { this.state.showSaveStates ? (\n          <Portal into=\"body\">\n            <div class=\"popup-shadow-container\" onClick={() => {this.closeSaveStates();}}>\n              <div class=\"popup\">\n                <h1>Load Save State For Current Game</h1>\n                <div class=\"saveStateContainer\">\n                  {saveStateElements}\n                </div>\n              </div>\n            </div>\n          </Portal>\n        ) : null }\n      </div>\n    )\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/wasmboySystemControls.js","import { Component } from 'preact';\n\n// Component that takes in a JSON object, where the Keys are the column name,\n// And the Rows will represent each base value of the number in the value of the key\nexport class NumberBaseTable extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      object: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      object: nextProps.object\n    });\n  }\n\n  // Modifed from: https://ourcodeworld.com/articles/read/380/how-to-convert-a-binary-string-into-a-readable-string-and-vice-versa-with-javascript\n  numberToBinaryString(number) {\n\n     // Simply Convert each place in hex to binary\n     const hexString = number.toString(16);\n\n     let binaryString = '';\n     for(let i = 0; i < hexString.length; i++) {\n       let valueAtIncrementer = parseInt(hexString.charAt(i), 16).toString(2);\n       let paddedValueAtIncrementer = valueAtIncrementer;\n       // Pad to 4 bits\n       while(paddedValueAtIncrementer.length < 4) {\n         paddedValueAtIncrementer = '0' + paddedValueAtIncrementer\n       }\n\n       binaryString += paddedValueAtIncrementer;\n\n       if(i !== hexString.length - 1) {\n         binaryString += ' ';\n       }\n     }\n\n     // Padd out to 8 bit increments\n     if (!(binaryString.length & 1)) {\n       binaryString = '0000 ' + binaryString;\n     }\n\n     return binaryString;\n  }\n\n  getTableCellsForValueWithBase(valueBase) {\n    const tableCells = [];\n    Object.keys(this.state.object).forEach((key) => {\n      if(valueBase === 16) {\n        tableCells.push((\n          <td>0x{this.state.object[key].toString(16)}</td>\n        ))\n      } else if(valueBase === 2) {\n        tableCells.push((\n          <td>{this.numberToBinaryString(this.state.object[key])}</td>\n        ))\n      } else {\n        tableCells.push((\n          <td>{this.state.object[key]}</td>\n        ))\n      }\n    });\n\n    return tableCells;\n  }\n\n  getTableCellsForObjectKeys() {\n    if(!this.state.object) {\n      return (\n        <div></div>\n      )\n    }\n\n    const objectKeysAsTableCells = [];\n\n    Object.keys(this.state.object).forEach((key) => {\n      objectKeysAsTableCells.push((\n        <th>\n          {key}\n        </th>\n      ))\n    });\n\n    return objectKeysAsTableCells;\n  }\n\n  render() {\n\n    if(!this.state.object || Object.keys(this.state.object).length < 1) {\n      return (\n        <div></div>\n      )\n    }\n\n    return (\n      <div className=\"number-base-table-container\">\n        <table className=\"number-base-table\">\n          <tr>\n            <th>Value Base</th>\n            {this.getTableCellsForObjectKeys()}\n          </tr>\n\n          <tr>\n            <td>Hexadecimal:</td>\n            {this.getTableCellsForValueWithBase(16)}\n          </tr>\n\n          <tr>\n            <td>Decimal:</td>\n            {this.getTableCellsForValueWithBase(10)}\n          </tr>\n\n          <tr>\n            <td>Binary:</td>\n            {this.getTableCellsForValueWithBase(2)}\n          </tr>\n        </table>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/numberBaseTable.js","import { Component } from 'preact';\nimport Promise from 'promise-polyfill';\n\nexport class WasmBoyBackgroundMap extends Component {\n  constructor(props) {\n\t\tsuper(props);\n  }\n\n  componentDidMount() {\n    const canvasElement = document.getElementById('WasmBoyBackgroundMap');\n    const canvasContext = canvasElement.getContext('2d');\n    const canvasImageData = canvasContext.createImageData(256, 256);\n\n    // Add some css for smooth 8-bit canvas scaling\n    // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n    // https://caniuse.com/#feat=css-crisp-edges\n    canvasElement.style = `\n      image-rendering: optimizeSpeed;\n      image-rendering: -moz-crisp-edges;\n      image-rendering: -webkit-optimize-contrast;\n      image-rendering: -o-crisp-edges;\n      image-rendering: pixelated;\n      -ms-interpolation-mode: nearest-neighbor;\n    `;\n\n    // Fill the canvas with a blank screen\n    // using client width since we are not requiring a width and height oin the canvas\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // TODO: Mention respopnsive canvas scaling in the docs\n    canvasContext.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    const updateBackgroundMap = () => {\n      this.updateBackgroundMap(canvasElement, canvasContext, canvasImageData).then(() => {\n        setTimeout(() => {\n          updateBackgroundMap();\n        }, 500);\n      });\n    }\n    updateBackgroundMap();\n  }\n\n  updateBackgroundMap(canvasElement, canvasContext, canvasImageData) {\n    return new Promise((resolve) => {\n\n      // Dont update for the following\n      if(!this.props.wasmboy.wasmByteMemory ||\n        !this.props.wasmboy.wasmInstance ||\n        !this.props.wasmboy.ready ||\n        this.props.wasmboy.paused ||\n        !this.props.shouldUpdate) {\n        resolve();\n        return;\n      }\n\n      this.props.wasmboy.wasmInstance.exports.drawBackgroundMapToWasmMemory(1);\n\n      const imageDataArray = new Uint8ClampedArray(256 * 256 * 4);\n      const rgbColor = new Uint8ClampedArray(3);\n\n      for(let y = 0; y < 256; y++) {\n        for (let x = 0; x < 256; x++) {\n\n          // Each color has an R G B component\n          let pixelStart = ((y * 256) + x) * 3;\n\n          for (let color = 0; color < 3; color++) {\n            rgbColor[color] = this.props.wasmboy.wasmByteMemory[\n              this.props.wasmboy.wasmInstance.exports.backgroundMapLocation + pixelStart + color\n            ];\n          }\n\n          // Doing graphics using second answer on:\n          // https://stackoverflow.com/questions/4899799/whats-the-best-way-to-set-a-single-pixel-in-an-html5-canvas\n          // Image Data mapping\n          const imageDataIndex = (x + (y * 256)) * 4;\n\n          imageDataArray[imageDataIndex] = rgbColor[0];\n          imageDataArray[imageDataIndex + 1] = rgbColor[1];\n          imageDataArray[imageDataIndex + 2] = rgbColor[2];\n          // Alpha, no transparency\n          imageDataArray[imageDataIndex + 3] = 255;\n        }\n      }\n\n      // Add our new imageData\n      for(let i = 0; i < imageDataArray.length; i++) {\n        canvasImageData.data[i] = imageDataArray[i];\n      }\n\n      canvasContext.beginPath();\n      canvasContext.clearRect(0, 0, 256, 256);\n      canvasContext.putImageData(canvasImageData, 0, 0);\n\n      // Draw a semi Transparent camera thing over the imagedata\n      // https://www.html5canvastutorials.com/tutorials/html5-canvas-rectangles/\n      // Get the scroll X and Y\n      const scrollX = this.props.wasmboy.wasmByteMemory[this.props.getWasmBoyOffsetFromGameBoyOffset(0xFF43, this.props.wasmboy)];\n      const scrollY = this.props.wasmboy.wasmByteMemory[this.props.getWasmBoyOffsetFromGameBoyOffset(0xFF42, this.props.wasmboy)];\n\n      const lineWidth = 2;\n      const strokeStyle = 'rgba(173, 140, 255, 200)';\n\n      // Need to wrap by the four corners, not the 4 edges\n\n      // Upper left corner\n      canvasContext.rect(scrollX, scrollY, 160, 144);\n      canvasContext.lineWidth = lineWidth;\n      canvasContext.strokeStyle = strokeStyle;\n      canvasContext.stroke();\n\n      // Upper right corner\n      if (scrollX + 160 > 256) {\n        canvasContext.rect(0, scrollY, (scrollX + 160 - 256), 144);\n        canvasContext.lineWidth = lineWidth;\n        canvasContext.strokeStyle = strokeStyle;\n        canvasContext.stroke();\n      }\n\n      // Bottom left corner\n      if (scrollY + 144 > 256) {\n        canvasContext.rect(scrollX, 0, 160, (scrollY + 144 - 256));\n        canvasContext.lineWidth = lineWidth;\n        canvasContext.strokeStyle = strokeStyle;\n        canvasContext.stroke();\n      }\n\n      // Bottom right corner\n      if (scrollX + 160 > 256 && scrollY + 144 > 256) {\n        canvasContext.rect(0, 0, (scrollX + 160 - 256), (scrollY + 144 - 256));\n        canvasContext.lineWidth = lineWidth;\n        canvasContext.strokeStyle = strokeStyle;\n        canvasContext.stroke();\n      }\n\n      resolve();\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"WasmBoyBackgroundMap\" width=\"256\" height=\"256\">\n        </canvas>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/wasmboyBackgroundMap.js","import { Component } from 'preact';\nimport Promise from 'promise-polyfill';\n\nconst canvasId = 'WasmBoyTileData';\nconst tileDataXPixels = 0x1F * 8;\nconst tileDataYPixels = 0x17 * 8;\n\nexport class WasmBoyTileData extends Component {\n  constructor(props) {\n\t\tsuper(props);\n  }\n\n  componentDidMount() {\n    const canvasElement = document.getElementById(canvasId);\n    const canvasContext = canvasElement.getContext('2d');\n    const canvasImageData = canvasContext.createImageData(tileDataXPixels, tileDataYPixels);\n\n    // Add some css for smooth 8-bit canvas scaling\n    // https://stackoverflow.com/questions/7615009/disable-interpolation-when-scaling-a-canvas\n    // https://caniuse.com/#feat=css-crisp-edges\n    canvasElement.style = `\n      image-rendering: optimizeSpeed;\n      image-rendering: -moz-crisp-edges;\n      image-rendering: -webkit-optimize-contrast;\n      image-rendering: -o-crisp-edges;\n      image-rendering: pixelated;\n      -ms-interpolation-mode: nearest-neighbor;\n    `;\n\n    // Fill the canvas with a blank screen\n    // using client width since we are not requiring a width and height oin the canvas\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // TODO: Mention respopnsive canvas scaling in the docs\n    canvasContext.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n    const updateCanvas = () => {\n      this.updateCanvas(canvasElement, canvasContext, canvasImageData).then(() => {\n        setTimeout(() => {\n          updateCanvas();\n        }, 500);\n      });\n    }\n    updateCanvas();\n  }\n\n  updateCanvas(canvasElement, canvasContext, canvasImageData) {\n    return new Promise((resolve) => {\n\n      // Dont update for the following\n      if(!this.props.wasmboy.wasmByteMemory ||\n        !this.props.wasmboy.wasmInstance ||\n        !this.props.wasmboy.ready ||\n        this.props.wasmboy.paused ||\n        !this.props.shouldUpdate) {\n        resolve();\n        return;\n      }\n\n      this.props.wasmboy.wasmInstance.exports.drawTileDataToWasmMemory();\n\n      const imageDataArray = new Uint8ClampedArray(tileDataYPixels * tileDataXPixels * 4);\n      const rgbColor = new Uint8ClampedArray(3);\n\n      for(let y = 0; y < tileDataYPixels; y++) {\n        for (let x = 0; x < tileDataXPixels; x++) {\n\n          // Each color has an R G B component\n          let pixelStart = ((y * tileDataXPixels) + x) * 3;\n\n          for (let color = 0; color < 3; color++) {\n            rgbColor[color] = this.props.wasmboy.wasmByteMemory[\n              this.props.wasmboy.wasmInstance.exports.tileDataMap + pixelStart + color\n            ];\n          }\n\n          // Doing graphics using second answer on:\n          // https://stackoverflow.com/questions/4899799/whats-the-best-way-to-set-a-single-pixel-in-an-html5-canvas\n          // Image Data mapping\n          const imageDataIndex = (x + (y * tileDataXPixels)) * 4;\n\n          imageDataArray[imageDataIndex] = rgbColor[0];\n          imageDataArray[imageDataIndex + 1] = rgbColor[1];\n          imageDataArray[imageDataIndex + 2] = rgbColor[2];\n          // Alpha, no transparency\n          imageDataArray[imageDataIndex + 3] = 255;\n        }\n      }\n\n      // Add our new imageData\n      for(let i = 0; i < imageDataArray.length; i++) {\n        canvasImageData.data[i] = imageDataArray[i];\n      }\n\n      canvasContext.beginPath();\n      canvasContext.clearRect(0, 0, tileDataXPixels, tileDataYPixels);\n      canvasContext.putImageData(canvasImageData, 0, 0);\n\n      resolve();\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas id={canvasId} width={tileDataXPixels} height={tileDataYPixels}>\n        </canvas>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/wasmboyTileData.js","import { Component } from 'preact';\nimport { NumberBaseTable } from './numberBaseTable';\nimport { WasmBoyBackgroundMap } from './wasmboyBackgroundMap';\nimport { WasmBoyTileData } from './wasmboyTileData';\n\n// Function to get a value in gameboy memory, to wasmboy memory\nconst getWasmBoyOffsetFromGameBoyOffset = (gameboyOffset, wasmboy) => {\n  return wasmboy.wasmInstance.exports.getWasmBoyOffsetFromGameBoyOffset(gameboyOffset);\n}\n\nlet autoUpdateValueTableId = false;\n\nexport class WasmBoyDebugger extends Component {\n\n  constructor() {\n\t\tsuper();\n\t\t// set our state to if we are initialized or not\n\t\tthis.state = {\n      showValueTable: false,\n      autoUpdateValueTable: false,\n      showBackgroundMap: false,\n      showTileData: false,\n      breakPoint: \"40\",\n      opcodesToRun: 2000,\n      valueTable: {\n        cpu: {},\n        ppu: {},\n        apu: {},\n        timers: {},\n        interrupts: {}\n      }\n    };\n\t}\n\n  // Function to simply flip a boolean on the state\n  flipShowStatus(stateKey, wasmboy) {\n    const newState = Object.assign({}, this.state);\n    newState[stateKey] = !newState[stateKey];\n    this.setState(newState);\n\n    // Fireoff a a raf for updating the value table\n    if (stateKey === 'autoUpdateValueTable') {\n      if(this.state.autoUpdateValueTable) {\n        const autoUpdateValueTable = () => {\n          this.updateValueTable(wasmboy);\n          if(autoUpdateValueTableId) {\n            autoUpdateValueTableId = requestAnimationFrame(() => {\n              autoUpdateValueTable();\n            });\n          }\n        }\n        autoUpdateValueTableId = true;\n        autoUpdateValueTable();\n      } else {\n        cancelAnimationFrame(autoUpdateValueTable);\n        autoUpdateValueTableId = false;\n      }\n    }\n  }\n\n  // Function to return the hidden class deoending oin a boolean in state\n  getStateClass(stateKey) {\n    return this.state[stateKey] ? '' : 'hide';\n  }\n\n  // Function to runa  single opcode\n  stepOpcode(wasmboy, wasmboyGraphics, skipDebugOutput) {\n    return new Promise((resolve) => {\n      const numberOfCycles = wasmboy.wasmInstance.exports.emulationStep();\n\n      if(numberOfCycles <= 0) {\n        console.error('Opcode not recognized! Check wasm logs.');\n        this.updateDebugInfo(wasmboy);\n        throw new Error();\n      }\n\n      if(skipDebugOutput) {\n        resolve();\n        return;\n      }\n      wasmboyGraphics.renderFrame();\n      this.updateValueTable(wasmboy);\n\n      resolve();\n    });\n  }\n\n  // Function to run a specifed number of opcodes for faster stepping\n  runNumberOfOpcodes(wasmboy, wasmboyGraphics, numberOfOpcodes, breakPoint, skipDebugOutput) {\n    // Keep stepping until highest opcode increases\n    let opcodesToRun = this.state.opcodesToRun;\n    if(numberOfOpcodes) {\n      opcodesToRun = numberOfOpcodes\n    }\n\n    return new Promise((resolve) => {\n\n      let opcodesRan = 0;\n\n      const runOpcode = () => {\n        this.stepOpcode(wasmboy, wasmboyGraphics, true).then(() => {\n          if(breakPoint && breakPoint === wasmboy.wasmInstance.exports.getProgramCounter()) {\n            resolve();\n            return;\n          }\n\n          if (opcodesRan < opcodesToRun) {\n            opcodesRan++;\n            runOpcode();\n            return;\n          }\n\n          if(skipDebugOutput) {\n            resolve();\n            return;\n          }\n\n          wasmboyGraphics.renderFrame();\n          this.updateValueTable(wasmboy);\n\n          resolve();\n        });\n      }\n      runOpcode();\n    });\n  }\n\n  // Function to keep running opcodes until a breakpoint is reached\n  breakPoint(wasmboy, wasmboyGraphics, skipInitialStep) {\n    // Set our opcode breakpoint\n    const breakPoint = parseInt(this.state.breakPoint, 16);\n\n    let initialStepPromise = Promise.resolve();\n    if(!skipInitialStep) {\n      initialStepPromise = this.runNumberOfOpcodes(wasmboy, wasmboyGraphics, 1, breakPoint);\n    }\n\n    initialStepPromise.then(() => {\n      if(wasmboy.wasmInstance.exports.getProgramCounter() !== breakPoint) {\n        requestAnimationFrame(() => {\n          this.runNumberOfOpcodes(wasmboy, wasmboyGraphics, 2000 + Math.floor(Math.random() * 10), breakPoint, true).then(() => {\n            wasmboyGraphics.renderFrame();\n            this.updateValueTable(wasmboy);\n            this.breakPoint(wasmboy, wasmboyGraphics, true);\n          });\n        });\n      } else {\n          console.log('Reached Breakpoint, that satisfies test inside runNumberOfOpcodes');\n          wasmboyGraphics.renderFrame();\n          this.updateValueTable(wasmboy);\n      }\n    });\n  }\n\n  logWasmBoyMemory(wasmBoy) {\n    console.log(`[WasmBoy Debugger] Memory:`, wasmBoy.wasmByteMemory);\n  }\n\n  updateValueTable(wasmboy) {\n\n    // Create our new valueTable object\n    const valueTable = {\n      cpu: {},\n      ppu: {},\n      apu: {},\n      timers: {},\n      interrupts: {}\n    };\n\n    // Update CPU valueTable\n    valueTable.cpu['Program Counter (PC)'] = wasmboy.wasmInstance.exports.getProgramCounter();\n    valueTable.cpu['Opcode at PC'] = wasmboy.wasmInstance.exports.getOpcodeAtProgramCounter();\n    valueTable.cpu['Stack Pointer'] = wasmboy.wasmInstance.exports.getStackPointer();\n    valueTable.cpu['Register A'] = wasmboy.wasmInstance.exports.getRegisterA();\n    valueTable.cpu['Register F'] = wasmboy.wasmInstance.exports.getRegisterF();\n    valueTable.cpu['Register B'] = wasmboy.wasmInstance.exports.getRegisterB();\n    valueTable.cpu['Register C'] = wasmboy.wasmInstance.exports.getRegisterC();\n    valueTable.cpu['Register D'] = wasmboy.wasmInstance.exports.getRegisterD();\n    valueTable.cpu['Register E'] = wasmboy.wasmInstance.exports.getRegisterE();\n    valueTable.cpu['Register H'] = wasmboy.wasmInstance.exports.getRegisterH();\n    valueTable.cpu['Register L'] = wasmboy.wasmInstance.exports.getRegisterL();\n    valueTable.cpu = Object.assign({}, valueTable.cpu);\n\n    // Update PPU valueTable\n    valueTable.ppu['Scanline Register (LY) - 0xFF44'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF44, wasmboy)];\n    valueTable.ppu['LCD Status (STAT) - 0xFF41'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF41, wasmboy)];\n    valueTable.ppu['LCD Control (LCDC) - 0xFF40'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF40, wasmboy)];\n    valueTable.ppu['Scroll X - 0xFF43'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF43, wasmboy)];\n    valueTable.ppu['Scroll Y - 0xFF42'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF42, wasmboy)];\n    valueTable.ppu['Window X - 0xFF4B'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF4B, wasmboy)];\n    valueTable.ppu['Window Y - 0xFF4A'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF4A, wasmboy)];\n\n    // Update Timers valueTable\n    valueTable.timers['TIMA - 0xFF05'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF05, wasmboy)];\n    valueTable.timers['TMA - 0xFF06'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF06, wasmboy)];\n    valueTable.timers['TIMC/TAC - 0xFF07'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF07, wasmboy)];\n    valueTable.timers['DIV/Divider Register - 0xFF04'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF04, wasmboy)];\n\n    // Update interrupts valueTable\n    // TODO: Interrupot master switch\n    // if(wasmboy.wasmInstance.exports.areInterruptsEnabled()) {\n    //   valueTable.interrupts['Interrupt Master Switch'] = 0x01;\n    // } else {\n    //   valueTable.interrupts['Interrupt Master Switch'] = 0x00;\n    // }\n    valueTable.interrupts['IE/Interrupt Enabled - 0xFFFF'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFFFF, wasmboy)];\n    valueTable.interrupts['IF/Interrupt Request - 0xFF0F'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFF0F, wasmboy)];\n\n    // Update APU valueTable\n    // Add the register valueTable for our 4 channels\n    for (let channelNum = 1; channelNum <= 4; channelNum++) {\n      for (let registerNum = 0; registerNum < 5; registerNum++) {\n        let registerAddress = 0xFF10 + (5 * (channelNum - 1)) + registerNum;\n        valueTable.apu[`Channel ${channelNum} - NR${channelNum}${registerNum} - 0x${(registerAddress).toString(16).toUpperCase()}`] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(registerAddress, wasmboy)];\n      }\n    }\n    valueTable.interrupts['IE/Interrupt Enabled - 0xFFFF'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFFFF, wasmboy)];\n    valueTable.interrupts['IE/Interrupt Enabled - 0xFFFF'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFFFF, wasmboy)];\n    valueTable.interrupts['IE/Interrupt Enabled - 0xFFFF'] = wasmboy.wasmByteMemory[getWasmBoyOffsetFromGameBoyOffset(0xFFFF, wasmboy)];\n\n    // Clone our valueTable, that it is immutable and will cause change detection\n    const newState = Object.assign({}, this.state);\n    newState.valueTable = valueTable\n    this.setState(newState);\n  }\n\n\n\n\trender(props) {\n\t\treturn (\n      <div>\n          <h1>Debugger</h1>\n\n          <h2>Control Flow Actions:</h2>\n\n          <div class=\"debuggerAction\">\n            <button onclick={() => {this.stepOpcode(props.wasmboy, props.wasmboyGraphics).then(() => {})}}>Step Opcode</button>\n          </div>\n\n          <div class=\"debuggerAction\">\n            <input type=\"number\"\n             value={this.state.opcodesToRun }\n             onChange={(evt) => { this.state.opcodesToRun = evt.target.value; }} />\n            <button onclick={() => {this.runNumberOfOpcodes(props.wasmboy, props.wasmboyGraphics).then(() => {})}}>Run number of opcodes</button>\n          </div>\n\n          <div class=\"debuggerAction\">\n            Breakpoint Line Number: 0x<input type=\"string\"\n             value={this.state.breakPoint }\n             onChange={(evt) => { this.state.breakPoint = evt.target.value; }} />\n            <button onclick={() => {this.breakPoint(props.wasmboy, props.wasmboyGraphics)}}>Run To Breakpoint</button>\n          </div>\n\n          <h2>Wasmboy State Actions:</h2>\n\n          <div class=\"debuggerAction\">\n            <button onclick={() => {this.logWasmBoyMemory(props.wasmboy)}}>Log Memory to console</button>\n          </div>\n\n          <div class=\"debuggerAction\">\n            <button onclick={() => {props.wasmboyAudio.debugSaveCurrentAudioBufferToWav()}}>Save Current Audio buffer to wav</button>\n          </div>\n\n          <div class=\"debuggerAction\">\n            <button onclick={() => { this.state.showValueTable = true; this.updateValueTable(props.wasmboy)}}>Update Value Table</button>\n          </div>\n\n          <h2>Debugger Options:</h2>\n\n          <div>\n            <label for=\"showValueTable\">Show Value Table</label>\n            <input\n              id=\"showValueTable\"\n              type=\"checkbox\"\n              checked={ this.state.showValueTable }\n              onChange={ () => { this.flipShowStatus('showValueTable'); this.updateValueTable(props.wasmboy) } } />\n          </div>\n\n          <div>\n            <label for=\"autoUpdateValueTable\">Auto Update Value Table</label>\n            <input\n              id=\"autoUpdateValueTable\"\n              type=\"checkbox\"\n              checked={ this.state.autoUpdateValueTable }\n              onChange={ () => { this.state.showValueTable = true; this.flipShowStatus('autoUpdateValueTable', props.wasmboy); } } />\n          </div>\n\n          <div>\n            <label for=\"showBackgroundMap\">Show Background Map</label>\n            <input\n              id=\"showBackgroundMap\"\n              type=\"checkbox\"\n              checked={ this.state.showBackgroundMap }\n              onChange={ () => { this.flipShowStatus('showBackgroundMap'); } } />\n          </div>\n\n          <div>\n            <label for=\"showTileData\">Show Tile Data</label>\n            <input\n              id=\"showTileData\"\n              type=\"checkbox\"\n              checked={ this.state.showTileData }\n              onChange={ () => { this.flipShowStatus('showTileData'); } } />\n          </div>\n\n          <div className={ this.getStateClass('showValueTable') }>\n            <h2>Value Table</h2>\n\n            <h3>Cpu Info:</h3>\n            <a href=\"http://gbdev.gg8.se/wiki/articles/Pan_Docs#CPU_Specifications\" target=\"blank\"><i>Reference Doc</i></a>\n            <NumberBaseTable object={this.state.valueTable.cpu}></NumberBaseTable>\n\n            <h3>PPU Info:</h3>\n            <a href=\"http://gbdev.gg8.se/wiki/articles/Video_Display\" target=\"blank\"><i>Reference Doc</i></a>\n            <NumberBaseTable object={this.state.valueTable.ppu}></NumberBaseTable>\n\n            <h3>APU Info:</h3>\n            <a href=\"http://gbdev.gg8.se/wiki/articles/Gameboy_sound_hardware\" target=\"blank\"><i>Reference Doc</i></a>\n            <NumberBaseTable object={this.state.valueTable.apu}></NumberBaseTable>\n\n            <h3>Timer Info:</h3>\n            <a href=\"http://gbdev.gg8.se/wiki/articles/Timer_and_Divider_Registers\" target=\"blank\"><i>Reference Doc</i></a>\n            <NumberBaseTable object={this.state.valueTable.timers}></NumberBaseTable>\n\n            <h3>Interrupt Info:</h3>\n            <a href=\"http://gbdev.gg8.se/wiki/articles/Interrupts\" target=\"blank\"><i>Reference Doc</i></a>\n            <NumberBaseTable object={this.state.valueTable.interrupts}></NumberBaseTable>\n          </div>\n\n          <div className={ this.getStateClass('showBackgroundMap') } >\n            <WasmBoyBackgroundMap\n              wasmboy={props.wasmboy}\n              shouldUpdate={this.state.showBackgroundMap}\n              getWasmBoyOffsetFromGameBoyOffset={getWasmBoyOffsetFromGameBoyOffset}></WasmBoyBackgroundMap>\n          </div>\n\n          <div className={ this.getStateClass('showTileData') } >\n            <WasmBoyTileData\n              wasmboy={props.wasmboy}\n              shouldUpdate={this.state.showTileData}\n              getWasmBoyOffsetFromGameBoyOffset={getWasmBoyOffsetFromGameBoyOffset}></WasmBoyTileData>\n          </div>\n      </div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/wasmboyDebugger.js","import { Component } from 'preact';\n\nexport class WasmBoyOptions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // Add all of our default options from the props to our component state\n    const newState = Object.assign({}, this.state);\n    Object.keys(this.props.defaultOptions).forEach((optionKey) => {\n      newState[optionKey] = this.props.defaultOptions[optionKey]\n    });\n    this.setState(newState);\n  }\n\n  setStateKey(stateKey, value) {\n    const newState = Object.assign({}, this.state);\n    newState[stateKey] = value;\n    this.setState(newState);\n  }\n\n  // Simply resets wasmboy with the current options\n  applyOptions() {\n    this.props.wasmBoy.reset(this.state);\n  }\n\n  render() {\n\n    // Create an array of all of our configurable options\n    let options = [];\n    Object.keys(this.state).forEach((stateOptionKey) => {\n\n      // Boolean Checkboxes\n      if (typeof(this.state[stateOptionKey]) === typeof(true)) {\n        options.push((\n          <div>\n            <label for={stateOptionKey}>{stateOptionKey}</label>\n            <input\n              id={stateOptionKey}\n              type=\"checkbox\"\n              checked={ this.state[stateOptionKey] }\n              onChange={ () => { this.setStateKey(stateOptionKey, !this.state[stateOptionKey]); } } />\n          </div>\n        ));\n      }\n\n      // Number Input Fields\n      if (typeof(this.state[stateOptionKey]) === \"number\") {\n        options.push((\n          <div>\n            <label>\n              {stateOptionKey}\n              <input type=\"number\" name={stateOptionKey} value={this.state[stateOptionKey]} onChange={(event) => {this.setStateKey(stateOptionKey, parseFloat(event.target.value))}} />\n            </label>\n          </div>\n        ));\n      }\n    });\n\n    return (\n      <div class=\"wasmboy__options\">\n        <h1>Options:</h1>\n        <div class=\"wasmboy__options__info\">\n          <i>Applying options will reset any currently running game without saving. It is reccomended you apply your options before loading your game. Information on the <a href=\"https://github.com/torch2424/wasmBoy/blob/master/test/performance/results.md\" target=\"_blank\">effectiveness of performance improving options can be found here</a></i>\n        </div>\n\n        <div class=\"wasmboy__options__inputs\">\n          {options}\n        </div>\n\n        <button class=\"wasmboy__options__apply\" onClick={() => {this.applyOptions()}}>Apply</button>\n      </div>\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/wasmboyOptions.js","export * from './wasmboySystemControls';\nexport * from './wasmboyDebugger';\nexport * from './wasmboyOptions';\n\n\n\n// WEBPACK FOOTER //\n// ./debugger/index.js","import './style';\nimport { Component } from 'preact';\nimport { WasmBoy, WasmBoyGraphics, WasmBoyAudio, WasmBoyController, WasmBoyMemory } from './lib/wasmboy.js';\nimport { WasmBoyDebugger, WasmBoySystemControls, WasmBoyOptions } from './debugger/index';\n\n// Old Perf Options\n// WasmBoy.initialize(canvasElement, {\n// \tframeSkip: 1,\n// \taudioBatchProcessing: true,\n// \ttimersBatchProcessing: true,\n// \taudioAccumulateSamples: true,\n// \tgraphicsDisableScanlineRendering: true\n// });\n\n//const defaultGamePath = './test/accuracy/testroms/blargg/cpu_instrs.gb';\nconst defaultGamePath = './games/linksawakening.gb';\n\nconst wasmBoyDefaultOptions = {\n\tisGbcEnabled: true,\n\tisAudioEnabled: true,\n\tframeSkip: 1,\n\taudioBatchProcessing: true,\n\ttimersBatchProcessing: false,\n\taudioAccumulateSamples: true,\n\tgraphicsBatchProcessing: false,\n\tgraphicsDisableScanlineRendering: false,\n\ttileRendering: true,\n\ttileCaching: true,\n\tgameboySpeed: 1.0,\n\tsaveStateCallback: (saveStateObject) => {\n\t\t// Function called everytime a savestate occurs\n\t\t// Used by the WasmBoySystemControls to show screenshots on save states\n\t\tsaveStateObject.screenshotCanvasDataURL = WasmBoyGraphics.canvasElement.toDataURL();\n\t\treturn saveStateObject;\n\t}\n};\n\n// Our canvas element\nlet canvasElement = undefined;\n\nexport default class App extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tshowDebugger: false,\n\t\t\tshowOptions: false\n\t\t}\n\t}\n\n\t// Using componentDidMount to wait for the canvas element to be inserted in DOM\n\tcomponentDidMount() {\n\t\t// Get our canvas element\n\t\tcanvasElement = document.querySelector(\".wasmboy__canvas-container__canvas\");\n\n\t\t// Load our game\n\t\tWasmBoy.initialize(canvasElement, wasmBoyDefaultOptions);\n\n\t\t// Add our touch inputs\n\t\t// Add our touch inputs\n\t\tconst dpadElement = document.getElementById('gamepadDpad');\n\t\tconst startElement = document.getElementById('gamepadStart');\n\t\tconst selectElement = document.getElementById('gamepadSelect');\n\t\tconst aElement = document.getElementById('gamepadA');\n\t\tconst bElement = document.getElementById('gamepadB');\n\n\t\tWasmBoyController.addTouchInput('UP', dpadElement, 'DPAD', 'UP');\n\t\tWasmBoyController.addTouchInput('RIGHT', dpadElement, 'DPAD', 'RIGHT');\n\t\tWasmBoyController.addTouchInput('DOWN', dpadElement, 'DPAD', 'DOWN');\n\t\tWasmBoyController.addTouchInput('LEFT', dpadElement, 'DPAD', 'LEFT');\n\t\tWasmBoyController.addTouchInput('A', aElement, 'BUTTON');\n\t\tWasmBoyController.addTouchInput('B', bElement, 'BUTTON');\n\t\tWasmBoyController.addTouchInput('START', startElement, 'BUTTON');\n\t\tWasmBoyController.addTouchInput('SELECT', selectElement, 'BUTTON');\n\n\t\t//WasmBoy.loadGame('./test/testroms/blargg/cpu_instrs.gb')\n\t\tWasmBoy.loadGame(defaultGamePath)\n\t\t.then(() => {\n\t\t\tconsole.log('Wasmboy Ready!');\n\t\t}).catch((error) => {\n\t\t\tconsole.log('Load Game Error:', error);\n\t\t});\n\t}\n\n\trender() {\n\n\t\t// Optionally render the options\n\t\tlet optionsComponent = (\n\t\t\t<div></div>\n\t\t)\n\t\tif (this.state.showOptions) {\n\t\t\toptionsComponent = (\n\t\t\t\t<div className={ \"wasmboy__options\" }>\n\t\t\t\t\t<WasmBoyOptions wasmBoy={WasmBoy} defaultOptions={wasmBoyDefaultOptions}></WasmBoyOptions>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\t// optionally render the debugger\n\t\tlet debuggerComponent = (\n\t\t\t<div></div>\n\t\t)\n\t\tif (this.state.showDebugger) {\n\t\t\tdebuggerComponent = (\n\t\t\t\t<div className={ \"wasmboy__debugger\" }>\n\t\t\t\t\t<WasmBoyDebugger wasmboy={WasmBoy} wasmboyGraphics={WasmBoyGraphics} wasmboyAudio={WasmBoyAudio}></WasmBoyDebugger>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>WasmBoy Demo</h1>\n\t\t\t\t<div style=\"text-align: center\">\n          <label for=\"showOptions\">Show Options</label>\n          <input\n            id=\"showOptions\"\n            type=\"checkbox\"\n            checked={ this.state.showOptions }\n            onChange={ () => {\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, this.state);\n\t\t\t\t\t\t\t\tnewState.showOptions = !newState.showOptions;\n\t\t\t\t\t\t\t\tthis.setState(newState);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} />\n        </div>\n\n\t\t\t\t{optionsComponent}\n\n\t\t\t\t<div style=\"text-align: center\">\n          <label for=\"showDebugger\">Show Debugger</label>\n          <input\n            id=\"showDebugger\"\n            type=\"checkbox\"\n            checked={ this.state.showDebugger }\n            onChange={ () => {\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, this.state);\n\t\t\t\t\t\t\t\tnewState.showDebugger = !newState.showDebugger;\n\t\t\t\t\t\t\t\tthis.setState(newState);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} />\n        </div>\n\n\t\t\t\t{debuggerComponent}\n\n\t\t\t\t<div class=\"wasmboy__systemControls\">\n\t\t\t\t\t<WasmBoySystemControls wasmboy={WasmBoy} wasmboyMemory={WasmBoyMemory}></WasmBoySystemControls>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"wasmboy__canvas-container\">\n    \t\t\t<canvas className=\"wasmboy__canvas-container__canvas\">\n          </canvas>\n        </div>\n\n\t\t\t\t<div class=\"wasmboy__gamepad\">\n\n\t\t\t\t\t{/* DPAD */}\n\t\t\t\t\t<svg id=\"gamepadDpad\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t    <path d=\"M15 7.5V2H9v5.5l3 3 3-3zM7.5 9H2v6h5.5l3-3-3-3zM9 16.5V22h6v-5.5l-3-3-3 3zM16.5 9l-3 3 3 3H22V9h-5.5z\"/>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t{/* Start */}\n\t\t\t\t\t<svg id=\"gamepadStart\" height=\"24\" viewBox=\"6 6 12 12\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M19 13H5v-2h14v2z\"/>\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t\t\t<text x=\"21\" y=\"55\" transform=\"scale(0.325)\">Start</text>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t{/* Select */}\n\t\t\t\t\t<svg id=\"gamepadSelect\" height=\"24\" viewBox=\"6 6 12 12\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M19 13H5v-2h14v2z\"/>\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t\t\t<text x=\"16\" y=\"55\" transform=\"scale(0.325)\">Select</text>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t{/* A */}\n\t\t\t\t\t<svg id=\"gamepadA\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t\t\t<text x=\"7.5\" y=\"16.25\">A</text>\n\t\t\t\t\t</svg>\n\n\t\t\t\t\t{/* B */}\n\t\t\t\t\t<svg id=\"gamepadB\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n\t\t\t\t\t    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t\t\t<text x=\"7.5\" y=\"17.25\">B</text>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('preact')) :\n  typeof define === 'function' && define.amd ? define(['preact'], factory) :\n  (global.preactPortal = factory(global.preact));\n}(this, (function (preact) { 'use strict';\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Portal = function (_Component) {\n\tinherits(Portal, _Component);\n\n\tfunction Portal() {\n\t\tclassCallCheck(this, Portal);\n\t\treturn possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t}\n\n\tPortal.prototype.componentDidUpdate = function componentDidUpdate(props) {\n\t\tfor (var i in props) {\n\t\t\tif (props[i] !== this.props[i]) {\n\t\t\t\treturn setTimeout(this.renderLayer);\n\t\t\t}\n\t\t}\n\t};\n\n\tPortal.prototype.componentDidMount = function componentDidMount() {\n\t\tthis.isMounted = true;\n\t\tthis.renderLayer = this.renderLayer.bind(this);\n\t\tthis.renderLayer();\n\t};\n\n\tPortal.prototype.componentWillUnmount = function componentWillUnmount() {\n\t\tthis.renderLayer(false);\n\t\tthis.isMounted = false;\n\t\tif (this.remote) this.remote.parentNode.removeChild(this.remote);\n\t};\n\n\tPortal.prototype.findNode = function findNode(node) {\n\t\treturn typeof node === 'string' ? document.querySelector(node) : node;\n\t};\n\n\tPortal.prototype.renderLayer = function renderLayer() {\n\t\tvar show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n\t\tif (!this.isMounted) return;\n\n\t\tif (this.props.into !== this.intoPointer) {\n\t\t\tthis.intoPointer = this.props.into;\n\t\t\tif (this.into && this.remote) {\n\t\t\t\tthis.remote = preact.render(preact.h(PortalProxy, null), this.into, this.remote);\n\t\t\t}\n\t\t\tthis.into = this.findNode(this.props.into);\n\t\t}\n\n\t\tthis.remote = preact.render(preact.h(\n\t\t\tPortalProxy,\n\t\t\t{ context: this.context },\n\t\t\tshow && this.props.children || null\n\t\t), this.into, this.remote);\n\t};\n\n\tPortal.prototype.render = function render() {\n\t\treturn null;\n\t};\n\n\treturn Portal;\n}(preact.Component);\n\nvar PortalProxy = function (_Component2) {\n\tinherits(PortalProxy, _Component2);\n\n\tfunction PortalProxy() {\n\t\tclassCallCheck(this, PortalProxy);\n\t\treturn possibleConstructorReturn(this, _Component2.apply(this, arguments));\n\t}\n\n\tPortalProxy.prototype.getChildContext = function getChildContext() {\n\t\treturn this.props.context;\n\t};\n\n\tPortalProxy.prototype.render = function render(_ref) {\n\t\tvar children = _ref.children;\n\n\t\treturn children && children[0] || null;\n\t};\n\n\treturn PortalProxy;\n}(preact.Component);\n\nreturn Portal;\n\n})));\n//# sourceMappingURL=preact-portal.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/preact-portal/dist/preact-portal.js","// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/performance-now/lib/performance-now.js","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/idb/lib/idb.js","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/raf/index.js","var buffer = new ArrayBuffer(38818);var uint8 = new Uint8Array(buffer);uint8.sethis file will not run on it's own\n\nconst {\n  Module,\n  instantiate,\n  Memory,\n  Table\n} = WebAssembly;\n\nconst WebAssemblyModule = function(deps = {\n  'global': {},\n  'env': {\n    'memory': new Memory({initial: 10, limit: 100}),\n    'table': new Table({initial: 0, element: 'anyfunc'})\n  }\n}) {\n  return instantiate(buffer, deps);\n}\n\nmodule.exports = WebAssemblyModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./dist/wasm/index.untouched.wasm\n// module id = toTQ\n// module chunks = 0"],"sourceRoot":""}