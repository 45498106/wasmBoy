{"version":3,"file":"wasmboy.wasm.worker.js","sources":["../../lib/worker/util.js","../../lib/worker/workerapi.js","../../lib/worker/constants.js","../../lib/worker/smartworker.js","../../lib/wasmboy/worker/graphics/onmessage.js","../../lib/wasmboy/worker/audio/onmessage.js","../../lib/wasmboy/worker/controller/onmessage.js","../../lib/wasmboy/worker/memory/rom.js","../../lib/wasmboy/worker/memory/ram.js","../../lib/wasmboy/worker/memory/header.js","../../lib/wasmboy/worker/memory/gameboymemory.js","../../lib/wasmboy/worker/memory/palettememory.js","../../lib/wasmboy/worker/memory/internalstate.js","../../lib/wasmboy/worker/memory/onmessage.js","../core/getWasmBoyWasmCore.esm.js","../../lib/common/common.js","../../lib/wasmboy/worker/timestamp.js","../../lib/wasmboy/worker/update.js","../../lib/wasmboy/worker/wasmboy.worker.js"],"sourcesContent":["export function getEventData(event) {\n  if (event.data) {\n    return event.data;\n  }\n\n  return event;\n}\n\nexport const isInBrowser = typeof self !== 'undefined';\n\n// Function to read a base64 string as a buffer\nexport function readBase64String(base64String) {\n  if (isInBrowser) {\n    return base64String;\n  } else {\n    return readBase64Buffer(base64String).toString('utf8');\n  }\n}\n\nexport function readBase64Buffer(base64String) {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n}\n","// Isomorphic worker api to be imported by web workers\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n// Initilize some of our isomorphic values\nimport { isInBrowser } from './util';\n\nlet parentPort;\nif (!isInBrowser) {\n  parentPort = require('worker_threads').parentPort;\n}\n\n// https://nodejs.org/api/worker_threads.html#worker_threads_worker_postmessage_value_transferlist\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\nexport function postMessage(message, transferArray) {\n  // Can't bind parentPort.postMessage, so we need to kinda copy code here :p\n  if (isInBrowser) {\n    self.postMessage(message, transferArray);\n  } else {\n    parentPort.postMessage(message, transferArray);\n  }\n}\n\n// https://nodejs.org/api/worker_threads.html#worker_threads_worker_parentport\n// https://developer.mozilla.org/en-US/docs/Web/API/Worker/onmessage\nexport function onMessage(callback, port) {\n  if (!callback) {\n    console.error('workerapi: No callback was provided to onMessage!');\n  }\n\n  // If we passed a port, use that\n  if (port) {\n    if (isInBrowser) {\n      // We are in the browser\n      port.onmessage = callback;\n    } else {\n      // We are in Node\n      port.on('message', callback);\n    }\n    return;\n  }\n\n  if (isInBrowser) {\n    // We are in the browser\n    self.onmessage = callback;\n  } else {\n    // We are in Node\n    parentPort.on('message', callback);\n  }\n}\n","export const WORKER_MESSAGE_TYPE = {\n  CONNECT: 'CONNECT',\n  INSTANTIATE_WASM: 'INSTANTIATE_WASM',\n  CLEAR_MEMORY: 'CLEAR_MEMORY',\n  CLEAR_MEMORY_DONE: 'CLEAR_MEMORY_DONE',\n  GET_MEMORY: 'GET_MEMORY',\n  SET_MEMORY: 'SET_MEMORY',\n  SET_MEMORY_DONE: 'SET_MEMORY_DONE',\n  GET_CONSTANTS: 'GET_CONSTANTS',\n  GET_CONSTANTS_DONE: 'GET_CONSTANTS_DONE',\n  CONFIG: 'CONFIG',\n  RESET_AUDIO_QUEUE: 'RESET_AUDIO_QUEUE',\n  PLAY: 'PLAY',\n  PAUSE: 'PAUSE',\n  UPDATED: 'UPDATED',\n  CRASHED: 'CRASHED',\n  SET_JOYPAD_STATE: 'SET_JOYPAD_STATE',\n  AUDIO_LATENCY: 'AUDIO_LATENCY',\n  RUN_WASM_EXPORT: 'RUN_WASM_EXPORT',\n  GET_WASM_MEMORY_SECTION: 'GET_WASM_MEMORY_SECTION',\n  GET_WASM_CONSTANT: 'GET_WASM_CONSTANT'\n};\n\nexport const WORKER_ID = {\n  LIB: 'LIB',\n  GRAPHICS: 'GRAPHICS',\n  MEMORY: 'MEMORY',\n  CONTROLLER: 'CONTROLLER',\n  AUDIO: 'AUDIO'\n};\n\nexport const MEMORY_TYPE = {\n  CARTRIDGE_RAM: 'CARTRIDGE_RAM',\n  CARTRIDGE_ROM: 'CARTRIDGE_ROM',\n  CARTRIDGE_HEADER: 'CARTRIDGE_HEADER',\n  GAMEBOY_MEMORY: 'GAMEBOY_MEMORY',\n  PALETTE_MEMORY: 'PALETTE_MEMORY',\n  INTERNAL_STATE: 'INTERNAL_STATE'\n};\n","// Smarter workers.\n// Workers with ids, pub sub, etc...\n// https://medium.com/dailyjs/threads-in-node-10-5-0-a-practical-intro-3b85a0a3c953\n\n/*ROLLUP_REPLACE_NODE\nconst { Worker } = require('worker_threads');\nROLLUP_REPLACE_NODE*/\n\nimport { getEventData, readBase64String } from './util';\n\n// Generate ids. Use a counter to help against possible collisions.\nlet idCounter = 0;\nconst generateId = () => {\n  const randomId = Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, '')\n    .substr(2, 10);\n  idCounter++;\n  const id = `${randomId}-${idCounter}`;\n  if (idCounter > 100000) {\n    idCounter = 0;\n  }\n  return id;\n};\n\nexport function getSmartWorkerMessage(message, messageId, workerId) {\n  if (!messageId) {\n    messageId = generateId();\n  }\n  return {\n    workerId,\n    messageId,\n    message\n  };\n}\n\nexport class SmartWorker {\n  constructor(workerUrl, id) {\n    this.id = generateId();\n    if (id) {\n      this.id = id;\n    }\n    this.messageListeners = [];\n\n    /*ROLLUP_REPLACE_BROWSER\n    \n    // Can't load base63 data string directly because safari\n    // https://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\n    let workerJs = atob(workerUrl.split(',')[1]);\n    let blob;\n    try {\n      blob = new Blob([workerJs], {type: 'application/javascript'});\n    } catch (e) {\n      // Legacy\n      window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder;\n      blob = new BlobBuilder();\n      blob.append(workerJs);\n      blob = blob.getBlob();\n    }\n    this.worker = new Worker(URL.createObjectURL(blob));\n\n\n    this.worker.onmessage = this._onMessageHandler.bind(this);\n\n    ROLLUP_REPLACE_BROWSER*/\n\n    /*ROLLUP_REPLACE_NODE\n\n    // Split by Comma, to remove the file header from the base 64 string\n    const workerAsString = readBase64String(workerUrl);\n    this.worker = new Worker(workerAsString, {\n      eval: true\n    });\n    this.worker.on('message', this._onMessageHandler.bind(this))\n\n    ROLLUP_REPLACE_NODE*/\n  }\n\n  postMessage(message, transfer) {\n    const messageObject = getSmartWorkerMessage(message, undefined, this.id);\n    const messageId = messageObject.messageId;\n\n    const messageIdListener = new Promise(resolve => {\n      // Listen for a message with the same message id to be returned\n      this.addMessageListener((responseMessage, messageListener) => {\n        const eventData = getEventData(responseMessage);\n        if (eventData.messageId === messageId) {\n          this.removeMessageListener(messageListener.id);\n          resolve(eventData);\n        }\n      });\n    });\n\n    this.worker.postMessage(messageObject, transfer);\n\n    return messageIdListener;\n  }\n\n  addMessageListener(callback) {\n    this.messageListeners.push({\n      id: generateId(),\n      callback: callback\n    });\n  }\n\n  removeMessageListener(id) {\n    let messageListenerIndex;\n    this.messageListeners.some((messageListener, index) => {\n      if (messageListener.id === id) {\n        messageListenerIndex = index;\n        return true;\n      }\n\n      return false;\n    });\n\n    if (messageListenerIndex !== undefined) {\n      this.messageListeners.splice(messageListenerIndex, 1);\n    }\n  }\n\n  _onMessageHandler(message) {\n    this.messageListeners.forEach(messageListener => {\n      messageListener.callback(message, messageListener);\n    });\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Function to handle on message from graphics worker\n// to the lib worker\nexport function graphicsWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION = libWorker.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf();\n      libWorker.WASMBOY_CURRENT_FRAME_SIZE = libWorker.wasmInstance.exports.FRAME_SIZE.valueOf();\n      // Forward to our lib worker\n      libWorker.graphicsWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION: libWorker.wasmInstance.exports.frameInProgressVideoOutputLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Function to handler audio worker on message to the libWorker\nexport function audioWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_SOUND_OUTPUT_LOCATION = libWorker.wasmInstance.exports.soundOutputLocation.valueOf();\n      // Forward to our lib worker\n      libWorker.audioWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_SOUND_OUTPUT_LOCATION: libWorker.wasmInstance.exports.soundOutputLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.AUDIO_LATENCY: {\n      libWorker.currentAudioLatencyInSeconds = eventData.message.latency;\n      return;\n    }\n  }\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Handler for when the controller worker posts to the libWorker\nexport function controllerWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.SET_JOYPAD_STATE: {\n      // Config will come in as an array, pass in values using apply\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n      const setJoypadStateParamsAsArray = eventData.message.setJoypadStateParamsAsArray;\n      libWorker.wasmInstance.exports.setJoypadState.apply(libWorker, setJoypadStateParamsAsArray);\n      return;\n    }\n  }\n}\n","// Private function to get the caretridge rom\nexport function getCartridgeRom(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return false;\n  }\n\n  // Depening on the rom type, we will have different rom sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = libWorker.wasmByteMemory[libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let romSize = undefined;\n  if (cartridgeType === 0x00) {\n    // ROM only, 32KB\n    romSize = 0x8000;\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 2MB of ROM\n    romSize = 0x200000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 256KB ROM\n    romSize = 0x40000;\n  } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {\n    // MBC3 2MB of ROM\n    romSize = 0x200000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {\n    // MBC5 8MB of ROM\n    romSize = 0x800000;\n  }\n\n  if (!romSize) {\n    return false;\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRom = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_GAME_BYTES_LOCATION,\n    libWorker.WASMBOY_GAME_BYTES_LOCATION + romSize\n  );\n  return cartridgeRom;\n}\n","// Private function to get the cartridge ram\nexport function getCartridgeRam(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return false;\n  }\n\n  // Depening on the rom type, we will have different ram sizes.\n  // Due memory restrictions described in:\n  // https://developers.google.com/web/fundamentals/instant-and-offline/web-storage/offline-for-pwa\n  // We will make sure to only store as much as we need per ROM :)\n\n  // Similar to `initializeCartridgeType()` in `wasm/memory/memory.ts`\n  // We will determine our cartridge type\n  // Get our game MBC type from the cartridge header\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  let cartridgeType = libWorker.wasmByteMemory[libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0147];\n\n  let ramSize = undefined;\n  if (cartridgeType === 0x00) {\n    // No memory for this rom type\n    return false;\n  } else if (cartridgeType >= 0x01 && cartridgeType <= 0x03) {\n    // MBC1 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x05 && cartridgeType <= 0x06) {\n    // MBC2 512X4 Bytes, 2KB\n    ramSize = 0x800;\n  } else if (cartridgeType >= 0x0f && cartridgeType <= 0x13) {\n    // MBC3 32KB of Ram\n    ramSize = 0x8000;\n  } else if (cartridgeType >= 0x19 && cartridgeType <= 0x1e) {\n    // MBC5 128KB of Ram\n    ramSize = 0x20000;\n  }\n\n  if (!ramSize) {\n    return false;\n  }\n\n  // Finally fill our cartridgeRam from the ram in memory\n  const cartridgeRam = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION,\n    libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION + ramSize\n  );\n  return cartridgeRam;\n}\n","// Function to get the cartridge header\nexport function getCartridgeHeader(libWorker) {\n  if (!libWorker.wasmByteMemory) {\n    return false;\n  }\n\n  // Header is at 0x0134 - 0x014F\n  // http://gbdev.gg8.se/wiki/articles/The_Cartridge_Header\n  const headerLength = 0x014f - 0x0134;\n  const headerLocation = libWorker.WASMBOY_GAME_BYTES_LOCATION + 0x0134;\n  const headerArray = libWorker.wasmByteMemory.slice(headerLocation, headerLocation + headerLength);\n\n  return headerArray;\n}\n","// Returns the standard 0xFFFF gameboy memory\n// You will normally see in gameboy docs.\n// This is returned from the core, and represents\n// This wasmboy gameboy state\nexport function getGameBoyMemory(libWorker) {\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION,\n    libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION + libWorker.WASMBOY_INTERNAL_MEMORY_SIZE\n  );\n}\n","// Function to get the current palette data for\n// GBC in memory. This is needed to load state with\n// The correct colors\nexport function getPaletteMemory(libWorker) {\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_PALETTE_MEMORY_LOCATION,\n    libWorker.WASMBOY_PALETTE_MEMORY_LOCATION + libWorker.WASMBOY_PALETTE_MEMORY_SIZE\n  );\n}\n","// Returns the internal savestate of the wasmboy core,\n// To save all soft values held in memory\nexport function getInternalState(libWorker) {\n  libWorker.wasmInstance.exports.saveState();\n  return libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_INTERNAL_STATE_LOCATION,\n    libWorker.WASMBOY_INTERNAL_STATE_LOCATION + libWorker.WASMBOY_INTERNAL_STATE_SIZE\n  );\n}\n","import { postMessage, onMessage } from '../../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../../worker/constants';\nimport { getEventData } from '../../../worker/util';\nimport { getSmartWorkerMessage } from '../../../worker/smartworker';\n\n// Our memory getters\nimport { getCartridgeRom } from './rom';\nimport { getCartridgeRam } from './ram';\nimport { getCartridgeHeader } from './header';\nimport { getGameBoyMemory } from './gameboymemory';\nimport { getPaletteMemory } from './palettememory';\nimport { getInternalState } from './internalstate';\n\n// On message handler for when memory worker\n// posts to lib Worker\nexport function memoryWorkerOnMessage(libWorker, event) {\n  // Handle our messages from the main thread\n  const eventData = getEventData(event);\n\n  switch (eventData.message.type) {\n    case WORKER_MESSAGE_TYPE.CLEAR_MEMORY: {\n      // Clear Wasm memory\n      // https://docs.google.com/spreadsheets/d/17xrEzJk5-sCB9J2mMJcVnzhbE-XH_NvczVSQH9OHvRk/edit?usp=sharing\n      for (let i = 0; i <= libWorker.wasmByteMemory.length; i++) {\n        libWorker.wasmByteMemory[i] = 0;\n      }\n\n      const wasmByteMemory = libWorker.wasmByteMemory.slice(0);\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.CLEAR_MEMORY_DONE,\n            wasmByteMemory: wasmByteMemory.buffer\n          },\n          eventData.messageId\n        ),\n        [wasmByteMemory.buffer]\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.GET_CONSTANTS: {\n      libWorker.WASMBOY_GAME_BYTES_LOCATION = libWorker.wasmInstance.exports.gameBytesLocation.valueOf();\n      (libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION = libWorker.wasmInstance.exports.gameRamBanksLocation.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_STATE_SIZE = libWorker.wasmInstance.exports.wasmBoyInternalStateSize.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_STATE_LOCATION = libWorker.wasmInstance.exports.wasmBoyInternalStateLocation.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_MEMORY_SIZE = libWorker.wasmInstance.exports.gameBoyInternalMemorySize.valueOf()),\n        (libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION = libWorker.wasmInstance.exports.gameBoyInternalMemoryLocation.valueOf()),\n        (libWorker.WASMBOY_PALETTE_MEMORY_SIZE = libWorker.wasmInstance.exports.gameboyColorPaletteSize.valueOf()),\n        (libWorker.WASMBOY_PALETTE_MEMORY_LOCATION = libWorker.wasmInstance.exports.gameboyColorPaletteLocation.valueOf());\n\n      // Forward to our lib worker\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.GET_CONSTANTS_DONE,\n            WASMBOY_GAME_BYTES_LOCATION: libWorker.wasmInstance.exports.gameBytesLocation.valueOf(),\n            WASMBOY_GAME_RAM_BANKS_LOCATION: libWorker.wasmInstance.exports.gameRamBanksLocation.valueOf(),\n            WASMBOY_INTERNAL_STATE_SIZE: libWorker.wasmInstance.exports.wasmBoyInternalStateSize.valueOf(),\n            WASMBOY_INTERNAL_STATE_LOCATION: libWorker.wasmInstance.exports.wasmBoyInternalStateLocation.valueOf(),\n            WASMBOY_INTERNAL_MEMORY_SIZE: libWorker.wasmInstance.exports.gameBoyInternalMemorySize.valueOf(),\n            WASMBOY_INTERNAL_MEMORY_LOCATION: libWorker.wasmInstance.exports.gameBoyInternalMemoryLocation.valueOf(),\n            WASMBOY_PALETTE_MEMORY_SIZE: libWorker.wasmInstance.exports.gameboyColorPaletteSize.valueOf(),\n            WASMBOY_PALETTE_MEMORY_LOCATION: libWorker.wasmInstance.exports.gameboyColorPaletteLocation.valueOf()\n          },\n          eventData.messageId\n        )\n      );\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.SET_MEMORY: {\n      const memoryKeys = Object.keys(eventData.message);\n\n      if (memoryKeys.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n        libWorker.wasmByteMemory.set(new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_ROM]), libWorker.WASMBOY_GAME_BYTES_LOCATION);\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.CARTRIDGE_RAM]),\n          libWorker.WASMBOY_GAME_RAM_BANKS_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.GAMEBOY_MEMORY]),\n          libWorker.WASMBOY_INTERNAL_MEMORY_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.PALETTE_MEMORY]),\n          libWorker.WASMBOY_PALETTE_MEMORY_LOCATION\n        );\n      }\n      if (memoryKeys.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n        libWorker.wasmByteMemory.set(\n          new Uint8Array(eventData.message[MEMORY_TYPE.INTERNAL_STATE]),\n          libWorker.WASMBOY_INTERNAL_STATE_LOCATION\n        );\n        libWorker.wasmInstance.exports.loadState();\n      }\n\n      libWorker.memoryWorkerPort.postMessage(\n        getSmartWorkerMessage(\n          {\n            type: WORKER_MESSAGE_TYPE.SET_MEMORY_DONE\n          },\n          eventData.messageId\n        )\n      );\n\n      return;\n    }\n\n    case WORKER_MESSAGE_TYPE.GET_MEMORY: {\n      // Construct our data object\n      const responseMemory = {\n        type: WORKER_MESSAGE_TYPE.GET_MEMORY\n      };\n      const responseTransferrables = [];\n\n      const memoryTypes = eventData.message.memoryTypes;\n\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_ROM)) {\n        const cartridgeRom = getCartridgeRom(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_ROM] = cartridgeRom;\n        responseTransferrables.push(cartridgeRom);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_RAM)) {\n        const cartridgeRam = getCartridgeRam(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_RAM] = cartridgeRam;\n        responseTransferrables.push(cartridgeRam);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.CARTRIDGE_HEADER)) {\n        const cartridgeHeader = getCartridgeHeader(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.CARTRIDGE_HEADER] = cartridgeHeader;\n        responseTransferrables.push(cartridgeHeader);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.GAMEBOY_MEMORY)) {\n        const gameboyMemory = getGameBoyMemory(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.GAMEBOY_MEMORY] = gameboyMemory;\n        responseTransferrables.push(gameboyMemory);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.PALETTE_MEMORY)) {\n        const paletteMemory = getPaletteMemory(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.PALETTE_MEMORY] = paletteMemory;\n        responseTransferrables.push(paletteMemory);\n      }\n      if (memoryTypes.includes(MEMORY_TYPE.INTERNAL_STATE)) {\n        libWorker.wasmInstance.exports.saveState();\n        const internalState = getInternalState(libWorker).buffer;\n        responseMemory[MEMORY_TYPE.INTERNAL_STATE] = internalState;\n        responseTransferrables.push(internalState);\n      }\n\n      libWorker.memoryWorkerPort.postMessage(getSmartWorkerMessage(responseMemory, eventData.messageId), responseTransferrables);\n\n      return;\n    }\n  }\n}\n","var wasmModuleUrl = \"data:application/wasm;base64,\";\n\n// Import object for our core js wrapper\n// Log throttling for our core\nlet logRequest = undefined;\nconst wasmImportObject = {\n  env: {\n    log: (message, arg0, arg1, arg2, arg3, arg4, arg5) => {\n      // Grab our string\n      var len = new Uint32Array(wasmInstance.exports.memory.buffer, message, 1)[0];\n      var str = String.fromCharCode.apply(null, new Uint16Array(wasmInstance.exports.memory.buffer, message + 4, len));\n      if (arg0 !== -9999) str = str.replace('$0', arg0);\n      if (arg1 !== -9999) str = str.replace('$1', arg1);\n      if (arg2 !== -9999) str = str.replace('$2', arg2);\n      if (arg3 !== -9999) str = str.replace('$3', arg3);\n      if (arg4 !== -9999) str = str.replace('$4', arg4);\n      if (arg5 !== -9999) str = str.replace('$5', arg5);\n      console.log('[WasmBoy] ' + str);\n    },\n    hexLog: (arg0, arg1, arg2, arg3, arg4, arg5) => {\n      if (!logRequest) {\n        // Grab our arguments, and log as hex\n        let logString = '[WasmBoy]';\n        if (arg0 !== -9999) logString += ` 0x${arg0.toString(16)} `;\n        if (arg1 !== -9999) logString += ` 0x${arg1.toString(16)} `;\n        if (arg2 !== -9999) logString += ` 0x${arg2.toString(16)} `;\n        if (arg3 !== -9999) logString += ` 0x${arg3.toString(16)} `;\n        if (arg4 !== -9999) logString += ` 0x${arg4.toString(16)} `;\n        if (arg5 !== -9999) logString += ` 0x${arg5.toString(16)} `; // Uncomment to unthrottle\n        //console.log(logString);\n        // Comment the lines below to disable throttle\n\n        logRequest = true;\n        setTimeout(() => {\n          console.log(logString);\n          logRequest = false;\n        }, Math.floor(Math.random() * 500));\n      }\n    }\n  }\n};\n\n// JS Implementation of Instantiating the Wasm Build\n\nconst wasmBrowserInstantiate = async wasmModuleUrl$$1 => {\n  let response = undefined; // Safari does not support .instantiateStreaming()\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiateStreaming\n\n  if (WebAssembly.instantiateStreaming) {\n    response = await WebAssembly.instantiateStreaming(fetch(wasmModuleUrl$$1), wasmImportObject);\n  } else {\n    const fetchAndInstantiateTask = async () => {\n      const wasmArrayBuffer = await fetch(wasmModuleUrl$$1).then(response => response.arrayBuffer());\n      return WebAssembly.instantiate(wasmArrayBuffer, wasmImportObject);\n    };\n\n    response = await fetchAndInstantiateTask();\n  }\n\n  return response;\n};\n\nconst readBase64Buffer = base64String => {\n  return Buffer.from(base64String.split(',')[1], 'base64');\n};\n\nconst wasmNodeInstantiate = async wasmModuleUrl$$1 => {\n  const wasmBuffer = readBase64Buffer(wasmModuleUrl$$1);\n  return await WebAssembly.instantiate(wasmBuffer, wasmImportObject);\n}; // Function to instantiate our wasm and respond back\n\n\nconst getWasmBoyWasmCore = async isInBrowser => {\n  let response = undefined; // Allow forcing the browser mode, but also check manually\n\n  if (isInBrowser) {\n    response = await wasmBrowserInstantiate(wasmModuleUrl);\n  } else {\n    if (typeof window !== 'undefined' || typeof self !== 'undefined') {\n      response = await wasmBrowserInstantiate(wasmModuleUrl);\n    } else {\n      response = await wasmNodeInstantiate(wasmModuleUrl);\n    }\n  } // Set our wasmInstance and byte memory in the main thread\n\n\n  const instance = response.instance;\n  const byteMemory = new Uint8Array(instance.exports.memory.buffer);\n  return {\n    instance,\n    byteMemory,\n    type: 'Web Assembly'\n  };\n};\n\nexport default getWasmBoyWasmCore;\n","// Common Static functions\n\n// Function to get performance timestamp\n// This is to support node vs. Browser\nexport const getPerformanceTimestamp = () => {\n  if (typeof window !== 'undefined') {\n    return performance.now();\n  }\n  return Date.now();\n};\n","import { getPerformanceTimestamp } from '../../common/common';\n\n// Function to add a timestamp to keep track\n// of how fast we are running\nexport function addTimeStamp(libWorker) {\n  // Track our Fps\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  const currentHighResTime = getPerformanceTimestamp();\n  while (libWorker.fpsTimeStamps[0] < currentHighResTime - 1000) {\n    libWorker.fpsTimeStamps.shift();\n  }\n  libWorker.fpsTimeStamps.push(currentHighResTime);\n\n  libWorker.timeStampsUntilReady--;\n  if (libWorker.timeStampsUntilReady < 0) {\n    libWorker.timeStampsUntilReady = 0;\n  }\n\n  return currentHighResTime;\n}\n\n// Function to wait for a specified number,\n// of timestamps before setting the framerate\nexport function waitForTimeStampsForFrameRate(libWorker) {\n  if (libWorker.options.gameboyFrameRate <= 90) {\n    libWorker.timeStampsUntilReady = Math.floor(libWorker.options.gameboyFrameRate) * 1.25;\n  } else {\n    // Fast stretching should be hardcoded, that way it doesn't just say a large number for a long time\n    libWorker.timeStampsUntilReady = 120;\n  }\n}\n","// Start our update and render process\n// Can't time by raf, as raf is not garunteed to be 60fps\n// Need to run like a web game, where updates to the state of the core are done a 60 fps\n// but we can render whenever the user would actually see the changes browser side in a raf\n// https://developer.mozilla.org/en-US/docs/Games/Anatomy\n\n// Imports\nimport { postMessage } from '../../worker/workerapi';\nimport { getSmartWorkerMessage } from '../../worker/smartworker';\nimport { WORKER_MESSAGE_TYPE, MEMORY_TYPE } from '../../worker/constants';\n\n// Memory\nimport { getCartridgeRam } from './memory/ram.js';\nimport { getGameBoyMemory } from './memory/gameboymemory.js';\nimport { getPaletteMemory } from './memory/palettememory.js';\nimport { getInternalState } from './memory/internalstate.js';\n\n// Timestamps\nimport { getPerformanceTimestamp } from '../../common/common';\nimport { addTimeStamp, waitForTimeStampsForFrameRate } from './timestamp';\n\n// Some variables to help with Audio Latency\n// 0.25 (quarter of a second), just felt right from testing :)\nconst MAX_AUDIO_LATENCY = 0.25;\n// Pass over samples once we have enough worth playing:\n// https://www.reddit.com/r/EmuDev/comments/5gkwi5/gb_apu_sound_emulation/\nconst AUDIO_BUFFER_SIZE = 1024;\n\n// FPS measuring\nlet currentHighResTime;\nlet currentFps;\n\n// interval to set timeout\nlet intervalRate;\n\nfunction scheduleNextUpdate(libWorker) {\n  // Get our high res time\n  const highResTime = getPerformanceTimestamp();\n\n  // Find how long it has been since the last timestamp\n  const timeSinceLastTimestamp = highResTime - libWorker.fpsTimeStamps[libWorker.fpsTimeStamps.length - 1];\n\n  // Get the next time we should update using our interval rate\n  let nextUpdateTime = intervalRate - timeSinceLastTimestamp;\n  if (nextUpdateTime < 0) {\n    nextUpdateTime = 0;\n  }\n\n  libWorker.updateId = setTimeout(() => {\n    update(libWorker);\n  }, Math.floor(nextUpdateTime));\n}\n\n// Function to run an update on the emulator itself\nexport function update(libWorker, passedIntervalRate) {\n  // Don't run if paused\n  if (libWorker.paused) {\n    return true;\n  }\n\n  // Set the intervalRate if it was passed\n  if (passedIntervalRate !== undefined) {\n    intervalRate = passedIntervalRate;\n  }\n\n  // Set a timestamp for this moment\n  // And make sure we are on track for FPS\n  currentFps = libWorker.getFPS();\n  if (currentFps > libWorker.options.gameboyFrameRate + 1) {\n    // Pop a timestamp off of the front\n    // This is to avoid infinite loop here on loadstate\n    libWorker.fpsTimeStamps.shift();\n    scheduleNextUpdate(libWorker);\n    return true;\n  } else {\n    currentHighResTime = addTimeStamp(libWorker);\n  }\n\n  // Check if we are outputting audio\n  const shouldCheckAudio = !libWorker.options.headless && !libWorker.pauseFpsThrottle && libWorker.options.isAudioEnabled;\n\n  // Execute\n  // Wrapped in promise to better handle audio slowdowns and things of that sort\n  const executePromise = new Promise(resolve => {\n    // Update (Execute a frame)\n    let response;\n    if (shouldCheckAudio) {\n      executeAndCheckAudio(libWorker, resolve);\n    } else {\n      response = libWorker.wasmInstance.exports.executeFrame();\n      resolve(response);\n    }\n  });\n\n  executePromise.then(response => {\n    // Handle our update() response\n    if (response >= 0) {\n      // Pass messages to everyone\n      postMessage(\n        getSmartWorkerMessage({\n          type: WORKER_MESSAGE_TYPE.UPDATED,\n          fps: currentFps\n        })\n      );\n\n      // Check if we have frameskip\n      let shouldSkipRenderingFrame = false;\n      if (libWorker.options.frameSkip && libWorker.options.frameSkip > 0) {\n        libWorker.frameSkipCounter++;\n\n        if (libWorker.frameSkipCounter <= libWorker.options.frameSkip) {\n          shouldSkipRenderingFrame = true;\n        } else {\n          libWorker.frameSkipCounter = 0;\n        }\n      }\n\n      // Transfer Graphics\n      if (!shouldSkipRenderingFrame) {\n        const graphicsFrameEndIndex = libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION + libWorker.WASMBOY_CURRENT_FRAME_SIZE;\n        const graphicsFrameBuffer = libWorker.wasmByteMemory.slice(libWorker.WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION, graphicsFrameEndIndex)\n          .buffer;\n        //libWorker.graphicsWorkerPort.postMessage(graphicsFrameBuffer, [graphicsFrameBuffer]);\n        libWorker.graphicsWorkerPort.postMessage(\n          getSmartWorkerMessage({\n            type: WORKER_MESSAGE_TYPE.UPDATED,\n            graphicsFrameBuffer\n          }),\n          [graphicsFrameBuffer]\n        );\n      }\n\n      // Transfer Memory for things like save states\n      const memoryObject = {\n        type: WORKER_MESSAGE_TYPE.UPDATED\n      };\n      memoryObject[MEMORY_TYPE.CARTRIDGE_RAM] = getCartridgeRam(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.GAMEBOY_MEMORY] = getGameBoyMemory(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.PALETTE_MEMORY] = getPaletteMemory(libWorker).buffer;\n      memoryObject[MEMORY_TYPE.INTERNAL_STATE] = getInternalState(libWorker).buffer;\n      libWorker.memoryWorkerPort.postMessage(getSmartWorkerMessage(memoryObject), [\n        memoryObject[MEMORY_TYPE.CARTRIDGE_RAM],\n        memoryObject[MEMORY_TYPE.GAMEBOY_MEMORY],\n        memoryObject[MEMORY_TYPE.PALETTE_MEMORY],\n        memoryObject[MEMORY_TYPE.INTERNAL_STATE]\n      ]);\n\n      scheduleNextUpdate(libWorker);\n    } else {\n      postMessage(\n        getSmartWorkerMessage({\n          type: WORKER_MESSAGE_TYPE.CRASHED\n        })\n      );\n      libWorker.paused = true;\n    }\n  });\n}\n\n// If audio is enabled, sync by audio\n// Audio will pass us its forward latency, and if it is too far ahead,\n// Then we can wait a little bit to let audio catch up\n// 0.25 (quarter of a second), just felt right from testing :)\nfunction executeAndCheckAudio(libWorker, resolve) {\n  // Get our response\n  const response = libWorker.wasmInstance.exports.executeFrameAndCheckAudio(AUDIO_BUFFER_SIZE);\n\n  // If our response is not 1, simply resolve\n  if (response !== 1) {\n    resolve(response);\n  }\n\n  // Do some audio magic\n  if (response === 1) {\n    // Get our audioQueueIndex\n    const audioQueueIndex = libWorker.wasmInstance.exports.getAudioQueueIndex();\n\n    // Check if we are sending too much audio\n    const isTooMuchLatency = libWorker.currentAudioLatencyInSeconds > MAX_AUDIO_LATENCY;\n    const isRunningFullSpeed = currentFps >= libWorker.options.gameboyFrameRate;\n\n    if (isTooMuchLatency && isRunningFullSpeed) {\n      sendAudio(libWorker, audioQueueIndex);\n      // Wait, Set a timeout for when we would like to\n      // Continue executing. * 1000 for seconds -> milli\n      // Wait for half the difference, since it may take time to execute, and things\n      const latencyDifferenceInSeconds = libWorker.currentAudioLatencyInSeconds - MAX_AUDIO_LATENCY;\n      const latencyDifferenceInMilli = Math.floor(latencyDifferenceInSeconds * 1000);\n      setTimeout(() => {\n        waitForTimeStampsForFrameRate(libWorker);\n        executeAndCheckAudio(libWorker, resolve);\n      }, Math.floor(latencyDifferenceInMilli / 10));\n    } else {\n      sendAudio(libWorker, audioQueueIndex);\n      executeAndCheckAudio(libWorker, resolve);\n    }\n  }\n}\n\nfunction sendAudio(libWorker, audioQueueIndex) {\n  // Send out our audio\n  // audioQueueIndex * 2, because audio Queue index represents 1 sample,\n  // for left AND right channel. Therefore the end index is, twice\n  // of the audioQueueIndex\n  const audioBuffer = libWorker.wasmByteMemory.slice(\n    libWorker.WASMBOY_SOUND_OUTPUT_LOCATION,\n    libWorker.WASMBOY_SOUND_OUTPUT_LOCATION + audioQueueIndex * 2\n  ).buffer;\n  libWorker.audioWorkerPort.postMessage(\n    getSmartWorkerMessage({\n      type: WORKER_MESSAGE_TYPE.UPDATED,\n      audioBuffer,\n      numberOfSamples: audioQueueIndex,\n      fps: currentFps,\n      allowFastSpeedStretching: libWorker.options.gameboyFrameRate > 60\n    }),\n    [audioBuffer]\n  );\n  libWorker.wasmInstance.exports.resetAudioQueue();\n}\n","// Web worker for wasmboy lib\n// Will be used for running wasm, and controlling child workers.\n\n// Using transferables: https://stackoverflow.com/questions/16071211/using-transferable-objects-from-a-web-worker\n\nimport { postMessage, onMessage } from '../../worker/workerapi';\nimport { WORKER_MESSAGE_TYPE, WORKER_ID } from '../../worker/constants';\nimport { getEventData, isInBrowser } from '../../worker/util';\nimport { getSmartWorkerMessage } from '../../worker/smartworker';\n\n// Post message handlers\nimport { graphicsWorkerOnMessage } from './graphics/onmessage';\nimport { audioWorkerOnMessage } from './audio/onmessage';\nimport { controllerWorkerOnMessage } from './controller/onmessage';\nimport { memoryWorkerOnMessage } from './memory/onmessage';\n\n// Only One response will be used on build time\n// Using Babel plugin to filter imports\nimport getWasmBoyWasmCore from '../../../dist/core/getWasmBoyWasmCore.esm';\nimport getWasmBoyTsCore from '../../../dist/core/getWasmBoyTsCore.esm';\n\n// Update to run the core emulator\nimport { update } from './update';\n\n// Timestamps\nimport { waitForTimeStampsForFrameRate } from './timestamp';\n\n// Our stateful object\n// Representing our lib worker as a singleton\n// Not using normal classes because:\n// Class functions weren't working for some odd reason, and 'this' was getting wonky\nlet libWorker;\nlibWorker = {\n  // Wasmboy Module Ports\n  graphicsWorkerPort: undefined,\n  memoryWorkerPort: undefined,\n  controllerWorkerPort: undefined,\n  audioWorkerPort: undefined,\n\n  // Wasm Module Properties\n  wasmInstance: undefined,\n  wasmByteMemory: undefined,\n\n  // Lib options\n  options: undefined,\n\n  // Some Constants from the wasm module\n  WASMBOY_GAME_BYTES_LOCATION: 0,\n  WASMBOY_GAME_RAM_BANKS_LOCATION: 0,\n  WASMBOY_INTERNAL_STATE_SIZE: 0,\n  WASMBOY_INTERNAL_STATE_LOCATION: 0,\n  WASMBOY_INTERNAL_MEMORY_SIZE: 0,\n  WASMBOY_INTERNAL_MEMORY_LOCATION: 0,\n  WASMBOY_PALETTE_MEMORY_SIZE: 0,\n  WASMBOY_PALETTE_MEMORY_LOCATION: 0,\n  WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION: 0,\n  WASMBOY_CURRENT_FRAME_SIZE: 0,\n  WASMBOY_SOUND_OUTPUT_LOCATION: 0,\n\n  // Playing state\n  paused: true,\n\n  // Our update setTimeout ref\n  updateId: undefined,\n\n  // Our fps timestamps\n  timeStampsUntilReady: 0,\n  fpsTimeStamps: [],\n\n  // Frame Skipping\n  frameSkipCounter: 0,\n\n  // Audio latency\n  currentAudioLatencyInSeconds: 0,\n\n  // Message Handler from the main thread\n  messageHandler: event => {\n    // Handle our messages from the main thread\n    const eventData = getEventData(event);\n\n    switch (eventData.message.type) {\n      case WORKER_MESSAGE_TYPE.CONNECT: {\n        // Assign our worker ports on connect\n        if (eventData.message.workerId === WORKER_ID.GRAPHICS) {\n          libWorker.graphicsWorkerPort = eventData.message.ports[0];\n          onMessage(graphicsWorkerOnMessage.bind(undefined, libWorker), libWorker.graphicsWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.MEMORY) {\n          libWorker.memoryWorkerPort = eventData.message.ports[0];\n          onMessage(memoryWorkerOnMessage.bind(undefined, libWorker), libWorker.memoryWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.CONTROLLER) {\n          libWorker.controllerWorkerPort = eventData.message.ports[0];\n          onMessage(controllerWorkerOnMessage.bind(undefined, libWorker), libWorker.controllerWorkerPort);\n        } else if (eventData.message.workerId === WORKER_ID.AUDIO) {\n          libWorker.audioWorkerPort = eventData.message.ports[0];\n          onMessage(audioWorkerOnMessage.bind(undefined, libWorker), libWorker.audioWorkerPort);\n        }\n\n        // Simply post back that we are ready\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.INSTANTIATE_WASM: {\n        const instantiateTask = async () => {\n          let response;\n          // Only One response will be used on build time\n          // Using Babel plugin to filter imports\n          response = await getWasmBoyWasmCore(isInBrowser);\n          response = await getWasmBoyTsCore();\n\n          libWorker.wasmInstance = response.instance;\n          libWorker.wasmByteMemory = response.byteMemory;\n          postMessage(\n            getSmartWorkerMessage(\n              {\n                type: response.type\n              },\n              eventData.messageId\n            )\n          );\n          return;\n        };\n        instantiateTask();\n        return;\n      }\n      case WORKER_MESSAGE_TYPE.CONFIG: {\n        // Config will come in as an array, pass in values using apply\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\n        const config = eventData.message.config;\n        libWorker.wasmInstance.exports.config.apply(libWorker, config);\n        libWorker.options = eventData.message.options;\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.RESET_AUDIO_QUEUE: {\n        // Reset the audio queue index to stop weird pauses when trying to load a game\n        libWorker.wasmInstance.exports.resetAudioQueue();\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.PLAY: {\n        if (!libWorker.paused || !libWorker.wasmInstance || !libWorker.wasmByteMemory) {\n          postMessage(getSmartWorkerMessage({ error: true }, eventData.messageId));\n          return;\n        }\n\n        // Re-initialize some of our values\n        libWorker.paused = false;\n        libWorker.fpsTimeStamps = [];\n        libWorker.frameSkipCounter = 0;\n        libWorker.currentAudioLatencyInSeconds = 0;\n\n        // 1000 / 60 = 60fps\n        // Add one to the framerate, as we would rather be slightly faster,\n        // than slightly slower\n        const intervalRate = 1000 / libWorker.options.gameboyFrameRate;\n        update(libWorker, intervalRate);\n\n        waitForTimeStampsForFrameRate(libWorker);\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.PAUSE: {\n        // Call our update\n        libWorker.paused = true;\n        if (libWorker.updateId) {\n          clearTimeout(libWorker.updateId);\n          libWorker.updateId = undefined;\n        }\n        postMessage(getSmartWorkerMessage(undefined, eventData.messageId));\n        return;\n      }\n\n      // Debugging Messages\n      case WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT: {\n        let response;\n        if (eventData.message.parameters) {\n          response = libWorker.wasmInstance.exports[eventData.message.export].apply(undefined, eventData.message.parameters);\n        } else {\n          response = libWorker.wasmInstance.exports[eventData.message.export]();\n        }\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.GET_WASM_MEMORY_SECTION: {\n        let start = 0;\n        let end = libWorker.wasmByteMemory.length;\n        if (eventData.message.start) {\n          start = eventData.message.start;\n        }\n        if (eventData.message.end) {\n          end = eventData.message.end;\n        }\n\n        const response = libWorker.wasmByteMemory.slice(start, end).buffer;\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.RUN_WASM_EXPORT,\n              response: response\n            },\n            eventData.messageId\n          ),\n          [response]\n        );\n        return;\n      }\n\n      case WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT: {\n        const response = libWorker.wasmInstance.exports[eventData.message.constant].valueOf();\n        postMessage(\n          getSmartWorkerMessage(\n            {\n              type: WORKER_MESSAGE_TYPE.GET_WASM_CONSTANT,\n              response: response\n            },\n            eventData.messageId\n          )\n        );\n        return;\n      }\n\n      default: {\n        //handle other messages from main\n        console.log(eventData);\n      }\n    }\n  },\n\n  // Function to return the current FPS\n  // http://www.growingwiththeweb.com/2017/12/fast-simple-js-fps-counter.html\n  getFPS: () => {\n    if (libWorker.timeStampsUntilReady > 0) {\n      return libWorker.options.gameboyFrameRate;\n    } else if (libWorker.fpsTimeStamps) {\n      return libWorker.fpsTimeStamps.length;\n    }\n\n    return 0;\n  }\n};\n\n// Assign the worker a message handler\nonMessage(libWorker.messageHandler);\n"],"names":["getEventData","event","data","isInBrowser","self","parentPort","require","postMessage","message","transferArray","onMessage","callback","port","console","error","onmessage","on","WORKER_MESSAGE_TYPE","CONNECT","INSTANTIATE_WASM","CLEAR_MEMORY","CLEAR_MEMORY_DONE","GET_MEMORY","SET_MEMORY","SET_MEMORY_DONE","GET_CONSTANTS","GET_CONSTANTS_DONE","CONFIG","RESET_AUDIO_QUEUE","PLAY","PAUSE","UPDATED","CRASHED","SET_JOYPAD_STATE","AUDIO_LATENCY","RUN_WASM_EXPORT","GET_WASM_MEMORY_SECTION","GET_WASM_CONSTANT","WORKER_ID","LIB","GRAPHICS","MEMORY","CONTROLLER","AUDIO","MEMORY_TYPE","CARTRIDGE_RAM","CARTRIDGE_ROM","CARTRIDGE_HEADER","GAMEBOY_MEMORY","PALETTE_MEMORY","INTERNAL_STATE","idCounter","generateId","randomId","Math","random","toString","replace","substr","id","getSmartWorkerMessage","messageId","workerId","graphicsWorkerOnMessage","libWorker","eventData","type","WASMBOY_CURRENT_FRAME_OUTPUT_LOCATION","wasmInstance","exports","frameInProgressVideoOutputLocation","valueOf","WASMBOY_CURRENT_FRAME_SIZE","FRAME_SIZE","graphicsWorkerPort","audioWorkerOnMessage","WASMBOY_SOUND_OUTPUT_LOCATION","soundOutputLocation","audioWorkerPort","currentAudioLatencyInSeconds","latency","controllerWorkerOnMessage","setJoypadStateParamsAsArray","setJoypadState","apply","getCartridgeRom","wasmByteMemory","cartridgeType","WASMBOY_GAME_BYTES_LOCATION","romSize","undefined","cartridgeRom","slice","getCartridgeRam","ramSize","cartridgeRam","WASMBOY_GAME_RAM_BANKS_LOCATION","getCartridgeHeader","headerLength","headerLocation","headerArray","getGameBoyMemory","WASMBOY_INTERNAL_MEMORY_LOCATION","WASMBOY_INTERNAL_MEMORY_SIZE","getPaletteMemory","WASMBOY_PALETTE_MEMORY_LOCATION","WASMBOY_PALETTE_MEMORY_SIZE","getInternalState","saveState","WASMBOY_INTERNAL_STATE_LOCATION","WASMBOY_INTERNAL_STATE_SIZE","memoryWorkerOnMessage","i","length","memoryWorkerPort","buffer","gameBytesLocation","gameRamBanksLocation","wasmBoyInternalStateSize","wasmBoyInternalStateLocation","gameBoyInternalMemorySize","gameBoyInternalMemoryLocation","gameboyColorPaletteSize","gameboyColorPaletteLocation","memoryKeys","Object","keys","includes","set","Uint8Array","loadState","responseMemory","responseTransferrables","memoryTypes","push","cartridgeHeader","gameboyMemory","paletteMemory","internalState","wasmModuleUrl","logRequest","wasmImportObject","env","log","arg0","arg1","arg2","arg3","arg4","arg5","len","Uint32Array","memory","str","String","fromCharCode","Uint16Array","hexLog","logString","setTimeout","floor","wasmBrowserInstantiate","wasmModuleUrl$$1","response","WebAssembly","instantiateStreaming","fetch","fetchAndInstantiateTask","wasmArrayBuffer","then","arrayBuffer","instantiate","readBase64Buffer","base64String","Buffer","from","split","wasmNodeInstantiate","wasmBuffer","getWasmBoyWasmCore","window","instance","byteMemory","getPerformanceTimestamp","performance","now","Date","addTimeStamp","currentHighResTime","fpsTimeStamps","shift","timeStampsUntilReady","waitForTimeStampsForFrameRate","options","gameboyFrameRate","MAX_AUDIO_LATENCY","AUDIO_BUFFER_SIZE","currentFps","intervalRate","scheduleNextUpdate","highResTime","timeSinceLastTimestamp","nextUpdateTime","updateId","update","passedIntervalRate","paused","getFPS","shouldCheckAudio","headless","pauseFpsThrottle","isAudioEnabled","executePromise","Promise","resolve","executeAndCheckAudio","executeFrame","fps","shouldSkipRenderingFrame","frameSkip","frameSkipCounter","graphicsFrameEndIndex","graphicsFrameBuffer","memoryObject","executeFrameAndCheckAudio","audioQueueIndex","getAudioQueueIndex","isTooMuchLatency","isRunningFullSpeed","sendAudio","latencyDifferenceInSeconds","latencyDifferenceInMilli","audioBuffer","numberOfSamples","allowFastSpeedStretching","resetAudioQueue","controllerWorkerPort","messageHandler","ports","bind","instantiateTask","config","clearTimeout","parameters","export","start","end","constant"],"mappings":"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"}